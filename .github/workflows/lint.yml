name: Lint

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  lint:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-lint-${{ hashFiles('requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-lint-
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install black flake8 mypy isort
        # Install project dependencies for import checking
        pip install -r requirements.txt
    
    - name: Check imports with isort
      run: |
        # Check import organization (informational only)
        isort --check-only --diff . || echo "Import organization could be improved"
    
    - name: Check code formatting with black
      run: |
        # Check code formatting (informational only for now)
        black --check --diff . || echo "Code formatting could be improved"
    
    - name: Lint with flake8
      run: |
        # Stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # Check for other issues but don't fail the build
        flake8 . --count --exit-zero --statistics || echo "Linting completed with warnings"
    
    - name: Security check with bandit
      run: |
        # Install and run security linter
        pip install bandit
        bandit -r . -f json -o bandit-report.json || echo "Security scan completed"
    
    - name: Upload lint results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: lint-results
        path: |
          bandit-report.json