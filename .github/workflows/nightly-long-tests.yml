name: Nightly Long-Running Tests

on:
  schedule:
    - cron: '0 6 * * *' # 06:00 UTC daily
  workflow_dispatch: {}

permissions:
  contents: read

concurrency:
  group: nightly-long-${{ github.ref }}
  cancel-in-progress: false

jobs:
  long-tests:
    # Run nightly only on default branch; allow manual on any branch
    if: ${{ github.event_name != 'schedule' || github.ref == 'refs/heads/main' }}
    runs-on: ubuntu-latest
    timeout-minutes: 60
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest

      - name: Run heavy test modules with timings
        env:
          FLASK_ENV: testing
          SECRET_KEY: test-secret-key
          JWT_SECRET_KEY: test-jwt-secret
          NIGHTLY_MENTION: ${{ vars.NIGHTLY_MENTION }}
        run: |
          set +e
          FAILED=""
          echo "Running tests/test_advanced.py"
          pytest -q tests/test_advanced.py --durations=10
          if [ $? -ne 0 ]; then FAILED="$FAILED tests/test_advanced.py"; fi
          echo "Running tests/test_genetic_edge_case.py"
          pytest -q tests/test_genetic_edge_case.py --durations=10
          if [ $? -ne 0 ]; then FAILED="$FAILED tests/test_genetic_edge_case.py"; fi
          echo "FAILED=$FAILED" >> $GITHUB_ENV
          if [ -n "$FAILED" ]; then echo "Some tests failed: $FAILED"; fi

      - name: Upload logs (if any)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: nightly-long-tests-artifacts
          path: |
            .pytest_cache
            **/test-results*.xml
          if-no-files-found: ignore

      - name: Create issue on failure
        if: ${{ env.FAILED != '' }}
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const failed = process.env.FAILED || '';
            const mention = process.env.NIGHTLY_MENTION || '';
            const { context, github } = require('@actions/github');
            const repo = context.repo;
            const title = `Nightly long tests failed: ${new Date().toISOString().slice(0,10)}`;
            const body = [
              'The following long-running test modules failed:',
              '',
              '```
'+failed+'\n```',
              '',
              `Run: https://github.com/${repo.owner}/${repo.repo}/actions/runs/${context.runId}`,
              mention ? `\nCC: ${mention}` : ''
            ].join('\n');
            await github.rest.issues.create({ owner: repo.owner, repo: repo.repo, title, body, labels: ['ci', 'nightly', 'failing-tests'] });
