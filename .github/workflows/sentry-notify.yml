name: Notify Sentry

on:
  issues:
    types: [closed]

# Use .env.render (repository file) instead of GitHub secret (not recommended for real secrets)

jobs:
  notify-sentry:
    runs-on: ubuntu-latest
    steps:
      - name: üì• Checkout repository
        uses: actions/checkout@v4

      - name: üîê Load Sentry credentials from .env.render
        id: load-env
        run: |
          if [ -f .env.render ]; then
            echo "Found .env.render; extracting SENTRY_AUTH_TOKEN"
            token=$(grep -E '^SENTRY_AUTH_TOKEN=' .env.render | head -1 | cut -d= -f2- | tr -d '\r' || true)
            if [ -n "$token" ]; then
              echo "::add-mask::$token"  # Mask in logs
              echo "SENTRY_AUTH_TOKEN=$token" >> $GITHUB_ENV
              echo "loaded=true" >> $GITHUB_OUTPUT
            else
              echo "No SENTRY_AUTH_TOKEN entry in .env.render"; echo "loaded=false" >> $GITHUB_OUTPUT
            fi
          else
            echo ".env.render not found"; echo "loaded=false" >> $GITHUB_OUTPUT
          fi

      - name: üì£ Notify Sentry (issue closed)
        if: steps.load-env.outputs.loaded == 'true'
        env:
          SENTRY_AUTH_TOKEN: ${{ env.SENTRY_AUTH_TOKEN }}
          SENTRY_ORG: routeforce-routing
          SENTRY_PROJECT: routeforce-api
        run: |
          echo "Sending resolution notification to Sentry..."
          curl -s -X POST "https://sentry.io/api/0/projects/${SENTRY_ORG}/${SENTRY_PROJECT}/issues/" \
            -H "Authorization: Bearer $SENTRY_AUTH_TOKEN" \
            -H "Content-Type: application/json" \
            -d '{"status":"resolved"}' || echo "‚ö†Ô∏è Sentry notification failed"
          echo "‚úÖ Notification step completed (even if Sentry rejected it)"