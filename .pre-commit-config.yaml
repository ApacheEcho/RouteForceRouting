repos:
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.6.0
    hooks:
      - id: check-merge-conflict
      - id: check-yaml
      - id: end-of-file-fixer
      - id: trailing-whitespace
  - repo: https://github.com/psf/black
    rev: 24.10.0
    hooks:
      - id: black
        args: ["--line-length=100"]
        language_version: python3
  - repo: https://github.com/pycqa/isort
    rev: 5.13.2
    hooks:
      - id: isort
        args: ["--profile=black", "--filter-files"]
  - repo: https://github.com/pycqa/flake8
    rev: 7.1.1
    hooks:
      - id: flake8
        args: ["--max-line-length=100", "--extend-ignore=E203,W503"]
  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: v1.11.2
    hooks:
      - id: mypy
        # generated by ChatGPT agent
  - repo: local
    hooks:
      - id: pytest
        name: pytest
        entry: pytest --maxfail=1 --disable-warnings -q
        language: system
        pass_filenames: false
        # generated by ChatGPT agent
  - repo: https://github.com/Yelp/detect-secrets
    rev: v1.5.0
    hooks:
      - id: detect-secrets
        args:
          - "--baseline"
          - ".secrets.baseline"
          - "--exclude-files"
          - "(\\.md$|^tests/|^docs/|^\\.vscode/|^frontend/|node_modules|package-lock\\.json|^codeql-database/|^mobile/react-native/node_modules/)"
        exclude: ^(docs/|tests/|.*\\.md$|\.vscode/|frontend/|codeql-database/|mobile/react-native/node_modules/)
  - repo: https://github.com/jendrikseipp/vulture
    rev: 'v2.11'
    hooks:
      - id: vulture
        args: ["--min-confidence", "80"]
        # generated by ChatGPT agent
  - repo: local
    hooks:
      - id: radon-threshold
        name: radon cc (complexity threshold)
        entry: bash -c 'radon cc -s -j . | jq -r "..|objects|.rank? // empty" | sort | tail -n1 | grep -Eq "^[A-B]$"'
        language: system
        pass_filenames: false
        # generated by ChatGPT agent
  - repo: local
    hooks:
      - id: mutmut
        name: mutmut (mutation testing)
        entry: bash -c 'mutmut run --silent && survived=$(mutmut results | grep -c "SURVIVED" || true) && killed=$(mutmut results | grep -c "killed" || true) && total=$((survived + killed)) && if [ "$total" -eq 0 ]; then echo "No mutations found"; exit 0; fi && score=$(( 100 * killed / total )) && echo "Mutation Score: $score%" && [ "$score" -ge 90 ]'
        language: system
        pass_filenames: false
        # generated by ChatGPT agent
  - repo: https://github.com/PyCQA/bandit
    rev: 1.7.9
    hooks:
      - id: bandit
        args: ["-r", "app/", "-ll"]
