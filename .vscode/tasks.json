{
	"version": "2.0.0",
	"tasks": [
        {
            "type": "shell",
            "label": "Run scoring API tests (all endpoints)",
            "command": "pytest -v app/routes/scoring.py",
            "group": "test",
            "isBackground": false
        },
        {
            "label": "üöÄ Start Flask App (Codespaces)",
            "type": "shell", 
            "command": "python",
            "args": ["app.py"],
            "group": {
                "kind": "build",
                "isDefault": true
            },
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "new"
            },
            "options": {
                "env": {
                    "FLASK_APP": "app.py",
                    "FLASK_ENV": "development", 
                    "FLASK_DEBUG": "1",
                    "DATABASE_URL": "postgresql://routeforce:password@postgres:5432/routeforce_dev",
                    "REDIS_URL": "redis://redis:6379/0"
                }
            },
            "isBackground": true,
            "problemMatcher": {
                "pattern": {
                    "regexp": "^(.*):(\\d+):(\\d+):\\s+(warning|error):\\s+(.*)$",
                    "file": 1,
                    "line": 2,
                    "column": 3,
                    "severity": 4,
                    "message": 5
                }
            }
        },
        {
            "label": "üß™ Run Tests (Codespaces)",
            "type": "shell",
            "command": "python", 
            "args": ["-m", "pytest", "-v", "--tb=short"],
            "group": "test",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": true,
                "panel": "shared"
            },
            "options": {
                "env": {
                    "PYTHONPATH": "${workspaceFolder}",
                    "FLASK_ENV": "testing",
                    "DATABASE_URL": "postgresql://routeforce:password@postgres:5432/routeforce_test"
                }
            },
            "problemMatcher": "$python"
        },
        {
            "label": "üîß Install Dependencies (Codespaces)",
            "type": "shell",
            "command": "pip",
            "args": ["install", "-r", "requirements.txt", "-r", "requirements-dev.txt"],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared"
            }
        },
        {
            "label": "üîç Check Service Health (Codespaces)",
            "type": "shell",
            "command": "sh",
            "args": ["-c", "pg_isready -h postgres -p 5432 -U routeforce && redis-cli -h redis ping"],
            "group": "test",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": true,
                "panel": "shared"
            }
        },
        {
            "label": "ü§ñ ChatGPT: Analyze Code Quality",
            "type": "shell",
            "command": "echo",
            "args": ["'Use Ctrl+Shift+F to analyze code quality with ChatGPT'"],
            "group": "test",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": true,
                "panel": "shared"
            }
        },
        {
            "label": "ü§ñ ChatGPT: Generate Tests",
            "type": "shell", 
            "command": "echo",
            "args": ["'Select code and use Ctrl+Shift+T to generate tests with ChatGPT'"],
            "group": "test",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": true,
                "panel": "shared"
            }
        },
        {
            "label": "ü§ñ ChatGPT: Add Documentation",
            "type": "shell",
            "command": "echo", 
            "args": ["'Select code and use Ctrl+Shift+D to add documentation with ChatGPT'"],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": true,
                "panel": "shared"
            }
        },
        {
            "label": "ü§ñ ChatGPT: Refactor Code",
            "type": "shell",
            "command": "echo",
            "args": ["'Select code and use Ctrl+Shift+R to refactor with ChatGPT'"],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": true,
                "panel": "shared"
            }
        },
        {
            "label": "üß™ Run Tests (Local Python3)",
            "type": "shell",
            "command": "sh",
            "args": [
                "-c",
                "set -e\nif [ ! -x ./.venv/bin/python ]; then python3 -m venv .venv; fi\n./.venv/bin/python -m pytest -v --tb=short"
            ],
            "group": "test",
            "options": {
                "env": {
                    "PYTHONPATH": "${workspaceFolder}",
                    "FLASK_ENV": "testing",
                    "DATABASE_URL": "sqlite:///test.db"
                }
            },
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": true,
                "panel": "shared"
            }
        },
        {
            "label": "üîß Install Dependencies (Local)",
            "type": "shell",
            "command": "sh",
            "args": [
                "-c",
                "set -euo pipefail\npython3 -m venv .venv >/dev/null 2>&1 || true\n./.venv/bin/python -m pip install --upgrade pip\n./.venv/bin/python -m pip install -r requirements.txt -r requirements-dev.txt"
            ],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared"
            }
        },
        {
            "label": "üöÄ Start Flask App (Local Python3)",
            "type": "shell",
            "command": "sh",
            "args": [
                "-c",
                "set -e\nif [ ! -x ./.venv/bin/python ]; then python3 -m venv .venv; fi\nexec ./.venv/bin/python app.py"
            ],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "new"
            },
            "options": {
                "env": {
                    "FLASK_APP": "app.py",
                    "FLASK_ENV": "development",
                    "FLASK_DEBUG": "1",
                    "PYTHONPATH": "${workspaceFolder}",
                    "DATABASE_URL": "sqlite:///dev.db",
                    "REDIS_URL": "redis://localhost:6379/0"
                }
            },
            "isBackground": true,
            "problemMatcher": []
        },
        {
            "label": "üß∞ Start Redis (Local)",
            "type": "shell",
            "command": "sh",
            "args": [
                "-c",
                "set -e\nif command -v redis-cli >/dev/null 2>&1; then\n  if redis-cli -h 127.0.0.1 -p 6379 ping >/dev/null 2>&1; then echo '‚úÖ Redis already running on 6379'; exit 0; fi\nfi\nif command -v brew >/dev/null 2>&1 && brew list --versions redis >/dev/null 2>&1; then\n  echo 'üöÄ Starting Redis via Homebrew...';\n  brew services start redis;\n  sleep 2;\n  (command -v redis-cli >/dev/null 2>&1 && redis-cli ping) || true;\n  exit 0;\nfi\nif command -v docker >/dev/null 2>&1; then\n  echo 'üê≥ Starting Redis via Docker...';\n  docker rm -f routeforce-redis >/dev/null 2>&1 || true;\n  docker run -d --name routeforce-redis -p 6379:6379 redis:7;\n  sleep 2;\n  (command -v redis-cli >/dev/null 2>&1 && redis-cli ping) || true;\n  exit 0;\nfi\necho '‚ùå Could not start Redis. Install with: brew install redis OR install Docker.'; exit 1"
      ],
      "group": "build",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared"
      }
    }
    ]
}