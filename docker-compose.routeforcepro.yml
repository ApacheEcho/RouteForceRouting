version: '3.8'

services:
  # Frontend (Static files served by Nginx)
  frontend:
    image: nginx:alpine
    container_name: routeforcepro-frontend
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./frontend/dist:/usr/share/nginx/html:ro
      - ./nginx-routeforcepro.conf:/etc/nginx/conf.d/default.conf:ro
      - /etc/letsencrypt:/etc/letsencrypt:ro
    depends_on:
      - backend
    restart: unless-stopped
    networks:
      - routeforcepro

  # Backend API
  backend:
    build:
      context: .
      dockerfile: Dockerfile.production
    container_name: routeforcepro-backend
    environment:
      - FLASK_ENV=production
      - DATABASE_URL=postgresql://routeforce:${DB_PASSWORD}@postgres:5432/routeforce_prod
      - REDIS_URL=redis://redis:6379/0
      - SECRET_KEY=${SECRET_KEY}
      - DOMAIN=routeforcepro.com
    depends_on:
      - postgres
      - redis
    restart: unless-stopped
    networks:
      - routeforcepro

  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: routeforcepro-db
    environment:
      - POSTGRES_DB=routeforce_prod
      - POSTGRES_USER=routeforce
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backups:/backups
    restart: unless-stopped
    networks:
      - routeforcepro

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: routeforcepro-redis
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    restart: unless-stopped
    networks:
      - routeforcepro

  # Monitoring
  prometheus:
    image: prom/prometheus:latest
    container_name: routeforcepro-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    restart: unless-stopped
    networks:
      - routeforcepro

  grafana:
    image: grafana/grafana:latest
    container_name: routeforcepro-grafana
    ports:
      - "3001:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD}
    volumes:
      - grafana_data:/var/lib/grafana
    restart: unless-stopped
    networks:
      - routeforcepro

volumes:
  postgres_data:
  redis_data:
  prometheus_data:
  grafana_data:

networks:
  routeforcepro:
    driver: bridge

# Environment variables file (.env)
# DB_PASSWORD=your_secure_db_password
# SECRET_KEY=your_secret_key
# GRAFANA_PASSWORD=your_grafana_password
