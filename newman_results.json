{
  "collection": {
    "_": {
      "postman_id": "routeforce-routing-automation"
    },
    "item": [
      {
        "id": "522c6cb8-8b5b-48c9-af53-2c7539c4ca12",
        "name": "Optimize Endpoint",
        "request": {
          "url": {
            "path": [
              "api",
              "optimize"
            ],
            "host": [
              "{{base_url}}"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n  \"param1\": \"value1\",\n  \"param2\": \"value2\"\n}"
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "03bb0dc5-30f1-470c-8fdd-abb8a6b7e4e8",
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "pm.test(\"Response has expected property\", function () {",
                "    var jsonData = pm.response.json();",
                "    pm.expect(jsonData).to.have.property('result');",
                "});"
              ],
              "_lastExecutionId": "2942f2c9-4971-4ab6-b37c-8c64588de514"
            }
          }
        ]
      },
      {
        "id": "94fe0f43-7645-4153-a838-405ae52fc365",
        "name": "Scoring Endpoint",
        "request": {
          "url": {
            "path": [
              "api",
              "route",
              "score"
            ],
            "host": [
              "{{base_url}}"
            ],
            "query": [],
            "variable": []
          },
          "method": "GET"
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "3b9b4382-6550-4bd8-9715-1f00a2f95bbb",
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "pm.test(\"Response is JSON\", function () {",
                "    pm.response.to.be.json;",
                "});"
              ],
              "_lastExecutionId": "f1cc9fc9-e0bc-4360-9a09-5a84f78e65ce"
            }
          }
        ]
      },
      {
        "id": "449654de-3201-4c9d-8161-03cfa4b9700e",
        "name": "API v1 Routes (POST)",
        "request": {
          "url": {
            "path": [
              "api",
              "v1",
              "routes"
            ],
            "host": [
              "{{base_url}}"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Authorization",
              "value": "Bearer {{access_token}}"
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n  \"param1\": \"value1\"\n}"
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "3b0b9afd-c3fd-49fa-994f-6b64e3cc74fa",
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200 or 201\", function () {",
                "    pm.expect([200,201]).to.include(pm.response.code);",
                "});"
              ],
              "_lastExecutionId": "f8b4dadb-2782-4dc2-8f52-8e2fca664b8e"
            }
          }
        ]
      },
      {
        "id": "1c063b7e-d30e-4c4b-a48a-39469f8f70fb",
        "name": "API v1 Routes (GET)",
        "request": {
          "url": {
            "path": [
              "api",
              "v1",
              "routes"
            ],
            "host": [
              "{{base_url}}"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer {{access_token}}"
            }
          ],
          "method": "GET"
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "c0a964e2-0ca7-4726-897c-f043e0df1b54",
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "pm.test(\"Response is JSON\", function () {",
                "    pm.response.to.be.json;",
                "});"
              ],
              "_lastExecutionId": "7858985a-e161-4ad3-ad9d-180790d3187d"
            }
          }
        ]
      },
      {
        "id": "5534a53e-3bd3-492f-acb2-321b55b32bd6",
        "name": "API v1 Health",
        "request": {
          "url": {
            "path": [
              "api",
              "v1",
              "health"
            ],
            "host": [
              "{{base_url}}"
            ],
            "query": [],
            "variable": []
          },
          "method": "GET"
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "42a79350-f37f-4a91-8402-0f6df74ef822",
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});"
              ],
              "_lastExecutionId": "fb79992f-d817-4a3e-bf26-608563d76b39"
            }
          }
        ]
      },
      {
        "id": "c134dfb2-4402-4091-9764-334cc22e781d",
        "name": "API v1 Metrics",
        "request": {
          "url": {
            "path": [
              "api",
              "v1",
              "metrics"
            ],
            "host": [
              "{{base_url}}"
            ],
            "query": [],
            "variable": []
          },
          "method": "GET"
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "75629c9b-320f-4c6f-8a3e-23b76982566c",
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});"
              ],
              "_lastExecutionId": "f1bc4923-33b2-4c9f-a504-c358c9907a04"
            }
          }
        ]
      },
      {
        "id": "9fa4bd69-fef0-4069-9767-35f28d0cfa35",
        "name": "API v1 ML Predict",
        "request": {
          "url": {
            "path": [
              "api",
              "v1",
              "ml",
              "predict"
            ],
            "host": [
              "{{base_url}}"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Authorization",
              "value": "Bearer {{access_token}}"
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n  \"input\": \"test\"\n}"
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "a1f2b0ba-70ba-4f7e-a993-cb68102a18e8",
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});"
              ],
              "_lastExecutionId": "9c239374-3303-46cf-999a-c18c2cbca977"
            }
          }
        ]
      }
    ],
    "event": [
      {
        "listen": "prerequest",
        "script": {
          "id": "a0e9ccd5-9bcd-4060-9c57-7a7660f6eb68",
          "type": "text/javascript",
          "exec": [
            "function loginAndSetToken() {",
            "    pm.sendRequest({",
            "        url: pm.variables.replaceIn('{{base_url}}/auth/login'),",
            "        method: 'POST',",
            "        header: { 'Content-Type': 'application/json' },",
            "        body: {",
            "            mode: 'raw',",
            "            raw: JSON.stringify({ email: 'testuser@example.com', password: 'testpassword' })",
            "        }",
            "    }, function (err, res) {",
            "        if (!err && res.code === 200 && res.json().access_token) {",
            "            pm.collectionVariables.set('access_token', res.json().access_token);",
            "        } else if (res && res.code === 401) {",
            "            // Register the user, then retry login",
            "            pm.sendRequest({",
            "                url: pm.variables.replaceIn('{{base_url}}/auth/register'),",
            "                method: 'POST',",
            "                header: { 'Content-Type': 'application/json' },",
            "                body: {",
            "                    mode: 'raw',",
            "                    raw: JSON.stringify({ email: 'testuser@example.com', password: 'testpassword', name: 'Test User' })",
            "                }",
            "            }, function (err2, res2) {",
            "                // Retry login after registration",
            "                pm.sendRequest({",
            "                    url: pm.variables.replaceIn('{{base_url}}/auth/login'),",
            "                    method: 'POST',",
            "                    header: { 'Content-Type': 'application/json' },",
            "                    body: {",
            "                        mode: 'raw',",
            "                        raw: JSON.stringify({ email: 'testuser@example.com', password: 'testpassword' })",
            "                    }",
            "                }, function (err3, res3) {",
            "                    if (!err3 && res3.code === 200 && res3.json().access_token) {",
            "                        pm.collectionVariables.set('access_token', res3.json().access_token);",
            "                    }",
            "                });",
            "            });",
            "        }",
            "    });",
            "}",
            "if (!pm.collectionVariables.get('access_token')) {",
            "    loginAndSetToken();",
            "}"
          ],
          "_lastExecutionId": "351519cd-91ff-4252-8191-4c74181944c9"
        }
      }
    ],
    "variable": [],
    "info": {
      "_postman_id": "routeforce-routing-automation",
      "name": "RouteForceRouting API Automation",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    }
  },
  "environment": {
    "_": {
      "postman_variable_scope": "environment",
      "postman_exported_at": "2025-08-17T00:00:00.000Z",
      "postman_exported_using": "Postman/2025.8.17"
    },
    "id": "routeforce-routing-env",
    "name": "RouteForceRouting Local",
    "values": [
      {
        "type": "any",
        "value": "http://localhost:5000",
        "key": "base_url"
      }
    ]
  },
  "globals": {
    "id": "9a6a472d-b8cf-423c-95f3-7e82ef2a1226",
    "values": []
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 7,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 14,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 7,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 14,
        "pending": 0,
        "failed": 14
      },
      "tests": {
        "total": 7,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 10,
        "pending": 0,
        "failed": 10
      },
      "testScripts": {
        "total": 7,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 7,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 0,
      "responseMin": 0,
      "responseMax": 0,
      "responseSd": 0,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1755449811193,
      "completed": 1755449811341
    },
    "executions": [
      {
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 7,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "d2866230-4b1d-4d75-8d63-3ea86cb5f733",
          "httpRequestId": "ce4f1772-849e-4769-bfa5-ded305933edc"
        },
        "item": {
          "id": "522c6cb8-8b5b-48c9-af53-2c7539c4ca12",
          "name": "Optimize Endpoint",
          "request": {
            "url": {
              "path": [
                "api",
                "optimize"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"param1\": \"value1\",\n  \"param2\": \"value2\"\n}"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "03bb0dc5-30f1-470c-8fdd-abb8a6b7e4e8",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "pm.test(\"Response has expected property\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('result');",
                  "});"
                ],
                "_lastExecutionId": "2942f2c9-4971-4ab6-b37c-8c64588de514"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "5000",
            "path": [
              "api",
              "optimize"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "c09dcb03-1a51-4694-83a8-7d939c34407d",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:5000",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n  \"param1\": \"value1\",\n  \"param2\": \"value2\"\n}"
          }
        },
        "id": "522c6cb8-8b5b-48c9-af53-2c7539c4ca12",
        "requestError": {
          "errno": -61,
          "code": "ECONNREFUSED",
          "syscall": "connect",
          "address": "127.0.0.1",
          "port": 5000
        },
        "assertions": [
          {
            "assertion": "Status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Status code is 200",
              "message": "expected PostmanResponse{ …(5) } to have property 'code'",
              "stack": "AssertionError: expected PostmanResponse{ …(5) } to have property 'code'\n   at Object.eval sandbox-script.js:1:1)"
            }
          },
          {
            "assertion": "Response has expected property",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "Response has expected property",
              "message": "\"undefined\" is not valid JSON",
              "stack": "JSONError: \"undefined\" is not valid JSON\n   at Object.eval sandbox-script.js:2:1)"
            }
          }
        ]
      },
      {
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 7,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "d2866230-4b1d-4d75-8d63-3ea86cb5f733",
          "httpRequestId": "ce4f1772-849e-4769-bfa5-ded305933edc"
        },
        "item": {
          "id": "522c6cb8-8b5b-48c9-af53-2c7539c4ca12",
          "name": "Optimize Endpoint",
          "request": {
            "url": {
              "path": [
                "api",
                "optimize"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"param1\": \"value1\",\n  \"param2\": \"value2\"\n}"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "03bb0dc5-30f1-470c-8fdd-abb8a6b7e4e8",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "pm.test(\"Response has expected property\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('result');",
                  "});"
                ],
                "_lastExecutionId": "2942f2c9-4971-4ab6-b37c-8c64588de514"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "5000",
            "path": [
              "api",
              "optimize"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "c09dcb03-1a51-4694-83a8-7d939c34407d",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:5000",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n  \"param1\": \"value1\",\n  \"param2\": \"value2\"\n}"
          }
        },
        "id": "522c6cb8-8b5b-48c9-af53-2c7539c4ca12",
        "requestError": {
          "errno": -61,
          "code": "ECONNREFUSED",
          "syscall": "connect",
          "address": "127.0.0.1",
          "port": 5000
        },
        "assertions": [
          {
            "assertion": "Status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Status code is 200",
              "message": "expected PostmanResponse{ …(5) } to have property 'code'",
              "stack": "AssertionError: expected PostmanResponse{ …(5) } to have property 'code'\n   at Object.eval sandbox-script.js:1:1)"
            }
          },
          {
            "assertion": "Response has expected property",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "Response has expected property",
              "message": "\"undefined\" is not valid JSON",
              "stack": "JSONError: \"undefined\" is not valid JSON\n   at Object.eval sandbox-script.js:2:1)"
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "0dd7022e-7ae0-4534-8fa9-beaf72c42d63",
          "length": 7,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "7aeea161-1c74-43fd-90eb-0ef5c349ae73"
        },
        "item": {
          "id": "94fe0f43-7645-4153-a838-405ae52fc365",
          "name": "Scoring Endpoint",
          "request": {
            "url": {
              "path": [
                "api",
                "route",
                "score"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "3b9b4382-6550-4bd8-9715-1f00a2f95bbb",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "pm.test(\"Response is JSON\", function () {",
                  "    pm.response.to.be.json;",
                  "});"
                ],
                "_lastExecutionId": "f1cc9fc9-e0bc-4360-9a09-5a84f78e65ce"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "5000",
            "path": [
              "api",
              "route",
              "score"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "d428799b-5cc2-47b8-a488-09a9ea8dea8f",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:5000",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET"
        },
        "id": "94fe0f43-7645-4153-a838-405ae52fc365",
        "requestError": {
          "errno": -61,
          "code": "ECONNREFUSED",
          "syscall": "connect",
          "address": "127.0.0.1",
          "port": 5000
        },
        "assertions": [
          {
            "assertion": "Status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Status code is 200",
              "message": "expected PostmanResponse{ …(5) } to have property 'code'",
              "stack": "AssertionError: expected PostmanResponse{ …(5) } to have property 'code'\n   at Object.eval sandbox-script.js:1:2)"
            }
          },
          {
            "assertion": "Response is JSON",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "Response is JSON",
              "message": "expected response body to be a valid json but got error \"undefined\" is not valid JSON",
              "stack": "AssertionError: expected response body to be a valid json but got error \"undefined\" is not valid JSON\n   at Object.eval sandbox-script.js:2:2)"
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "0dd7022e-7ae0-4534-8fa9-beaf72c42d63",
          "length": 7,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "7aeea161-1c74-43fd-90eb-0ef5c349ae73"
        },
        "item": {
          "id": "94fe0f43-7645-4153-a838-405ae52fc365",
          "name": "Scoring Endpoint",
          "request": {
            "url": {
              "path": [
                "api",
                "route",
                "score"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "3b9b4382-6550-4bd8-9715-1f00a2f95bbb",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "pm.test(\"Response is JSON\", function () {",
                  "    pm.response.to.be.json;",
                  "});"
                ],
                "_lastExecutionId": "f1cc9fc9-e0bc-4360-9a09-5a84f78e65ce"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "5000",
            "path": [
              "api",
              "route",
              "score"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "d428799b-5cc2-47b8-a488-09a9ea8dea8f",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:5000",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET"
        },
        "id": "94fe0f43-7645-4153-a838-405ae52fc365",
        "requestError": {
          "errno": -61,
          "code": "ECONNREFUSED",
          "syscall": "connect",
          "address": "127.0.0.1",
          "port": 5000
        },
        "assertions": [
          {
            "assertion": "Status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Status code is 200",
              "message": "expected PostmanResponse{ …(5) } to have property 'code'",
              "stack": "AssertionError: expected PostmanResponse{ …(5) } to have property 'code'\n   at Object.eval sandbox-script.js:1:2)"
            }
          },
          {
            "assertion": "Response is JSON",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "Response is JSON",
              "message": "expected response body to be a valid json but got error \"undefined\" is not valid JSON",
              "stack": "AssertionError: expected response body to be a valid json but got error \"undefined\" is not valid JSON\n   at Object.eval sandbox-script.js:2:2)"
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "0da91359-1717-4258-a2e7-d7cd61a170b0",
          "length": 7,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "23aaa1c4-b6f5-481c-8b37-b41fc7bb3d7d"
        },
        "item": {
          "id": "449654de-3201-4c9d-8161-03cfa4b9700e",
          "name": "API v1 Routes (POST)",
          "request": {
            "url": {
              "path": [
                "api",
                "v1",
                "routes"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"param1\": \"value1\"\n}"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "3b0b9afd-c3fd-49fa-994f-6b64e3cc74fa",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200 or 201\", function () {",
                  "    pm.expect([200,201]).to.include(pm.response.code);",
                  "});"
                ],
                "_lastExecutionId": "f8b4dadb-2782-4dc2-8f52-8e2fca664b8e"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "5000",
            "path": [
              "api",
              "v1",
              "routes"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Authorization",
              "value": "Bearer {{access_token}}"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "86550d38-229b-4a65-ac31-e0e105831e3e",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:5000",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n  \"param1\": \"value1\"\n}"
          }
        },
        "id": "449654de-3201-4c9d-8161-03cfa4b9700e",
        "requestError": {
          "errno": -61,
          "code": "ECONNREFUSED",
          "syscall": "connect",
          "address": "127.0.0.1",
          "port": 5000
        },
        "assertions": [
          {
            "assertion": "Status code is 200 or 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Status code is 200 or 201",
              "message": "expected [ 200, 201 ] to include undefined",
              "stack": "AssertionError: expected [ 200, 201 ] to include undefined\n   at Object.eval sandbox-script.js:1:3)"
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "0da91359-1717-4258-a2e7-d7cd61a170b0",
          "length": 7,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "23aaa1c4-b6f5-481c-8b37-b41fc7bb3d7d"
        },
        "item": {
          "id": "449654de-3201-4c9d-8161-03cfa4b9700e",
          "name": "API v1 Routes (POST)",
          "request": {
            "url": {
              "path": [
                "api",
                "v1",
                "routes"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"param1\": \"value1\"\n}"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "3b0b9afd-c3fd-49fa-994f-6b64e3cc74fa",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200 or 201\", function () {",
                  "    pm.expect([200,201]).to.include(pm.response.code);",
                  "});"
                ],
                "_lastExecutionId": "f8b4dadb-2782-4dc2-8f52-8e2fca664b8e"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "5000",
            "path": [
              "api",
              "v1",
              "routes"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Authorization",
              "value": "Bearer {{access_token}}"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "86550d38-229b-4a65-ac31-e0e105831e3e",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:5000",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n  \"param1\": \"value1\"\n}"
          }
        },
        "id": "449654de-3201-4c9d-8161-03cfa4b9700e",
        "requestError": {
          "errno": -61,
          "code": "ECONNREFUSED",
          "syscall": "connect",
          "address": "127.0.0.1",
          "port": 5000
        },
        "assertions": [
          {
            "assertion": "Status code is 200 or 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Status code is 200 or 201",
              "message": "expected [ 200, 201 ] to include undefined",
              "stack": "AssertionError: expected [ 200, 201 ] to include undefined\n   at Object.eval sandbox-script.js:1:3)"
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "f4c350b4-200d-4f02-897f-3adf4346f056",
          "length": 7,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "24dc393b-d5e8-4da2-a729-d99ee9f0994b"
        },
        "item": {
          "id": "1c063b7e-d30e-4c4b-a48a-39469f8f70fb",
          "name": "API v1 Routes (GET)",
          "request": {
            "url": {
              "path": [
                "api",
                "v1",
                "routes"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "c0a964e2-0ca7-4726-897c-f043e0df1b54",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "pm.test(\"Response is JSON\", function () {",
                  "    pm.response.to.be.json;",
                  "});"
                ],
                "_lastExecutionId": "7858985a-e161-4ad3-ad9d-180790d3187d"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "5000",
            "path": [
              "api",
              "v1",
              "routes"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer {{access_token}}"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "283e3c36-8a86-43a4-aea4-8ae4e455eb78",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:5000",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET"
        },
        "id": "1c063b7e-d30e-4c4b-a48a-39469f8f70fb",
        "requestError": {
          "errno": -61,
          "code": "ECONNREFUSED",
          "syscall": "connect",
          "address": "127.0.0.1",
          "port": 5000
        },
        "assertions": [
          {
            "assertion": "Status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Status code is 200",
              "message": "expected PostmanResponse{ …(5) } to have property 'code'",
              "stack": "AssertionError: expected PostmanResponse{ …(5) } to have property 'code'\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "Response is JSON",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "Response is JSON",
              "message": "expected response body to be a valid json but got error \"undefined\" is not valid JSON",
              "stack": "AssertionError: expected response body to be a valid json but got error \"undefined\" is not valid JSON\n   at Object.eval sandbox-script.js:2:4)"
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "f4c350b4-200d-4f02-897f-3adf4346f056",
          "length": 7,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "24dc393b-d5e8-4da2-a729-d99ee9f0994b"
        },
        "item": {
          "id": "1c063b7e-d30e-4c4b-a48a-39469f8f70fb",
          "name": "API v1 Routes (GET)",
          "request": {
            "url": {
              "path": [
                "api",
                "v1",
                "routes"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "c0a964e2-0ca7-4726-897c-f043e0df1b54",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "pm.test(\"Response is JSON\", function () {",
                  "    pm.response.to.be.json;",
                  "});"
                ],
                "_lastExecutionId": "7858985a-e161-4ad3-ad9d-180790d3187d"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "5000",
            "path": [
              "api",
              "v1",
              "routes"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer {{access_token}}"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "283e3c36-8a86-43a4-aea4-8ae4e455eb78",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:5000",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET"
        },
        "id": "1c063b7e-d30e-4c4b-a48a-39469f8f70fb",
        "requestError": {
          "errno": -61,
          "code": "ECONNREFUSED",
          "syscall": "connect",
          "address": "127.0.0.1",
          "port": 5000
        },
        "assertions": [
          {
            "assertion": "Status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Status code is 200",
              "message": "expected PostmanResponse{ …(5) } to have property 'code'",
              "stack": "AssertionError: expected PostmanResponse{ …(5) } to have property 'code'\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "Response is JSON",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "Response is JSON",
              "message": "expected response body to be a valid json but got error \"undefined\" is not valid JSON",
              "stack": "AssertionError: expected response body to be a valid json but got error \"undefined\" is not valid JSON\n   at Object.eval sandbox-script.js:2:4)"
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "44bc035d-5d3e-43cb-b0cd-9e0954f050d7",
          "length": 7,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "b6d9b559-5d1f-4137-9bde-1ba712de2c89"
        },
        "item": {
          "id": "5534a53e-3bd3-492f-acb2-321b55b32bd6",
          "name": "API v1 Health",
          "request": {
            "url": {
              "path": [
                "api",
                "v1",
                "health"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "42a79350-f37f-4a91-8402-0f6df74ef822",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ],
                "_lastExecutionId": "fb79992f-d817-4a3e-bf26-608563d76b39"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "5000",
            "path": [
              "api",
              "v1",
              "health"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "848ade3d-2c77-4e3a-83bb-9d402fb971dc",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:5000",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET"
        },
        "id": "5534a53e-3bd3-492f-acb2-321b55b32bd6",
        "requestError": {
          "errno": -61,
          "code": "ECONNREFUSED",
          "syscall": "connect",
          "address": "127.0.0.1",
          "port": 5000
        },
        "assertions": [
          {
            "assertion": "Status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Status code is 200",
              "message": "expected PostmanResponse{ …(5) } to have property 'code'",
              "stack": "AssertionError: expected PostmanResponse{ …(5) } to have property 'code'\n   at Object.eval sandbox-script.js:1:5)"
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "44bc035d-5d3e-43cb-b0cd-9e0954f050d7",
          "length": 7,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "b6d9b559-5d1f-4137-9bde-1ba712de2c89"
        },
        "item": {
          "id": "5534a53e-3bd3-492f-acb2-321b55b32bd6",
          "name": "API v1 Health",
          "request": {
            "url": {
              "path": [
                "api",
                "v1",
                "health"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "42a79350-f37f-4a91-8402-0f6df74ef822",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ],
                "_lastExecutionId": "fb79992f-d817-4a3e-bf26-608563d76b39"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "5000",
            "path": [
              "api",
              "v1",
              "health"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "848ade3d-2c77-4e3a-83bb-9d402fb971dc",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:5000",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET"
        },
        "id": "5534a53e-3bd3-492f-acb2-321b55b32bd6",
        "requestError": {
          "errno": -61,
          "code": "ECONNREFUSED",
          "syscall": "connect",
          "address": "127.0.0.1",
          "port": 5000
        },
        "assertions": [
          {
            "assertion": "Status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Status code is 200",
              "message": "expected PostmanResponse{ …(5) } to have property 'code'",
              "stack": "AssertionError: expected PostmanResponse{ …(5) } to have property 'code'\n   at Object.eval sandbox-script.js:1:5)"
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "cc8117a8-a47c-404a-8170-6048501f4545",
          "length": 7,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "f60cc961-e820-4a7a-9cf9-3f1757033f1d"
        },
        "item": {
          "id": "c134dfb2-4402-4091-9764-334cc22e781d",
          "name": "API v1 Metrics",
          "request": {
            "url": {
              "path": [
                "api",
                "v1",
                "metrics"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "75629c9b-320f-4c6f-8a3e-23b76982566c",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ],
                "_lastExecutionId": "f1bc4923-33b2-4c9f-a504-c358c9907a04"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "5000",
            "path": [
              "api",
              "v1",
              "metrics"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "09512556-c2d4-43dd-a040-f3070b5bfbea",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:5000",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET"
        },
        "id": "c134dfb2-4402-4091-9764-334cc22e781d",
        "requestError": {
          "errno": -61,
          "code": "ECONNREFUSED",
          "syscall": "connect",
          "address": "127.0.0.1",
          "port": 5000
        },
        "assertions": [
          {
            "assertion": "Status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Status code is 200",
              "message": "expected PostmanResponse{ …(5) } to have property 'code'",
              "stack": "AssertionError: expected PostmanResponse{ …(5) } to have property 'code'\n   at Object.eval sandbox-script.js:1:6)"
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "cc8117a8-a47c-404a-8170-6048501f4545",
          "length": 7,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "f60cc961-e820-4a7a-9cf9-3f1757033f1d"
        },
        "item": {
          "id": "c134dfb2-4402-4091-9764-334cc22e781d",
          "name": "API v1 Metrics",
          "request": {
            "url": {
              "path": [
                "api",
                "v1",
                "metrics"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "75629c9b-320f-4c6f-8a3e-23b76982566c",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ],
                "_lastExecutionId": "f1bc4923-33b2-4c9f-a504-c358c9907a04"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "5000",
            "path": [
              "api",
              "v1",
              "metrics"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "09512556-c2d4-43dd-a040-f3070b5bfbea",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:5000",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET"
        },
        "id": "c134dfb2-4402-4091-9764-334cc22e781d",
        "requestError": {
          "errno": -61,
          "code": "ECONNREFUSED",
          "syscall": "connect",
          "address": "127.0.0.1",
          "port": 5000
        },
        "assertions": [
          {
            "assertion": "Status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Status code is 200",
              "message": "expected PostmanResponse{ …(5) } to have property 'code'",
              "stack": "AssertionError: expected PostmanResponse{ …(5) } to have property 'code'\n   at Object.eval sandbox-script.js:1:6)"
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "0811377e-5e5e-4c7c-b49d-658d3028cc02",
          "length": 7,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "abe9b08d-3457-406e-9409-f0432d594b7e"
        },
        "item": {
          "id": "9fa4bd69-fef0-4069-9767-35f28d0cfa35",
          "name": "API v1 ML Predict",
          "request": {
            "url": {
              "path": [
                "api",
                "v1",
                "ml",
                "predict"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"input\": \"test\"\n}"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "a1f2b0ba-70ba-4f7e-a993-cb68102a18e8",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ],
                "_lastExecutionId": "9c239374-3303-46cf-999a-c18c2cbca977"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "5000",
            "path": [
              "api",
              "v1",
              "ml",
              "predict"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Authorization",
              "value": "Bearer {{access_token}}"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "9e61b2b8-b3b7-4df6-bf76-4924af915d50",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:5000",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n  \"input\": \"test\"\n}"
          }
        },
        "id": "9fa4bd69-fef0-4069-9767-35f28d0cfa35",
        "requestError": {
          "errno": -61,
          "code": "ECONNREFUSED",
          "syscall": "connect",
          "address": "127.0.0.1",
          "port": 5000
        },
        "assertions": [
          {
            "assertion": "Status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Status code is 200",
              "message": "expected PostmanResponse{ …(5) } to have property 'code'",
              "stack": "AssertionError: expected PostmanResponse{ …(5) } to have property 'code'\n   at Object.eval sandbox-script.js:1:7)"
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "0811377e-5e5e-4c7c-b49d-658d3028cc02",
          "length": 7,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "abe9b08d-3457-406e-9409-f0432d594b7e"
        },
        "item": {
          "id": "9fa4bd69-fef0-4069-9767-35f28d0cfa35",
          "name": "API v1 ML Predict",
          "request": {
            "url": {
              "path": [
                "api",
                "v1",
                "ml",
                "predict"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"input\": \"test\"\n}"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "a1f2b0ba-70ba-4f7e-a993-cb68102a18e8",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ],
                "_lastExecutionId": "9c239374-3303-46cf-999a-c18c2cbca977"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "5000",
            "path": [
              "api",
              "v1",
              "ml",
              "predict"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Authorization",
              "value": "Bearer {{access_token}}"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "9e61b2b8-b3b7-4df6-bf76-4924af915d50",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:5000",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n  \"input\": \"test\"\n}"
          }
        },
        "id": "9fa4bd69-fef0-4069-9767-35f28d0cfa35",
        "requestError": {
          "errno": -61,
          "code": "ECONNREFUSED",
          "syscall": "connect",
          "address": "127.0.0.1",
          "port": 5000
        },
        "assertions": [
          {
            "assertion": "Status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Status code is 200",
              "message": "expected PostmanResponse{ …(5) } to have property 'code'",
              "stack": "AssertionError: expected PostmanResponse{ …(5) } to have property 'code'\n   at Object.eval sandbox-script.js:1:7)"
            }
          }
        ]
      }
    ],
    "transfers": {
      "responseTotal": 0
    },
    "failures": [
      {
        "error": {
          "errno": -61,
          "code": "ECONNREFUSED",
          "syscall": "connect",
          "address": "127.0.0.1",
          "port": 5000,
          "name": "Error",
          "message": "connect ECONNREFUSED 127.0.0.1:5000",
          "stack": "Error: connect ECONNREFUSED 127.0.0.1:5000\n    at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1611:16)",
          "checksum": "dc4fca7efd601e4e050e8620e5e355d7",
          "id": "69da50b6-dc7d-4658-8182-03036b0b01ee",
          "timestamp": 1755449811218,
          "stacktrace": [
            {
              "fileName": "node:net",
              "lineNumber": 1611,
              "functionName": "TCPConnectWrap.afterConnect [as oncomplete]",
              "typeName": "TCPConnectWrap",
              "methodName": "afterConnect [as oncomplete]",
              "columnNumber": 16,
              "native": false
            }
          ]
        },
        "at": "request",
        "source": {
          "id": "18d19558-e61b-47fb-bd06-f07e67073b9b",
          "request": {
            "url": {
              "protocol": "http",
              "port": "5000",
              "path": [
                "auth",
                "login"
              ],
              "host": [
                "localhost"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "User-Agent",
                "value": "PostmanRuntime/7.39.1",
                "system": true
              },
              {
                "key": "Accept",
                "value": "*/*",
                "system": true
              },
              {
                "key": "Cache-Control",
                "value": "no-cache",
                "system": true
              },
              {
                "key": "Postman-Token",
                "value": "61ed31aa-2d7f-474f-ac82-27eafb86f894",
                "system": true
              },
              {
                "key": "Host",
                "value": "localhost:5000",
                "system": true
              },
              {
                "key": "Accept-Encoding",
                "value": "gzip, deflate, br",
                "system": true
              },
              {
                "key": "Connection",
                "value": "keep-alive",
                "system": true
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\"email\":\"testuser@example.com\",\"password\":\"testpassword\"}"
            }
          },
          "response": [],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 7,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "d2866230-4b1d-4d75-8d63-3ea86cb5f733",
          "scriptId": "a0e9ccd5-9bcd-4060-9c57-7a7660f6eb68",
          "execution": "ade391f1-92d5-4bd7-8491-4b2408b7497c",
          "httpRequestId": "9b8353a7-f60e-4d4b-ad5f-3a63cae93074"
        }
      },
      {
        "error": {
          "errno": -61,
          "code": "ECONNREFUSED",
          "syscall": "connect",
          "address": "127.0.0.1",
          "port": 5000,
          "name": "Error",
          "message": "connect ECONNREFUSED 127.0.0.1:5000",
          "stack": "Error: connect ECONNREFUSED 127.0.0.1:5000\n    at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1611:16)",
          "checksum": "dc4fca7efd601e4e050e8620e5e355d7",
          "id": "cf6b97c6-4f2a-4f6f-804e-1f9150411d6a",
          "timestamp": 1755449811227,
          "stacktrace": [
            {
              "fileName": "node:net",
              "lineNumber": 1611,
              "functionName": "TCPConnectWrap.afterConnect [as oncomplete]",
              "typeName": "TCPConnectWrap",
              "methodName": "afterConnect [as oncomplete]",
              "columnNumber": 16,
              "native": false
            }
          ]
        },
        "at": "request",
        "source": {
          "id": "522c6cb8-8b5b-48c9-af53-2c7539c4ca12",
          "name": "Optimize Endpoint",
          "request": {
            "url": {
              "protocol": "http",
              "port": "5000",
              "path": [
                "api",
                "optimize"
              ],
              "host": [
                "localhost"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "User-Agent",
                "value": "PostmanRuntime/7.39.1",
                "system": true
              },
              {
                "key": "Accept",
                "value": "*/*",
                "system": true
              },
              {
                "key": "Cache-Control",
                "value": "no-cache",
                "system": true
              },
              {
                "key": "Postman-Token",
                "value": "c09dcb03-1a51-4694-83a8-7d939c34407d",
                "system": true
              },
              {
                "key": "Host",
                "value": "localhost:5000",
                "system": true
              },
              {
                "key": "Accept-Encoding",
                "value": "gzip, deflate, br",
                "system": true
              },
              {
                "key": "Connection",
                "value": "keep-alive",
                "system": true
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"param1\": \"value1\",\n  \"param2\": \"value2\"\n}"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "03bb0dc5-30f1-470c-8fdd-abb8a6b7e4e8",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "pm.test(\"Response has expected property\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('result');",
                  "});"
                ]
              }
            }
          ]
        },
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 7,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "d2866230-4b1d-4d75-8d63-3ea86cb5f733",
          "httpRequestId": "ce4f1772-849e-4769-bfa5-ded305933edc"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Status code is 200",
          "message": "expected PostmanResponse{ …(5) } to have property 'code'",
          "stack": "AssertionError: expected PostmanResponse{ …(5) } to have property 'code'\n   at Object.eval sandbox-script.js:1:1)",
          "checksum": "8f1a38fbb4708623aafe992d2647a097",
          "id": "b5bc5490-0e70-4e20-a4bc-7fc24813c8ba",
          "timestamp": 1755449811234,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 1,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "522c6cb8-8b5b-48c9-af53-2c7539c4ca12",
          "name": "Optimize Endpoint",
          "request": {
            "url": {
              "path": [
                "api",
                "optimize"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"param1\": \"value1\",\n  \"param2\": \"value2\"\n}"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "03bb0dc5-30f1-470c-8fdd-abb8a6b7e4e8",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "pm.test(\"Response has expected property\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('result');",
                  "});"
                ],
                "_lastExecutionId": "2942f2c9-4971-4ab6-b37c-8c64588de514"
              }
            }
          ]
        },
        "parent": {
          "_": {
            "postman_id": "routeforce-routing-automation"
          },
          "item": [
            {
              "id": "522c6cb8-8b5b-48c9-af53-2c7539c4ca12",
              "name": "Optimize Endpoint",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "optimize"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"param1\": \"value1\",\n  \"param2\": \"value2\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "03bb0dc5-30f1-470c-8fdd-abb8a6b7e4e8",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "pm.test(\"Response has expected property\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData).to.have.property('result');",
                      "});"
                    ],
                    "_lastExecutionId": "2942f2c9-4971-4ab6-b37c-8c64588de514"
                  }
                }
              ]
            },
            {
              "id": "94fe0f43-7645-4153-a838-405ae52fc365",
              "name": "Scoring Endpoint",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "route",
                    "score"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "3b9b4382-6550-4bd8-9715-1f00a2f95bbb",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "pm.test(\"Response is JSON\", function () {",
                      "    pm.response.to.be.json;",
                      "});"
                    ],
                    "_lastExecutionId": "f1cc9fc9-e0bc-4360-9a09-5a84f78e65ce"
                  }
                }
              ]
            },
            {
              "id": "449654de-3201-4c9d-8161-03cfa4b9700e",
              "name": "API v1 Routes (POST)",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "v1",
                    "routes"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{access_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"param1\": \"value1\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "3b0b9afd-c3fd-49fa-994f-6b64e3cc74fa",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200 or 201\", function () {",
                      "    pm.expect([200,201]).to.include(pm.response.code);",
                      "});"
                    ],
                    "_lastExecutionId": "f8b4dadb-2782-4dc2-8f52-8e2fca664b8e"
                  }
                }
              ]
            },
            {
              "id": "1c063b7e-d30e-4c4b-a48a-39469f8f70fb",
              "name": "API v1 Routes (GET)",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "v1",
                    "routes"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{access_token}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "c0a964e2-0ca7-4726-897c-f043e0df1b54",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "pm.test(\"Response is JSON\", function () {",
                      "    pm.response.to.be.json;",
                      "});"
                    ],
                    "_lastExecutionId": "7858985a-e161-4ad3-ad9d-180790d3187d"
                  }
                }
              ]
            },
            {
              "id": "5534a53e-3bd3-492f-acb2-321b55b32bd6",
              "name": "API v1 Health",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "v1",
                    "health"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "42a79350-f37f-4a91-8402-0f6df74ef822",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});"
                    ],
                    "_lastExecutionId": "fb79992f-d817-4a3e-bf26-608563d76b39"
                  }
                }
              ]
            },
            {
              "id": "c134dfb2-4402-4091-9764-334cc22e781d",
              "name": "API v1 Metrics",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "v1",
                    "metrics"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "75629c9b-320f-4c6f-8a3e-23b76982566c",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});"
                    ],
                    "_lastExecutionId": "f1bc4923-33b2-4c9f-a504-c358c9907a04"
                  }
                }
              ]
            },
            {
              "id": "9fa4bd69-fef0-4069-9767-35f28d0cfa35",
              "name": "API v1 ML Predict",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "v1",
                    "ml",
                    "predict"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{access_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"input\": \"test\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "a1f2b0ba-70ba-4f7e-a993-cb68102a18e8",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});"
                    ],
                    "_lastExecutionId": "9c239374-3303-46cf-999a-c18c2cbca977"
                  }
                }
              ]
            }
          ],
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "a0e9ccd5-9bcd-4060-9c57-7a7660f6eb68",
                "type": "text/javascript",
                "exec": [
                  "function loginAndSetToken() {",
                  "    pm.sendRequest({",
                  "        url: pm.variables.replaceIn('{{base_url}}/auth/login'),",
                  "        method: 'POST',",
                  "        header: { 'Content-Type': 'application/json' },",
                  "        body: {",
                  "            mode: 'raw',",
                  "            raw: JSON.stringify({ email: 'testuser@example.com', password: 'testpassword' })",
                  "        }",
                  "    }, function (err, res) {",
                  "        if (!err && res.code === 200 && res.json().access_token) {",
                  "            pm.collectionVariables.set('access_token', res.json().access_token);",
                  "        } else if (res && res.code === 401) {",
                  "            // Register the user, then retry login",
                  "            pm.sendRequest({",
                  "                url: pm.variables.replaceIn('{{base_url}}/auth/register'),",
                  "                method: 'POST',",
                  "                header: { 'Content-Type': 'application/json' },",
                  "                body: {",
                  "                    mode: 'raw',",
                  "                    raw: JSON.stringify({ email: 'testuser@example.com', password: 'testpassword', name: 'Test User' })",
                  "                }",
                  "            }, function (err2, res2) {",
                  "                // Retry login after registration",
                  "                pm.sendRequest({",
                  "                    url: pm.variables.replaceIn('{{base_url}}/auth/login'),",
                  "                    method: 'POST',",
                  "                    header: { 'Content-Type': 'application/json' },",
                  "                    body: {",
                  "                        mode: 'raw',",
                  "                        raw: JSON.stringify({ email: 'testuser@example.com', password: 'testpassword' })",
                  "                    }",
                  "                }, function (err3, res3) {",
                  "                    if (!err3 && res3.code === 200 && res3.json().access_token) {",
                  "                        pm.collectionVariables.set('access_token', res3.json().access_token);",
                  "                    }",
                  "                });",
                  "            });",
                  "        }",
                  "    });",
                  "}",
                  "if (!pm.collectionVariables.get('access_token')) {",
                  "    loginAndSetToken();",
                  "}"
                ],
                "_lastExecutionId": "351519cd-91ff-4252-8191-4c74181944c9"
              }
            }
          ],
          "variable": [],
          "info": {
            "_postman_id": "routeforce-routing-automation",
            "name": "RouteForceRouting API Automation",
            "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
          }
        },
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 7,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "d2866230-4b1d-4d75-8d63-3ea86cb5f733",
          "httpRequestId": "ce4f1772-849e-4769-bfa5-ded305933edc",
          "scriptId": "03bb0dc5-30f1-470c-8fdd-abb8a6b7e4e8",
          "execution": "2942f2c9-4971-4ab6-b37c-8c64588de514"
        }
      },
      {
        "error": {
          "name": "JSONError",
          "index": 1,
          "test": "Response has expected property",
          "message": "\"undefined\" is not valid JSON",
          "stack": "JSONError: \"undefined\" is not valid JSON\n   at Object.eval sandbox-script.js:2:1)",
          "checksum": "c8b2f5ca397dcec1db9bff4f32b6f35b",
          "id": "48048558-4f3e-450b-83c4-bfd6e50e5adc",
          "timestamp": 1755449811235,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 2,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 1,
              "native": false
            }
          ]
        },
        "at": "assertion:1 in test-script",
        "source": {
          "id": "522c6cb8-8b5b-48c9-af53-2c7539c4ca12",
          "name": "Optimize Endpoint",
          "request": {
            "url": {
              "path": [
                "api",
                "optimize"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"param1\": \"value1\",\n  \"param2\": \"value2\"\n}"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "03bb0dc5-30f1-470c-8fdd-abb8a6b7e4e8",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "pm.test(\"Response has expected property\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('result');",
                  "});"
                ],
                "_lastExecutionId": "2942f2c9-4971-4ab6-b37c-8c64588de514"
              }
            }
          ]
        },
        "parent": {
          "_": {
            "postman_id": "routeforce-routing-automation"
          },
          "item": [
            {
              "id": "522c6cb8-8b5b-48c9-af53-2c7539c4ca12",
              "name": "Optimize Endpoint",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "optimize"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"param1\": \"value1\",\n  \"param2\": \"value2\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "03bb0dc5-30f1-470c-8fdd-abb8a6b7e4e8",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "pm.test(\"Response has expected property\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData).to.have.property('result');",
                      "});"
                    ],
                    "_lastExecutionId": "2942f2c9-4971-4ab6-b37c-8c64588de514"
                  }
                }
              ]
            },
            {
              "id": "94fe0f43-7645-4153-a838-405ae52fc365",
              "name": "Scoring Endpoint",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "route",
                    "score"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "3b9b4382-6550-4bd8-9715-1f00a2f95bbb",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "pm.test(\"Response is JSON\", function () {",
                      "    pm.response.to.be.json;",
                      "});"
                    ],
                    "_lastExecutionId": "f1cc9fc9-e0bc-4360-9a09-5a84f78e65ce"
                  }
                }
              ]
            },
            {
              "id": "449654de-3201-4c9d-8161-03cfa4b9700e",
              "name": "API v1 Routes (POST)",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "v1",
                    "routes"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{access_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"param1\": \"value1\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "3b0b9afd-c3fd-49fa-994f-6b64e3cc74fa",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200 or 201\", function () {",
                      "    pm.expect([200,201]).to.include(pm.response.code);",
                      "});"
                    ],
                    "_lastExecutionId": "f8b4dadb-2782-4dc2-8f52-8e2fca664b8e"
                  }
                }
              ]
            },
            {
              "id": "1c063b7e-d30e-4c4b-a48a-39469f8f70fb",
              "name": "API v1 Routes (GET)",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "v1",
                    "routes"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{access_token}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "c0a964e2-0ca7-4726-897c-f043e0df1b54",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "pm.test(\"Response is JSON\", function () {",
                      "    pm.response.to.be.json;",
                      "});"
                    ],
                    "_lastExecutionId": "7858985a-e161-4ad3-ad9d-180790d3187d"
                  }
                }
              ]
            },
            {
              "id": "5534a53e-3bd3-492f-acb2-321b55b32bd6",
              "name": "API v1 Health",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "v1",
                    "health"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "42a79350-f37f-4a91-8402-0f6df74ef822",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});"
                    ],
                    "_lastExecutionId": "fb79992f-d817-4a3e-bf26-608563d76b39"
                  }
                }
              ]
            },
            {
              "id": "c134dfb2-4402-4091-9764-334cc22e781d",
              "name": "API v1 Metrics",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "v1",
                    "metrics"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "75629c9b-320f-4c6f-8a3e-23b76982566c",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});"
                    ],
                    "_lastExecutionId": "f1bc4923-33b2-4c9f-a504-c358c9907a04"
                  }
                }
              ]
            },
            {
              "id": "9fa4bd69-fef0-4069-9767-35f28d0cfa35",
              "name": "API v1 ML Predict",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "v1",
                    "ml",
                    "predict"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{access_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"input\": \"test\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "a1f2b0ba-70ba-4f7e-a993-cb68102a18e8",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});"
                    ],
                    "_lastExecutionId": "9c239374-3303-46cf-999a-c18c2cbca977"
                  }
                }
              ]
            }
          ],
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "a0e9ccd5-9bcd-4060-9c57-7a7660f6eb68",
                "type": "text/javascript",
                "exec": [
                  "function loginAndSetToken() {",
                  "    pm.sendRequest({",
                  "        url: pm.variables.replaceIn('{{base_url}}/auth/login'),",
                  "        method: 'POST',",
                  "        header: { 'Content-Type': 'application/json' },",
                  "        body: {",
                  "            mode: 'raw',",
                  "            raw: JSON.stringify({ email: 'testuser@example.com', password: 'testpassword' })",
                  "        }",
                  "    }, function (err, res) {",
                  "        if (!err && res.code === 200 && res.json().access_token) {",
                  "            pm.collectionVariables.set('access_token', res.json().access_token);",
                  "        } else if (res && res.code === 401) {",
                  "            // Register the user, then retry login",
                  "            pm.sendRequest({",
                  "                url: pm.variables.replaceIn('{{base_url}}/auth/register'),",
                  "                method: 'POST',",
                  "                header: { 'Content-Type': 'application/json' },",
                  "                body: {",
                  "                    mode: 'raw',",
                  "                    raw: JSON.stringify({ email: 'testuser@example.com', password: 'testpassword', name: 'Test User' })",
                  "                }",
                  "            }, function (err2, res2) {",
                  "                // Retry login after registration",
                  "                pm.sendRequest({",
                  "                    url: pm.variables.replaceIn('{{base_url}}/auth/login'),",
                  "                    method: 'POST',",
                  "                    header: { 'Content-Type': 'application/json' },",
                  "                    body: {",
                  "                        mode: 'raw',",
                  "                        raw: JSON.stringify({ email: 'testuser@example.com', password: 'testpassword' })",
                  "                    }",
                  "                }, function (err3, res3) {",
                  "                    if (!err3 && res3.code === 200 && res3.json().access_token) {",
                  "                        pm.collectionVariables.set('access_token', res3.json().access_token);",
                  "                    }",
                  "                });",
                  "            });",
                  "        }",
                  "    });",
                  "}",
                  "if (!pm.collectionVariables.get('access_token')) {",
                  "    loginAndSetToken();",
                  "}"
                ],
                "_lastExecutionId": "351519cd-91ff-4252-8191-4c74181944c9"
              }
            }
          ],
          "variable": [],
          "info": {
            "_postman_id": "routeforce-routing-automation",
            "name": "RouteForceRouting API Automation",
            "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
          }
        },
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 7,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "d2866230-4b1d-4d75-8d63-3ea86cb5f733",
          "httpRequestId": "ce4f1772-849e-4769-bfa5-ded305933edc",
          "scriptId": "03bb0dc5-30f1-470c-8fdd-abb8a6b7e4e8",
          "execution": "2942f2c9-4971-4ab6-b37c-8c64588de514"
        }
      },
      {
        "error": {
          "errno": -61,
          "code": "ECONNREFUSED",
          "syscall": "connect",
          "address": "127.0.0.1",
          "port": 5000,
          "name": "Error",
          "message": "connect ECONNREFUSED 127.0.0.1:5000",
          "stack": "Error: connect ECONNREFUSED 127.0.0.1:5000\n    at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1611:16)",
          "checksum": "dc4fca7efd601e4e050e8620e5e355d7",
          "id": "8c52cf2f-a7e6-443f-a131-06be0919478c",
          "timestamp": 1755449811244,
          "stacktrace": [
            {
              "fileName": "node:net",
              "lineNumber": 1611,
              "functionName": "TCPConnectWrap.afterConnect [as oncomplete]",
              "typeName": "TCPConnectWrap",
              "methodName": "afterConnect [as oncomplete]",
              "columnNumber": 16,
              "native": false
            }
          ]
        },
        "at": "request",
        "source": {
          "id": "84d345cd-eead-454c-9f0f-03755992cb28",
          "request": {
            "url": {
              "protocol": "http",
              "port": "5000",
              "path": [
                "auth",
                "login"
              ],
              "host": [
                "localhost"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "User-Agent",
                "value": "PostmanRuntime/7.39.1",
                "system": true
              },
              {
                "key": "Accept",
                "value": "*/*",
                "system": true
              },
              {
                "key": "Cache-Control",
                "value": "no-cache",
                "system": true
              },
              {
                "key": "Postman-Token",
                "value": "acb6131e-497d-4660-b923-d25048678f93",
                "system": true
              },
              {
                "key": "Host",
                "value": "localhost:5000",
                "system": true
              },
              {
                "key": "Accept-Encoding",
                "value": "gzip, deflate, br",
                "system": true
              },
              {
                "key": "Connection",
                "value": "keep-alive",
                "system": true
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\"email\":\"testuser@example.com\",\"password\":\"testpassword\"}"
            }
          },
          "response": [],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        "cursor": {
          "ref": "0dd7022e-7ae0-4534-8fa9-beaf72c42d63",
          "length": 7,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "scriptId": "a0e9ccd5-9bcd-4060-9c57-7a7660f6eb68",
          "execution": "590c9d83-024a-4dae-b256-7425c6483b04",
          "httpRequestId": "7df16a23-df8d-4c37-b162-7e78043d4597"
        }
      },
      {
        "error": {
          "errno": -61,
          "code": "ECONNREFUSED",
          "syscall": "connect",
          "address": "127.0.0.1",
          "port": 5000,
          "name": "Error",
          "message": "connect ECONNREFUSED 127.0.0.1:5000",
          "stack": "Error: connect ECONNREFUSED 127.0.0.1:5000\n    at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1611:16)",
          "checksum": "dc4fca7efd601e4e050e8620e5e355d7",
          "id": "d82f80f4-781e-4995-bcfc-0c503564a070",
          "timestamp": 1755449811249,
          "stacktrace": [
            {
              "fileName": "node:net",
              "lineNumber": 1611,
              "functionName": "TCPConnectWrap.afterConnect [as oncomplete]",
              "typeName": "TCPConnectWrap",
              "methodName": "afterConnect [as oncomplete]",
              "columnNumber": 16,
              "native": false
            }
          ]
        },
        "at": "request",
        "source": {
          "id": "94fe0f43-7645-4153-a838-405ae52fc365",
          "name": "Scoring Endpoint",
          "request": {
            "url": {
              "protocol": "http",
              "port": "5000",
              "path": [
                "api",
                "route",
                "score"
              ],
              "host": [
                "localhost"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "User-Agent",
                "value": "PostmanRuntime/7.39.1",
                "system": true
              },
              {
                "key": "Accept",
                "value": "*/*",
                "system": true
              },
              {
                "key": "Cache-Control",
                "value": "no-cache",
                "system": true
              },
              {
                "key": "Postman-Token",
                "value": "d428799b-5cc2-47b8-a488-09a9ea8dea8f",
                "system": true
              },
              {
                "key": "Host",
                "value": "localhost:5000",
                "system": true
              },
              {
                "key": "Accept-Encoding",
                "value": "gzip, deflate, br",
                "system": true
              },
              {
                "key": "Connection",
                "value": "keep-alive",
                "system": true
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "3b9b4382-6550-4bd8-9715-1f00a2f95bbb",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "pm.test(\"Response is JSON\", function () {",
                  "    pm.response.to.be.json;",
                  "});"
                ]
              }
            }
          ]
        },
        "cursor": {
          "ref": "0dd7022e-7ae0-4534-8fa9-beaf72c42d63",
          "length": 7,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "7aeea161-1c74-43fd-90eb-0ef5c349ae73"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Status code is 200",
          "message": "expected PostmanResponse{ …(5) } to have property 'code'",
          "stack": "AssertionError: expected PostmanResponse{ …(5) } to have property 'code'\n   at Object.eval sandbox-script.js:1:2)",
          "checksum": "169020131664477cec85b1c00a6464f6",
          "id": "102cecd3-069d-4067-b757-eb08e57d7882",
          "timestamp": 1755449811252,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 2,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "94fe0f43-7645-4153-a838-405ae52fc365",
          "name": "Scoring Endpoint",
          "request": {
            "url": {
              "path": [
                "api",
                "route",
                "score"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "3b9b4382-6550-4bd8-9715-1f00a2f95bbb",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "pm.test(\"Response is JSON\", function () {",
                  "    pm.response.to.be.json;",
                  "});"
                ],
                "_lastExecutionId": "f1cc9fc9-e0bc-4360-9a09-5a84f78e65ce"
              }
            }
          ]
        },
        "parent": {
          "_": {
            "postman_id": "routeforce-routing-automation"
          },
          "item": [
            {
              "id": "522c6cb8-8b5b-48c9-af53-2c7539c4ca12",
              "name": "Optimize Endpoint",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "optimize"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"param1\": \"value1\",\n  \"param2\": \"value2\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "03bb0dc5-30f1-470c-8fdd-abb8a6b7e4e8",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "pm.test(\"Response has expected property\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData).to.have.property('result');",
                      "});"
                    ],
                    "_lastExecutionId": "2942f2c9-4971-4ab6-b37c-8c64588de514"
                  }
                }
              ]
            },
            {
              "id": "94fe0f43-7645-4153-a838-405ae52fc365",
              "name": "Scoring Endpoint",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "route",
                    "score"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "3b9b4382-6550-4bd8-9715-1f00a2f95bbb",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "pm.test(\"Response is JSON\", function () {",
                      "    pm.response.to.be.json;",
                      "});"
                    ],
                    "_lastExecutionId": "f1cc9fc9-e0bc-4360-9a09-5a84f78e65ce"
                  }
                }
              ]
            },
            {
              "id": "449654de-3201-4c9d-8161-03cfa4b9700e",
              "name": "API v1 Routes (POST)",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "v1",
                    "routes"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{access_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"param1\": \"value1\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "3b0b9afd-c3fd-49fa-994f-6b64e3cc74fa",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200 or 201\", function () {",
                      "    pm.expect([200,201]).to.include(pm.response.code);",
                      "});"
                    ],
                    "_lastExecutionId": "f8b4dadb-2782-4dc2-8f52-8e2fca664b8e"
                  }
                }
              ]
            },
            {
              "id": "1c063b7e-d30e-4c4b-a48a-39469f8f70fb",
              "name": "API v1 Routes (GET)",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "v1",
                    "routes"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{access_token}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "c0a964e2-0ca7-4726-897c-f043e0df1b54",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "pm.test(\"Response is JSON\", function () {",
                      "    pm.response.to.be.json;",
                      "});"
                    ],
                    "_lastExecutionId": "7858985a-e161-4ad3-ad9d-180790d3187d"
                  }
                }
              ]
            },
            {
              "id": "5534a53e-3bd3-492f-acb2-321b55b32bd6",
              "name": "API v1 Health",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "v1",
                    "health"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "42a79350-f37f-4a91-8402-0f6df74ef822",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});"
                    ],
                    "_lastExecutionId": "fb79992f-d817-4a3e-bf26-608563d76b39"
                  }
                }
              ]
            },
            {
              "id": "c134dfb2-4402-4091-9764-334cc22e781d",
              "name": "API v1 Metrics",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "v1",
                    "metrics"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "75629c9b-320f-4c6f-8a3e-23b76982566c",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});"
                    ],
                    "_lastExecutionId": "f1bc4923-33b2-4c9f-a504-c358c9907a04"
                  }
                }
              ]
            },
            {
              "id": "9fa4bd69-fef0-4069-9767-35f28d0cfa35",
              "name": "API v1 ML Predict",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "v1",
                    "ml",
                    "predict"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{access_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"input\": \"test\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "a1f2b0ba-70ba-4f7e-a993-cb68102a18e8",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});"
                    ],
                    "_lastExecutionId": "9c239374-3303-46cf-999a-c18c2cbca977"
                  }
                }
              ]
            }
          ],
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "a0e9ccd5-9bcd-4060-9c57-7a7660f6eb68",
                "type": "text/javascript",
                "exec": [
                  "function loginAndSetToken() {",
                  "    pm.sendRequest({",
                  "        url: pm.variables.replaceIn('{{base_url}}/auth/login'),",
                  "        method: 'POST',",
                  "        header: { 'Content-Type': 'application/json' },",
                  "        body: {",
                  "            mode: 'raw',",
                  "            raw: JSON.stringify({ email: 'testuser@example.com', password: 'testpassword' })",
                  "        }",
                  "    }, function (err, res) {",
                  "        if (!err && res.code === 200 && res.json().access_token) {",
                  "            pm.collectionVariables.set('access_token', res.json().access_token);",
                  "        } else if (res && res.code === 401) {",
                  "            // Register the user, then retry login",
                  "            pm.sendRequest({",
                  "                url: pm.variables.replaceIn('{{base_url}}/auth/register'),",
                  "                method: 'POST',",
                  "                header: { 'Content-Type': 'application/json' },",
                  "                body: {",
                  "                    mode: 'raw',",
                  "                    raw: JSON.stringify({ email: 'testuser@example.com', password: 'testpassword', name: 'Test User' })",
                  "                }",
                  "            }, function (err2, res2) {",
                  "                // Retry login after registration",
                  "                pm.sendRequest({",
                  "                    url: pm.variables.replaceIn('{{base_url}}/auth/login'),",
                  "                    method: 'POST',",
                  "                    header: { 'Content-Type': 'application/json' },",
                  "                    body: {",
                  "                        mode: 'raw',",
                  "                        raw: JSON.stringify({ email: 'testuser@example.com', password: 'testpassword' })",
                  "                    }",
                  "                }, function (err3, res3) {",
                  "                    if (!err3 && res3.code === 200 && res3.json().access_token) {",
                  "                        pm.collectionVariables.set('access_token', res3.json().access_token);",
                  "                    }",
                  "                });",
                  "            });",
                  "        }",
                  "    });",
                  "}",
                  "if (!pm.collectionVariables.get('access_token')) {",
                  "    loginAndSetToken();",
                  "}"
                ],
                "_lastExecutionId": "351519cd-91ff-4252-8191-4c74181944c9"
              }
            }
          ],
          "variable": [],
          "info": {
            "_postman_id": "routeforce-routing-automation",
            "name": "RouteForceRouting API Automation",
            "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
          }
        },
        "cursor": {
          "ref": "0dd7022e-7ae0-4534-8fa9-beaf72c42d63",
          "length": 7,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "7aeea161-1c74-43fd-90eb-0ef5c349ae73",
          "scriptId": "3b9b4382-6550-4bd8-9715-1f00a2f95bbb",
          "execution": "f1cc9fc9-e0bc-4360-9a09-5a84f78e65ce"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 1,
          "test": "Response is JSON",
          "message": "expected response body to be a valid json but got error \"undefined\" is not valid JSON",
          "stack": "AssertionError: expected response body to be a valid json but got error \"undefined\" is not valid JSON\n   at Object.eval sandbox-script.js:2:2)",
          "checksum": "89978a282cb765ba0d450fd1343af34f",
          "id": "cb023196-7809-4589-92cd-2471e7c88126",
          "timestamp": 1755449811253,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 2,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 2,
              "native": false
            }
          ]
        },
        "at": "assertion:1 in test-script",
        "source": {
          "id": "94fe0f43-7645-4153-a838-405ae52fc365",
          "name": "Scoring Endpoint",
          "request": {
            "url": {
              "path": [
                "api",
                "route",
                "score"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "3b9b4382-6550-4bd8-9715-1f00a2f95bbb",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "pm.test(\"Response is JSON\", function () {",
                  "    pm.response.to.be.json;",
                  "});"
                ],
                "_lastExecutionId": "f1cc9fc9-e0bc-4360-9a09-5a84f78e65ce"
              }
            }
          ]
        },
        "parent": {
          "_": {
            "postman_id": "routeforce-routing-automation"
          },
          "item": [
            {
              "id": "522c6cb8-8b5b-48c9-af53-2c7539c4ca12",
              "name": "Optimize Endpoint",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "optimize"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"param1\": \"value1\",\n  \"param2\": \"value2\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "03bb0dc5-30f1-470c-8fdd-abb8a6b7e4e8",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "pm.test(\"Response has expected property\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData).to.have.property('result');",
                      "});"
                    ],
                    "_lastExecutionId": "2942f2c9-4971-4ab6-b37c-8c64588de514"
                  }
                }
              ]
            },
            {
              "id": "94fe0f43-7645-4153-a838-405ae52fc365",
              "name": "Scoring Endpoint",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "route",
                    "score"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "3b9b4382-6550-4bd8-9715-1f00a2f95bbb",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "pm.test(\"Response is JSON\", function () {",
                      "    pm.response.to.be.json;",
                      "});"
                    ],
                    "_lastExecutionId": "f1cc9fc9-e0bc-4360-9a09-5a84f78e65ce"
                  }
                }
              ]
            },
            {
              "id": "449654de-3201-4c9d-8161-03cfa4b9700e",
              "name": "API v1 Routes (POST)",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "v1",
                    "routes"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{access_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"param1\": \"value1\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "3b0b9afd-c3fd-49fa-994f-6b64e3cc74fa",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200 or 201\", function () {",
                      "    pm.expect([200,201]).to.include(pm.response.code);",
                      "});"
                    ],
                    "_lastExecutionId": "f8b4dadb-2782-4dc2-8f52-8e2fca664b8e"
                  }
                }
              ]
            },
            {
              "id": "1c063b7e-d30e-4c4b-a48a-39469f8f70fb",
              "name": "API v1 Routes (GET)",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "v1",
                    "routes"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{access_token}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "c0a964e2-0ca7-4726-897c-f043e0df1b54",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "pm.test(\"Response is JSON\", function () {",
                      "    pm.response.to.be.json;",
                      "});"
                    ],
                    "_lastExecutionId": "7858985a-e161-4ad3-ad9d-180790d3187d"
                  }
                }
              ]
            },
            {
              "id": "5534a53e-3bd3-492f-acb2-321b55b32bd6",
              "name": "API v1 Health",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "v1",
                    "health"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "42a79350-f37f-4a91-8402-0f6df74ef822",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});"
                    ],
                    "_lastExecutionId": "fb79992f-d817-4a3e-bf26-608563d76b39"
                  }
                }
              ]
            },
            {
              "id": "c134dfb2-4402-4091-9764-334cc22e781d",
              "name": "API v1 Metrics",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "v1",
                    "metrics"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "75629c9b-320f-4c6f-8a3e-23b76982566c",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});"
                    ],
                    "_lastExecutionId": "f1bc4923-33b2-4c9f-a504-c358c9907a04"
                  }
                }
              ]
            },
            {
              "id": "9fa4bd69-fef0-4069-9767-35f28d0cfa35",
              "name": "API v1 ML Predict",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "v1",
                    "ml",
                    "predict"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{access_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"input\": \"test\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "a1f2b0ba-70ba-4f7e-a993-cb68102a18e8",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});"
                    ],
                    "_lastExecutionId": "9c239374-3303-46cf-999a-c18c2cbca977"
                  }
                }
              ]
            }
          ],
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "a0e9ccd5-9bcd-4060-9c57-7a7660f6eb68",
                "type": "text/javascript",
                "exec": [
                  "function loginAndSetToken() {",
                  "    pm.sendRequest({",
                  "        url: pm.variables.replaceIn('{{base_url}}/auth/login'),",
                  "        method: 'POST',",
                  "        header: { 'Content-Type': 'application/json' },",
                  "        body: {",
                  "            mode: 'raw',",
                  "            raw: JSON.stringify({ email: 'testuser@example.com', password: 'testpassword' })",
                  "        }",
                  "    }, function (err, res) {",
                  "        if (!err && res.code === 200 && res.json().access_token) {",
                  "            pm.collectionVariables.set('access_token', res.json().access_token);",
                  "        } else if (res && res.code === 401) {",
                  "            // Register the user, then retry login",
                  "            pm.sendRequest({",
                  "                url: pm.variables.replaceIn('{{base_url}}/auth/register'),",
                  "                method: 'POST',",
                  "                header: { 'Content-Type': 'application/json' },",
                  "                body: {",
                  "                    mode: 'raw',",
                  "                    raw: JSON.stringify({ email: 'testuser@example.com', password: 'testpassword', name: 'Test User' })",
                  "                }",
                  "            }, function (err2, res2) {",
                  "                // Retry login after registration",
                  "                pm.sendRequest({",
                  "                    url: pm.variables.replaceIn('{{base_url}}/auth/login'),",
                  "                    method: 'POST',",
                  "                    header: { 'Content-Type': 'application/json' },",
                  "                    body: {",
                  "                        mode: 'raw',",
                  "                        raw: JSON.stringify({ email: 'testuser@example.com', password: 'testpassword' })",
                  "                    }",
                  "                }, function (err3, res3) {",
                  "                    if (!err3 && res3.code === 200 && res3.json().access_token) {",
                  "                        pm.collectionVariables.set('access_token', res3.json().access_token);",
                  "                    }",
                  "                });",
                  "            });",
                  "        }",
                  "    });",
                  "}",
                  "if (!pm.collectionVariables.get('access_token')) {",
                  "    loginAndSetToken();",
                  "}"
                ],
                "_lastExecutionId": "351519cd-91ff-4252-8191-4c74181944c9"
              }
            }
          ],
          "variable": [],
          "info": {
            "_postman_id": "routeforce-routing-automation",
            "name": "RouteForceRouting API Automation",
            "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
          }
        },
        "cursor": {
          "ref": "0dd7022e-7ae0-4534-8fa9-beaf72c42d63",
          "length": 7,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "7aeea161-1c74-43fd-90eb-0ef5c349ae73",
          "scriptId": "3b9b4382-6550-4bd8-9715-1f00a2f95bbb",
          "execution": "f1cc9fc9-e0bc-4360-9a09-5a84f78e65ce"
        }
      },
      {
        "error": {
          "errno": -61,
          "code": "ECONNREFUSED",
          "syscall": "connect",
          "address": "127.0.0.1",
          "port": 5000,
          "name": "Error",
          "message": "connect ECONNREFUSED 127.0.0.1:5000",
          "stack": "Error: connect ECONNREFUSED 127.0.0.1:5000\n    at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1611:16)",
          "checksum": "dc4fca7efd601e4e050e8620e5e355d7",
          "id": "c304ee24-8815-41c5-84b5-4d044aaca5f0",
          "timestamp": 1755449811264,
          "stacktrace": [
            {
              "fileName": "node:net",
              "lineNumber": 1611,
              "functionName": "TCPConnectWrap.afterConnect [as oncomplete]",
              "typeName": "TCPConnectWrap",
              "methodName": "afterConnect [as oncomplete]",
              "columnNumber": 16,
              "native": false
            }
          ]
        },
        "at": "request",
        "source": {
          "id": "63eaa579-edb0-48a2-a374-7326916509a3",
          "request": {
            "url": {
              "protocol": "http",
              "port": "5000",
              "path": [
                "auth",
                "login"
              ],
              "host": [
                "localhost"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "User-Agent",
                "value": "PostmanRuntime/7.39.1",
                "system": true
              },
              {
                "key": "Accept",
                "value": "*/*",
                "system": true
              },
              {
                "key": "Cache-Control",
                "value": "no-cache",
                "system": true
              },
              {
                "key": "Postman-Token",
                "value": "d9678eb2-3539-4053-a30d-04e883b00524",
                "system": true
              },
              {
                "key": "Host",
                "value": "localhost:5000",
                "system": true
              },
              {
                "key": "Accept-Encoding",
                "value": "gzip, deflate, br",
                "system": true
              },
              {
                "key": "Connection",
                "value": "keep-alive",
                "system": true
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\"email\":\"testuser@example.com\",\"password\":\"testpassword\"}"
            }
          },
          "response": [],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        "cursor": {
          "ref": "0da91359-1717-4258-a2e7-d7cd61a170b0",
          "length": 7,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "scriptId": "a0e9ccd5-9bcd-4060-9c57-7a7660f6eb68",
          "execution": "b0839e3d-eb5d-4c6e-ad42-1342d41b75bb",
          "httpRequestId": "7edfdb8a-b4cf-40e4-a009-6237c90cdbae"
        }
      },
      {
        "error": {
          "errno": -61,
          "code": "ECONNREFUSED",
          "syscall": "connect",
          "address": "127.0.0.1",
          "port": 5000,
          "name": "Error",
          "message": "connect ECONNREFUSED 127.0.0.1:5000",
          "stack": "Error: connect ECONNREFUSED 127.0.0.1:5000\n    at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1611:16)",
          "checksum": "dc4fca7efd601e4e050e8620e5e355d7",
          "id": "e09e2e73-f6bf-4e1b-a3c4-c072c6c510a8",
          "timestamp": 1755449811269,
          "stacktrace": [
            {
              "fileName": "node:net",
              "lineNumber": 1611,
              "functionName": "TCPConnectWrap.afterConnect [as oncomplete]",
              "typeName": "TCPConnectWrap",
              "methodName": "afterConnect [as oncomplete]",
              "columnNumber": 16,
              "native": false
            }
          ]
        },
        "at": "request",
        "source": {
          "id": "449654de-3201-4c9d-8161-03cfa4b9700e",
          "name": "API v1 Routes (POST)",
          "request": {
            "url": {
              "protocol": "http",
              "port": "5000",
              "path": [
                "api",
                "v1",
                "routes"
              ],
              "host": [
                "localhost"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              },
              {
                "key": "User-Agent",
                "value": "PostmanRuntime/7.39.1",
                "system": true
              },
              {
                "key": "Accept",
                "value": "*/*",
                "system": true
              },
              {
                "key": "Cache-Control",
                "value": "no-cache",
                "system": true
              },
              {
                "key": "Postman-Token",
                "value": "86550d38-229b-4a65-ac31-e0e105831e3e",
                "system": true
              },
              {
                "key": "Host",
                "value": "localhost:5000",
                "system": true
              },
              {
                "key": "Accept-Encoding",
                "value": "gzip, deflate, br",
                "system": true
              },
              {
                "key": "Connection",
                "value": "keep-alive",
                "system": true
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"param1\": \"value1\"\n}"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "3b0b9afd-c3fd-49fa-994f-6b64e3cc74fa",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200 or 201\", function () {",
                  "    pm.expect([200,201]).to.include(pm.response.code);",
                  "});"
                ]
              }
            }
          ]
        },
        "cursor": {
          "ref": "0da91359-1717-4258-a2e7-d7cd61a170b0",
          "length": 7,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "23aaa1c4-b6f5-481c-8b37-b41fc7bb3d7d"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Status code is 200 or 201",
          "message": "expected [ 200, 201 ] to include undefined",
          "stack": "AssertionError: expected [ 200, 201 ] to include undefined\n   at Object.eval sandbox-script.js:1:3)",
          "checksum": "9e108a5981287aebaa42ab65a3c5e524",
          "id": "1df17c83-bd76-4625-a448-dcfcaaad02c4",
          "timestamp": 1755449811272,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 3,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "449654de-3201-4c9d-8161-03cfa4b9700e",
          "name": "API v1 Routes (POST)",
          "request": {
            "url": {
              "path": [
                "api",
                "v1",
                "routes"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"param1\": \"value1\"\n}"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "3b0b9afd-c3fd-49fa-994f-6b64e3cc74fa",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200 or 201\", function () {",
                  "    pm.expect([200,201]).to.include(pm.response.code);",
                  "});"
                ],
                "_lastExecutionId": "f8b4dadb-2782-4dc2-8f52-8e2fca664b8e"
              }
            }
          ]
        },
        "parent": {
          "_": {
            "postman_id": "routeforce-routing-automation"
          },
          "item": [
            {
              "id": "522c6cb8-8b5b-48c9-af53-2c7539c4ca12",
              "name": "Optimize Endpoint",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "optimize"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"param1\": \"value1\",\n  \"param2\": \"value2\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "03bb0dc5-30f1-470c-8fdd-abb8a6b7e4e8",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "pm.test(\"Response has expected property\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData).to.have.property('result');",
                      "});"
                    ],
                    "_lastExecutionId": "2942f2c9-4971-4ab6-b37c-8c64588de514"
                  }
                }
              ]
            },
            {
              "id": "94fe0f43-7645-4153-a838-405ae52fc365",
              "name": "Scoring Endpoint",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "route",
                    "score"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "3b9b4382-6550-4bd8-9715-1f00a2f95bbb",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "pm.test(\"Response is JSON\", function () {",
                      "    pm.response.to.be.json;",
                      "});"
                    ],
                    "_lastExecutionId": "f1cc9fc9-e0bc-4360-9a09-5a84f78e65ce"
                  }
                }
              ]
            },
            {
              "id": "449654de-3201-4c9d-8161-03cfa4b9700e",
              "name": "API v1 Routes (POST)",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "v1",
                    "routes"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{access_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"param1\": \"value1\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "3b0b9afd-c3fd-49fa-994f-6b64e3cc74fa",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200 or 201\", function () {",
                      "    pm.expect([200,201]).to.include(pm.response.code);",
                      "});"
                    ],
                    "_lastExecutionId": "f8b4dadb-2782-4dc2-8f52-8e2fca664b8e"
                  }
                }
              ]
            },
            {
              "id": "1c063b7e-d30e-4c4b-a48a-39469f8f70fb",
              "name": "API v1 Routes (GET)",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "v1",
                    "routes"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{access_token}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "c0a964e2-0ca7-4726-897c-f043e0df1b54",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "pm.test(\"Response is JSON\", function () {",
                      "    pm.response.to.be.json;",
                      "});"
                    ],
                    "_lastExecutionId": "7858985a-e161-4ad3-ad9d-180790d3187d"
                  }
                }
              ]
            },
            {
              "id": "5534a53e-3bd3-492f-acb2-321b55b32bd6",
              "name": "API v1 Health",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "v1",
                    "health"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "42a79350-f37f-4a91-8402-0f6df74ef822",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});"
                    ],
                    "_lastExecutionId": "fb79992f-d817-4a3e-bf26-608563d76b39"
                  }
                }
              ]
            },
            {
              "id": "c134dfb2-4402-4091-9764-334cc22e781d",
              "name": "API v1 Metrics",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "v1",
                    "metrics"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "75629c9b-320f-4c6f-8a3e-23b76982566c",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});"
                    ],
                    "_lastExecutionId": "f1bc4923-33b2-4c9f-a504-c358c9907a04"
                  }
                }
              ]
            },
            {
              "id": "9fa4bd69-fef0-4069-9767-35f28d0cfa35",
              "name": "API v1 ML Predict",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "v1",
                    "ml",
                    "predict"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{access_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"input\": \"test\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "a1f2b0ba-70ba-4f7e-a993-cb68102a18e8",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});"
                    ],
                    "_lastExecutionId": "9c239374-3303-46cf-999a-c18c2cbca977"
                  }
                }
              ]
            }
          ],
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "a0e9ccd5-9bcd-4060-9c57-7a7660f6eb68",
                "type": "text/javascript",
                "exec": [
                  "function loginAndSetToken() {",
                  "    pm.sendRequest({",
                  "        url: pm.variables.replaceIn('{{base_url}}/auth/login'),",
                  "        method: 'POST',",
                  "        header: { 'Content-Type': 'application/json' },",
                  "        body: {",
                  "            mode: 'raw',",
                  "            raw: JSON.stringify({ email: 'testuser@example.com', password: 'testpassword' })",
                  "        }",
                  "    }, function (err, res) {",
                  "        if (!err && res.code === 200 && res.json().access_token) {",
                  "            pm.collectionVariables.set('access_token', res.json().access_token);",
                  "        } else if (res && res.code === 401) {",
                  "            // Register the user, then retry login",
                  "            pm.sendRequest({",
                  "                url: pm.variables.replaceIn('{{base_url}}/auth/register'),",
                  "                method: 'POST',",
                  "                header: { 'Content-Type': 'application/json' },",
                  "                body: {",
                  "                    mode: 'raw',",
                  "                    raw: JSON.stringify({ email: 'testuser@example.com', password: 'testpassword', name: 'Test User' })",
                  "                }",
                  "            }, function (err2, res2) {",
                  "                // Retry login after registration",
                  "                pm.sendRequest({",
                  "                    url: pm.variables.replaceIn('{{base_url}}/auth/login'),",
                  "                    method: 'POST',",
                  "                    header: { 'Content-Type': 'application/json' },",
                  "                    body: {",
                  "                        mode: 'raw',",
                  "                        raw: JSON.stringify({ email: 'testuser@example.com', password: 'testpassword' })",
                  "                    }",
                  "                }, function (err3, res3) {",
                  "                    if (!err3 && res3.code === 200 && res3.json().access_token) {",
                  "                        pm.collectionVariables.set('access_token', res3.json().access_token);",
                  "                    }",
                  "                });",
                  "            });",
                  "        }",
                  "    });",
                  "}",
                  "if (!pm.collectionVariables.get('access_token')) {",
                  "    loginAndSetToken();",
                  "}"
                ],
                "_lastExecutionId": "351519cd-91ff-4252-8191-4c74181944c9"
              }
            }
          ],
          "variable": [],
          "info": {
            "_postman_id": "routeforce-routing-automation",
            "name": "RouteForceRouting API Automation",
            "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
          }
        },
        "cursor": {
          "ref": "0da91359-1717-4258-a2e7-d7cd61a170b0",
          "length": 7,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "23aaa1c4-b6f5-481c-8b37-b41fc7bb3d7d",
          "scriptId": "3b0b9afd-c3fd-49fa-994f-6b64e3cc74fa",
          "execution": "f8b4dadb-2782-4dc2-8f52-8e2fca664b8e"
        }
      },
      {
        "error": {
          "errno": -61,
          "code": "ECONNREFUSED",
          "syscall": "connect",
          "address": "127.0.0.1",
          "port": 5000,
          "name": "Error",
          "message": "connect ECONNREFUSED 127.0.0.1:5000",
          "stack": "Error: connect ECONNREFUSED 127.0.0.1:5000\n    at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1611:16)",
          "checksum": "dc4fca7efd601e4e050e8620e5e355d7",
          "id": "4209a615-06db-4da7-bfb8-844130e7dad1",
          "timestamp": 1755449811281,
          "stacktrace": [
            {
              "fileName": "node:net",
              "lineNumber": 1611,
              "functionName": "TCPConnectWrap.afterConnect [as oncomplete]",
              "typeName": "TCPConnectWrap",
              "methodName": "afterConnect [as oncomplete]",
              "columnNumber": 16,
              "native": false
            }
          ]
        },
        "at": "request",
        "source": {
          "id": "ef127ce6-914b-436f-a5c0-ac74e09dcb79",
          "request": {
            "url": {
              "protocol": "http",
              "port": "5000",
              "path": [
                "auth",
                "login"
              ],
              "host": [
                "localhost"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "User-Agent",
                "value": "PostmanRuntime/7.39.1",
                "system": true
              },
              {
                "key": "Accept",
                "value": "*/*",
                "system": true
              },
              {
                "key": "Cache-Control",
                "value": "no-cache",
                "system": true
              },
              {
                "key": "Postman-Token",
                "value": "ea601a6f-8a18-45fc-8d43-6f434e1f5c95",
                "system": true
              },
              {
                "key": "Host",
                "value": "localhost:5000",
                "system": true
              },
              {
                "key": "Accept-Encoding",
                "value": "gzip, deflate, br",
                "system": true
              },
              {
                "key": "Connection",
                "value": "keep-alive",
                "system": true
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\"email\":\"testuser@example.com\",\"password\":\"testpassword\"}"
            }
          },
          "response": [],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        "cursor": {
          "ref": "f4c350b4-200d-4f02-897f-3adf4346f056",
          "length": 7,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "scriptId": "a0e9ccd5-9bcd-4060-9c57-7a7660f6eb68",
          "execution": "210df309-f94b-4984-8c58-770085a71397",
          "httpRequestId": "b169c1b7-4bce-4040-96b3-14e7c789ec9a"
        }
      },
      {
        "error": {
          "errno": -61,
          "code": "ECONNREFUSED",
          "syscall": "connect",
          "address": "127.0.0.1",
          "port": 5000,
          "name": "Error",
          "message": "connect ECONNREFUSED 127.0.0.1:5000",
          "stack": "Error: connect ECONNREFUSED 127.0.0.1:5000\n    at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1611:16)",
          "checksum": "dc4fca7efd601e4e050e8620e5e355d7",
          "id": "ece922f7-d77f-4c37-9ea3-2bf0089482cc",
          "timestamp": 1755449811286,
          "stacktrace": [
            {
              "fileName": "node:net",
              "lineNumber": 1611,
              "functionName": "TCPConnectWrap.afterConnect [as oncomplete]",
              "typeName": "TCPConnectWrap",
              "methodName": "afterConnect [as oncomplete]",
              "columnNumber": 16,
              "native": false
            }
          ]
        },
        "at": "request",
        "source": {
          "id": "1c063b7e-d30e-4c4b-a48a-39469f8f70fb",
          "name": "API v1 Routes (GET)",
          "request": {
            "url": {
              "protocol": "http",
              "port": "5000",
              "path": [
                "api",
                "v1",
                "routes"
              ],
              "host": [
                "localhost"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              },
              {
                "key": "User-Agent",
                "value": "PostmanRuntime/7.39.1",
                "system": true
              },
              {
                "key": "Accept",
                "value": "*/*",
                "system": true
              },
              {
                "key": "Cache-Control",
                "value": "no-cache",
                "system": true
              },
              {
                "key": "Postman-Token",
                "value": "283e3c36-8a86-43a4-aea4-8ae4e455eb78",
                "system": true
              },
              {
                "key": "Host",
                "value": "localhost:5000",
                "system": true
              },
              {
                "key": "Accept-Encoding",
                "value": "gzip, deflate, br",
                "system": true
              },
              {
                "key": "Connection",
                "value": "keep-alive",
                "system": true
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "c0a964e2-0ca7-4726-897c-f043e0df1b54",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "pm.test(\"Response is JSON\", function () {",
                  "    pm.response.to.be.json;",
                  "});"
                ]
              }
            }
          ]
        },
        "cursor": {
          "ref": "f4c350b4-200d-4f02-897f-3adf4346f056",
          "length": 7,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "24dc393b-d5e8-4da2-a729-d99ee9f0994b"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Status code is 200",
          "message": "expected PostmanResponse{ …(5) } to have property 'code'",
          "stack": "AssertionError: expected PostmanResponse{ …(5) } to have property 'code'\n   at Object.eval sandbox-script.js:1:4)",
          "checksum": "5e78bc18623b85feb0a8ad40f56e64fc",
          "id": "92fb56ab-1236-4f97-8707-79fd7872ba75",
          "timestamp": 1755449811289,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 4,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "1c063b7e-d30e-4c4b-a48a-39469f8f70fb",
          "name": "API v1 Routes (GET)",
          "request": {
            "url": {
              "path": [
                "api",
                "v1",
                "routes"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "c0a964e2-0ca7-4726-897c-f043e0df1b54",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "pm.test(\"Response is JSON\", function () {",
                  "    pm.response.to.be.json;",
                  "});"
                ],
                "_lastExecutionId": "7858985a-e161-4ad3-ad9d-180790d3187d"
              }
            }
          ]
        },
        "parent": {
          "_": {
            "postman_id": "routeforce-routing-automation"
          },
          "item": [
            {
              "id": "522c6cb8-8b5b-48c9-af53-2c7539c4ca12",
              "name": "Optimize Endpoint",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "optimize"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"param1\": \"value1\",\n  \"param2\": \"value2\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "03bb0dc5-30f1-470c-8fdd-abb8a6b7e4e8",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "pm.test(\"Response has expected property\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData).to.have.property('result');",
                      "});"
                    ],
                    "_lastExecutionId": "2942f2c9-4971-4ab6-b37c-8c64588de514"
                  }
                }
              ]
            },
            {
              "id": "94fe0f43-7645-4153-a838-405ae52fc365",
              "name": "Scoring Endpoint",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "route",
                    "score"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "3b9b4382-6550-4bd8-9715-1f00a2f95bbb",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "pm.test(\"Response is JSON\", function () {",
                      "    pm.response.to.be.json;",
                      "});"
                    ],
                    "_lastExecutionId": "f1cc9fc9-e0bc-4360-9a09-5a84f78e65ce"
                  }
                }
              ]
            },
            {
              "id": "449654de-3201-4c9d-8161-03cfa4b9700e",
              "name": "API v1 Routes (POST)",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "v1",
                    "routes"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{access_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"param1\": \"value1\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "3b0b9afd-c3fd-49fa-994f-6b64e3cc74fa",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200 or 201\", function () {",
                      "    pm.expect([200,201]).to.include(pm.response.code);",
                      "});"
                    ],
                    "_lastExecutionId": "f8b4dadb-2782-4dc2-8f52-8e2fca664b8e"
                  }
                }
              ]
            },
            {
              "id": "1c063b7e-d30e-4c4b-a48a-39469f8f70fb",
              "name": "API v1 Routes (GET)",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "v1",
                    "routes"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{access_token}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "c0a964e2-0ca7-4726-897c-f043e0df1b54",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "pm.test(\"Response is JSON\", function () {",
                      "    pm.response.to.be.json;",
                      "});"
                    ],
                    "_lastExecutionId": "7858985a-e161-4ad3-ad9d-180790d3187d"
                  }
                }
              ]
            },
            {
              "id": "5534a53e-3bd3-492f-acb2-321b55b32bd6",
              "name": "API v1 Health",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "v1",
                    "health"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "42a79350-f37f-4a91-8402-0f6df74ef822",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});"
                    ],
                    "_lastExecutionId": "fb79992f-d817-4a3e-bf26-608563d76b39"
                  }
                }
              ]
            },
            {
              "id": "c134dfb2-4402-4091-9764-334cc22e781d",
              "name": "API v1 Metrics",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "v1",
                    "metrics"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "75629c9b-320f-4c6f-8a3e-23b76982566c",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});"
                    ],
                    "_lastExecutionId": "f1bc4923-33b2-4c9f-a504-c358c9907a04"
                  }
                }
              ]
            },
            {
              "id": "9fa4bd69-fef0-4069-9767-35f28d0cfa35",
              "name": "API v1 ML Predict",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "v1",
                    "ml",
                    "predict"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{access_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"input\": \"test\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "a1f2b0ba-70ba-4f7e-a993-cb68102a18e8",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});"
                    ],
                    "_lastExecutionId": "9c239374-3303-46cf-999a-c18c2cbca977"
                  }
                }
              ]
            }
          ],
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "a0e9ccd5-9bcd-4060-9c57-7a7660f6eb68",
                "type": "text/javascript",
                "exec": [
                  "function loginAndSetToken() {",
                  "    pm.sendRequest({",
                  "        url: pm.variables.replaceIn('{{base_url}}/auth/login'),",
                  "        method: 'POST',",
                  "        header: { 'Content-Type': 'application/json' },",
                  "        body: {",
                  "            mode: 'raw',",
                  "            raw: JSON.stringify({ email: 'testuser@example.com', password: 'testpassword' })",
                  "        }",
                  "    }, function (err, res) {",
                  "        if (!err && res.code === 200 && res.json().access_token) {",
                  "            pm.collectionVariables.set('access_token', res.json().access_token);",
                  "        } else if (res && res.code === 401) {",
                  "            // Register the user, then retry login",
                  "            pm.sendRequest({",
                  "                url: pm.variables.replaceIn('{{base_url}}/auth/register'),",
                  "                method: 'POST',",
                  "                header: { 'Content-Type': 'application/json' },",
                  "                body: {",
                  "                    mode: 'raw',",
                  "                    raw: JSON.stringify({ email: 'testuser@example.com', password: 'testpassword', name: 'Test User' })",
                  "                }",
                  "            }, function (err2, res2) {",
                  "                // Retry login after registration",
                  "                pm.sendRequest({",
                  "                    url: pm.variables.replaceIn('{{base_url}}/auth/login'),",
                  "                    method: 'POST',",
                  "                    header: { 'Content-Type': 'application/json' },",
                  "                    body: {",
                  "                        mode: 'raw',",
                  "                        raw: JSON.stringify({ email: 'testuser@example.com', password: 'testpassword' })",
                  "                    }",
                  "                }, function (err3, res3) {",
                  "                    if (!err3 && res3.code === 200 && res3.json().access_token) {",
                  "                        pm.collectionVariables.set('access_token', res3.json().access_token);",
                  "                    }",
                  "                });",
                  "            });",
                  "        }",
                  "    });",
                  "}",
                  "if (!pm.collectionVariables.get('access_token')) {",
                  "    loginAndSetToken();",
                  "}"
                ],
                "_lastExecutionId": "351519cd-91ff-4252-8191-4c74181944c9"
              }
            }
          ],
          "variable": [],
          "info": {
            "_postman_id": "routeforce-routing-automation",
            "name": "RouteForceRouting API Automation",
            "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
          }
        },
        "cursor": {
          "ref": "f4c350b4-200d-4f02-897f-3adf4346f056",
          "length": 7,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "24dc393b-d5e8-4da2-a729-d99ee9f0994b",
          "scriptId": "c0a964e2-0ca7-4726-897c-f043e0df1b54",
          "execution": "7858985a-e161-4ad3-ad9d-180790d3187d"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 1,
          "test": "Response is JSON",
          "message": "expected response body to be a valid json but got error \"undefined\" is not valid JSON",
          "stack": "AssertionError: expected response body to be a valid json but got error \"undefined\" is not valid JSON\n   at Object.eval sandbox-script.js:2:4)",
          "checksum": "d97f371ed0c897f110dcf72a6b609740",
          "id": "99fff943-478b-4a53-a57b-7117ee3009c6",
          "timestamp": 1755449811290,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 2,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 4,
              "native": false
            }
          ]
        },
        "at": "assertion:1 in test-script",
        "source": {
          "id": "1c063b7e-d30e-4c4b-a48a-39469f8f70fb",
          "name": "API v1 Routes (GET)",
          "request": {
            "url": {
              "path": [
                "api",
                "v1",
                "routes"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "c0a964e2-0ca7-4726-897c-f043e0df1b54",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "pm.test(\"Response is JSON\", function () {",
                  "    pm.response.to.be.json;",
                  "});"
                ],
                "_lastExecutionId": "7858985a-e161-4ad3-ad9d-180790d3187d"
              }
            }
          ]
        },
        "parent": {
          "_": {
            "postman_id": "routeforce-routing-automation"
          },
          "item": [
            {
              "id": "522c6cb8-8b5b-48c9-af53-2c7539c4ca12",
              "name": "Optimize Endpoint",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "optimize"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"param1\": \"value1\",\n  \"param2\": \"value2\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "03bb0dc5-30f1-470c-8fdd-abb8a6b7e4e8",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "pm.test(\"Response has expected property\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData).to.have.property('result');",
                      "});"
                    ],
                    "_lastExecutionId": "2942f2c9-4971-4ab6-b37c-8c64588de514"
                  }
                }
              ]
            },
            {
              "id": "94fe0f43-7645-4153-a838-405ae52fc365",
              "name": "Scoring Endpoint",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "route",
                    "score"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "3b9b4382-6550-4bd8-9715-1f00a2f95bbb",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "pm.test(\"Response is JSON\", function () {",
                      "    pm.response.to.be.json;",
                      "});"
                    ],
                    "_lastExecutionId": "f1cc9fc9-e0bc-4360-9a09-5a84f78e65ce"
                  }
                }
              ]
            },
            {
              "id": "449654de-3201-4c9d-8161-03cfa4b9700e",
              "name": "API v1 Routes (POST)",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "v1",
                    "routes"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{access_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"param1\": \"value1\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "3b0b9afd-c3fd-49fa-994f-6b64e3cc74fa",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200 or 201\", function () {",
                      "    pm.expect([200,201]).to.include(pm.response.code);",
                      "});"
                    ],
                    "_lastExecutionId": "f8b4dadb-2782-4dc2-8f52-8e2fca664b8e"
                  }
                }
              ]
            },
            {
              "id": "1c063b7e-d30e-4c4b-a48a-39469f8f70fb",
              "name": "API v1 Routes (GET)",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "v1",
                    "routes"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{access_token}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "c0a964e2-0ca7-4726-897c-f043e0df1b54",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "pm.test(\"Response is JSON\", function () {",
                      "    pm.response.to.be.json;",
                      "});"
                    ],
                    "_lastExecutionId": "7858985a-e161-4ad3-ad9d-180790d3187d"
                  }
                }
              ]
            },
            {
              "id": "5534a53e-3bd3-492f-acb2-321b55b32bd6",
              "name": "API v1 Health",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "v1",
                    "health"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "42a79350-f37f-4a91-8402-0f6df74ef822",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});"
                    ],
                    "_lastExecutionId": "fb79992f-d817-4a3e-bf26-608563d76b39"
                  }
                }
              ]
            },
            {
              "id": "c134dfb2-4402-4091-9764-334cc22e781d",
              "name": "API v1 Metrics",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "v1",
                    "metrics"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "75629c9b-320f-4c6f-8a3e-23b76982566c",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});"
                    ],
                    "_lastExecutionId": "f1bc4923-33b2-4c9f-a504-c358c9907a04"
                  }
                }
              ]
            },
            {
              "id": "9fa4bd69-fef0-4069-9767-35f28d0cfa35",
              "name": "API v1 ML Predict",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "v1",
                    "ml",
                    "predict"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{access_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"input\": \"test\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "a1f2b0ba-70ba-4f7e-a993-cb68102a18e8",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});"
                    ],
                    "_lastExecutionId": "9c239374-3303-46cf-999a-c18c2cbca977"
                  }
                }
              ]
            }
          ],
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "a0e9ccd5-9bcd-4060-9c57-7a7660f6eb68",
                "type": "text/javascript",
                "exec": [
                  "function loginAndSetToken() {",
                  "    pm.sendRequest({",
                  "        url: pm.variables.replaceIn('{{base_url}}/auth/login'),",
                  "        method: 'POST',",
                  "        header: { 'Content-Type': 'application/json' },",
                  "        body: {",
                  "            mode: 'raw',",
                  "            raw: JSON.stringify({ email: 'testuser@example.com', password: 'testpassword' })",
                  "        }",
                  "    }, function (err, res) {",
                  "        if (!err && res.code === 200 && res.json().access_token) {",
                  "            pm.collectionVariables.set('access_token', res.json().access_token);",
                  "        } else if (res && res.code === 401) {",
                  "            // Register the user, then retry login",
                  "            pm.sendRequest({",
                  "                url: pm.variables.replaceIn('{{base_url}}/auth/register'),",
                  "                method: 'POST',",
                  "                header: { 'Content-Type': 'application/json' },",
                  "                body: {",
                  "                    mode: 'raw',",
                  "                    raw: JSON.stringify({ email: 'testuser@example.com', password: 'testpassword', name: 'Test User' })",
                  "                }",
                  "            }, function (err2, res2) {",
                  "                // Retry login after registration",
                  "                pm.sendRequest({",
                  "                    url: pm.variables.replaceIn('{{base_url}}/auth/login'),",
                  "                    method: 'POST',",
                  "                    header: { 'Content-Type': 'application/json' },",
                  "                    body: {",
                  "                        mode: 'raw',",
                  "                        raw: JSON.stringify({ email: 'testuser@example.com', password: 'testpassword' })",
                  "                    }",
                  "                }, function (err3, res3) {",
                  "                    if (!err3 && res3.code === 200 && res3.json().access_token) {",
                  "                        pm.collectionVariables.set('access_token', res3.json().access_token);",
                  "                    }",
                  "                });",
                  "            });",
                  "        }",
                  "    });",
                  "}",
                  "if (!pm.collectionVariables.get('access_token')) {",
                  "    loginAndSetToken();",
                  "}"
                ],
                "_lastExecutionId": "351519cd-91ff-4252-8191-4c74181944c9"
              }
            }
          ],
          "variable": [],
          "info": {
            "_postman_id": "routeforce-routing-automation",
            "name": "RouteForceRouting API Automation",
            "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
          }
        },
        "cursor": {
          "ref": "f4c350b4-200d-4f02-897f-3adf4346f056",
          "length": 7,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "24dc393b-d5e8-4da2-a729-d99ee9f0994b",
          "scriptId": "c0a964e2-0ca7-4726-897c-f043e0df1b54",
          "execution": "7858985a-e161-4ad3-ad9d-180790d3187d"
        }
      },
      {
        "error": {
          "errno": -61,
          "code": "ECONNREFUSED",
          "syscall": "connect",
          "address": "127.0.0.1",
          "port": 5000,
          "name": "Error",
          "message": "connect ECONNREFUSED 127.0.0.1:5000",
          "stack": "Error: connect ECONNREFUSED 127.0.0.1:5000\n    at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1611:16)",
          "checksum": "dc4fca7efd601e4e050e8620e5e355d7",
          "id": "3953ca8c-801b-4539-863f-bb5141d6709f",
          "timestamp": 1755449811298,
          "stacktrace": [
            {
              "fileName": "node:net",
              "lineNumber": 1611,
              "functionName": "TCPConnectWrap.afterConnect [as oncomplete]",
              "typeName": "TCPConnectWrap",
              "methodName": "afterConnect [as oncomplete]",
              "columnNumber": 16,
              "native": false
            }
          ]
        },
        "at": "request",
        "source": {
          "id": "9bbc72a7-30a4-4e8d-aa48-491496bbf904",
          "request": {
            "url": {
              "protocol": "http",
              "port": "5000",
              "path": [
                "auth",
                "login"
              ],
              "host": [
                "localhost"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "User-Agent",
                "value": "PostmanRuntime/7.39.1",
                "system": true
              },
              {
                "key": "Accept",
                "value": "*/*",
                "system": true
              },
              {
                "key": "Cache-Control",
                "value": "no-cache",
                "system": true
              },
              {
                "key": "Postman-Token",
                "value": "f3e2b3b1-3a29-4f29-a692-cc97af83fcf4",
                "system": true
              },
              {
                "key": "Host",
                "value": "localhost:5000",
                "system": true
              },
              {
                "key": "Accept-Encoding",
                "value": "gzip, deflate, br",
                "system": true
              },
              {
                "key": "Connection",
                "value": "keep-alive",
                "system": true
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\"email\":\"testuser@example.com\",\"password\":\"testpassword\"}"
            }
          },
          "response": [],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        "cursor": {
          "ref": "44bc035d-5d3e-43cb-b0cd-9e0954f050d7",
          "length": 7,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "scriptId": "a0e9ccd5-9bcd-4060-9c57-7a7660f6eb68",
          "execution": "76b0885b-17cc-41ea-a967-6f6f6ad42b84",
          "httpRequestId": "e2299851-68c3-4290-bef8-fd2ef91b9ba2"
        }
      },
      {
        "error": {
          "errno": -61,
          "code": "ECONNREFUSED",
          "syscall": "connect",
          "address": "127.0.0.1",
          "port": 5000,
          "name": "Error",
          "message": "connect ECONNREFUSED 127.0.0.1:5000",
          "stack": "Error: connect ECONNREFUSED 127.0.0.1:5000\n    at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1611:16)",
          "checksum": "dc4fca7efd601e4e050e8620e5e355d7",
          "id": "da9abc68-7a94-457c-95f0-9d4e20178f85",
          "timestamp": 1755449811303,
          "stacktrace": [
            {
              "fileName": "node:net",
              "lineNumber": 1611,
              "functionName": "TCPConnectWrap.afterConnect [as oncomplete]",
              "typeName": "TCPConnectWrap",
              "methodName": "afterConnect [as oncomplete]",
              "columnNumber": 16,
              "native": false
            }
          ]
        },
        "at": "request",
        "source": {
          "id": "5534a53e-3bd3-492f-acb2-321b55b32bd6",
          "name": "API v1 Health",
          "request": {
            "url": {
              "protocol": "http",
              "port": "5000",
              "path": [
                "api",
                "v1",
                "health"
              ],
              "host": [
                "localhost"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "User-Agent",
                "value": "PostmanRuntime/7.39.1",
                "system": true
              },
              {
                "key": "Accept",
                "value": "*/*",
                "system": true
              },
              {
                "key": "Cache-Control",
                "value": "no-cache",
                "system": true
              },
              {
                "key": "Postman-Token",
                "value": "848ade3d-2c77-4e3a-83bb-9d402fb971dc",
                "system": true
              },
              {
                "key": "Host",
                "value": "localhost:5000",
                "system": true
              },
              {
                "key": "Accept-Encoding",
                "value": "gzip, deflate, br",
                "system": true
              },
              {
                "key": "Connection",
                "value": "keep-alive",
                "system": true
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "42a79350-f37f-4a91-8402-0f6df74ef822",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ]
              }
            }
          ]
        },
        "cursor": {
          "ref": "44bc035d-5d3e-43cb-b0cd-9e0954f050d7",
          "length": 7,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "b6d9b559-5d1f-4137-9bde-1ba712de2c89"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Status code is 200",
          "message": "expected PostmanResponse{ …(5) } to have property 'code'",
          "stack": "AssertionError: expected PostmanResponse{ …(5) } to have property 'code'\n   at Object.eval sandbox-script.js:1:5)",
          "checksum": "069f20f87cf5d2c50296503d3aba1045",
          "id": "d388af04-023b-4193-b17c-084f5e1e9271",
          "timestamp": 1755449811306,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 5,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "5534a53e-3bd3-492f-acb2-321b55b32bd6",
          "name": "API v1 Health",
          "request": {
            "url": {
              "path": [
                "api",
                "v1",
                "health"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "42a79350-f37f-4a91-8402-0f6df74ef822",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ],
                "_lastExecutionId": "fb79992f-d817-4a3e-bf26-608563d76b39"
              }
            }
          ]
        },
        "parent": {
          "_": {
            "postman_id": "routeforce-routing-automation"
          },
          "item": [
            {
              "id": "522c6cb8-8b5b-48c9-af53-2c7539c4ca12",
              "name": "Optimize Endpoint",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "optimize"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"param1\": \"value1\",\n  \"param2\": \"value2\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "03bb0dc5-30f1-470c-8fdd-abb8a6b7e4e8",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "pm.test(\"Response has expected property\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData).to.have.property('result');",
                      "});"
                    ],
                    "_lastExecutionId": "2942f2c9-4971-4ab6-b37c-8c64588de514"
                  }
                }
              ]
            },
            {
              "id": "94fe0f43-7645-4153-a838-405ae52fc365",
              "name": "Scoring Endpoint",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "route",
                    "score"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "3b9b4382-6550-4bd8-9715-1f00a2f95bbb",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "pm.test(\"Response is JSON\", function () {",
                      "    pm.response.to.be.json;",
                      "});"
                    ],
                    "_lastExecutionId": "f1cc9fc9-e0bc-4360-9a09-5a84f78e65ce"
                  }
                }
              ]
            },
            {
              "id": "449654de-3201-4c9d-8161-03cfa4b9700e",
              "name": "API v1 Routes (POST)",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "v1",
                    "routes"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{access_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"param1\": \"value1\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "3b0b9afd-c3fd-49fa-994f-6b64e3cc74fa",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200 or 201\", function () {",
                      "    pm.expect([200,201]).to.include(pm.response.code);",
                      "});"
                    ],
                    "_lastExecutionId": "f8b4dadb-2782-4dc2-8f52-8e2fca664b8e"
                  }
                }
              ]
            },
            {
              "id": "1c063b7e-d30e-4c4b-a48a-39469f8f70fb",
              "name": "API v1 Routes (GET)",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "v1",
                    "routes"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{access_token}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "c0a964e2-0ca7-4726-897c-f043e0df1b54",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "pm.test(\"Response is JSON\", function () {",
                      "    pm.response.to.be.json;",
                      "});"
                    ],
                    "_lastExecutionId": "7858985a-e161-4ad3-ad9d-180790d3187d"
                  }
                }
              ]
            },
            {
              "id": "5534a53e-3bd3-492f-acb2-321b55b32bd6",
              "name": "API v1 Health",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "v1",
                    "health"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "42a79350-f37f-4a91-8402-0f6df74ef822",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});"
                    ],
                    "_lastExecutionId": "fb79992f-d817-4a3e-bf26-608563d76b39"
                  }
                }
              ]
            },
            {
              "id": "c134dfb2-4402-4091-9764-334cc22e781d",
              "name": "API v1 Metrics",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "v1",
                    "metrics"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "75629c9b-320f-4c6f-8a3e-23b76982566c",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});"
                    ],
                    "_lastExecutionId": "f1bc4923-33b2-4c9f-a504-c358c9907a04"
                  }
                }
              ]
            },
            {
              "id": "9fa4bd69-fef0-4069-9767-35f28d0cfa35",
              "name": "API v1 ML Predict",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "v1",
                    "ml",
                    "predict"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{access_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"input\": \"test\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "a1f2b0ba-70ba-4f7e-a993-cb68102a18e8",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});"
                    ],
                    "_lastExecutionId": "9c239374-3303-46cf-999a-c18c2cbca977"
                  }
                }
              ]
            }
          ],
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "a0e9ccd5-9bcd-4060-9c57-7a7660f6eb68",
                "type": "text/javascript",
                "exec": [
                  "function loginAndSetToken() {",
                  "    pm.sendRequest({",
                  "        url: pm.variables.replaceIn('{{base_url}}/auth/login'),",
                  "        method: 'POST',",
                  "        header: { 'Content-Type': 'application/json' },",
                  "        body: {",
                  "            mode: 'raw',",
                  "            raw: JSON.stringify({ email: 'testuser@example.com', password: 'testpassword' })",
                  "        }",
                  "    }, function (err, res) {",
                  "        if (!err && res.code === 200 && res.json().access_token) {",
                  "            pm.collectionVariables.set('access_token', res.json().access_token);",
                  "        } else if (res && res.code === 401) {",
                  "            // Register the user, then retry login",
                  "            pm.sendRequest({",
                  "                url: pm.variables.replaceIn('{{base_url}}/auth/register'),",
                  "                method: 'POST',",
                  "                header: { 'Content-Type': 'application/json' },",
                  "                body: {",
                  "                    mode: 'raw',",
                  "                    raw: JSON.stringify({ email: 'testuser@example.com', password: 'testpassword', name: 'Test User' })",
                  "                }",
                  "            }, function (err2, res2) {",
                  "                // Retry login after registration",
                  "                pm.sendRequest({",
                  "                    url: pm.variables.replaceIn('{{base_url}}/auth/login'),",
                  "                    method: 'POST',",
                  "                    header: { 'Content-Type': 'application/json' },",
                  "                    body: {",
                  "                        mode: 'raw',",
                  "                        raw: JSON.stringify({ email: 'testuser@example.com', password: 'testpassword' })",
                  "                    }",
                  "                }, function (err3, res3) {",
                  "                    if (!err3 && res3.code === 200 && res3.json().access_token) {",
                  "                        pm.collectionVariables.set('access_token', res3.json().access_token);",
                  "                    }",
                  "                });",
                  "            });",
                  "        }",
                  "    });",
                  "}",
                  "if (!pm.collectionVariables.get('access_token')) {",
                  "    loginAndSetToken();",
                  "}"
                ],
                "_lastExecutionId": "351519cd-91ff-4252-8191-4c74181944c9"
              }
            }
          ],
          "variable": [],
          "info": {
            "_postman_id": "routeforce-routing-automation",
            "name": "RouteForceRouting API Automation",
            "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
          }
        },
        "cursor": {
          "ref": "44bc035d-5d3e-43cb-b0cd-9e0954f050d7",
          "length": 7,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "b6d9b559-5d1f-4137-9bde-1ba712de2c89",
          "scriptId": "42a79350-f37f-4a91-8402-0f6df74ef822",
          "execution": "fb79992f-d817-4a3e-bf26-608563d76b39"
        }
      },
      {
        "error": {
          "errno": -61,
          "code": "ECONNREFUSED",
          "syscall": "connect",
          "address": "127.0.0.1",
          "port": 5000,
          "name": "Error",
          "message": "connect ECONNREFUSED 127.0.0.1:5000",
          "stack": "Error: connect ECONNREFUSED 127.0.0.1:5000\n    at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1611:16)",
          "checksum": "dc4fca7efd601e4e050e8620e5e355d7",
          "id": "988be47c-2358-4b0c-bba5-9b5ef50259e3",
          "timestamp": 1755449811315,
          "stacktrace": [
            {
              "fileName": "node:net",
              "lineNumber": 1611,
              "functionName": "TCPConnectWrap.afterConnect [as oncomplete]",
              "typeName": "TCPConnectWrap",
              "methodName": "afterConnect [as oncomplete]",
              "columnNumber": 16,
              "native": false
            }
          ]
        },
        "at": "request",
        "source": {
          "id": "2ffc4e7a-f50d-4dc2-8c03-b8638da2604f",
          "request": {
            "url": {
              "protocol": "http",
              "port": "5000",
              "path": [
                "auth",
                "login"
              ],
              "host": [
                "localhost"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "User-Agent",
                "value": "PostmanRuntime/7.39.1",
                "system": true
              },
              {
                "key": "Accept",
                "value": "*/*",
                "system": true
              },
              {
                "key": "Cache-Control",
                "value": "no-cache",
                "system": true
              },
              {
                "key": "Postman-Token",
                "value": "95c01f4f-6c08-4724-8158-a3f463b4bf33",
                "system": true
              },
              {
                "key": "Host",
                "value": "localhost:5000",
                "system": true
              },
              {
                "key": "Accept-Encoding",
                "value": "gzip, deflate, br",
                "system": true
              },
              {
                "key": "Connection",
                "value": "keep-alive",
                "system": true
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\"email\":\"testuser@example.com\",\"password\":\"testpassword\"}"
            }
          },
          "response": [],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        "cursor": {
          "ref": "cc8117a8-a47c-404a-8170-6048501f4545",
          "length": 7,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "scriptId": "a0e9ccd5-9bcd-4060-9c57-7a7660f6eb68",
          "execution": "32ec7716-c8e5-41f9-bee6-e38f7217f4a0",
          "httpRequestId": "1f6f12d1-fbd9-4f0f-8c11-4d58d3fac5f1"
        }
      },
      {
        "error": {
          "errno": -61,
          "code": "ECONNREFUSED",
          "syscall": "connect",
          "address": "127.0.0.1",
          "port": 5000,
          "name": "Error",
          "message": "connect ECONNREFUSED 127.0.0.1:5000",
          "stack": "Error: connect ECONNREFUSED 127.0.0.1:5000\n    at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1611:16)",
          "checksum": "dc4fca7efd601e4e050e8620e5e355d7",
          "id": "ecd94363-c754-4554-874f-003f52436fad",
          "timestamp": 1755449811320,
          "stacktrace": [
            {
              "fileName": "node:net",
              "lineNumber": 1611,
              "functionName": "TCPConnectWrap.afterConnect [as oncomplete]",
              "typeName": "TCPConnectWrap",
              "methodName": "afterConnect [as oncomplete]",
              "columnNumber": 16,
              "native": false
            }
          ]
        },
        "at": "request",
        "source": {
          "id": "c134dfb2-4402-4091-9764-334cc22e781d",
          "name": "API v1 Metrics",
          "request": {
            "url": {
              "protocol": "http",
              "port": "5000",
              "path": [
                "api",
                "v1",
                "metrics"
              ],
              "host": [
                "localhost"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "User-Agent",
                "value": "PostmanRuntime/7.39.1",
                "system": true
              },
              {
                "key": "Accept",
                "value": "*/*",
                "system": true
              },
              {
                "key": "Cache-Control",
                "value": "no-cache",
                "system": true
              },
              {
                "key": "Postman-Token",
                "value": "09512556-c2d4-43dd-a040-f3070b5bfbea",
                "system": true
              },
              {
                "key": "Host",
                "value": "localhost:5000",
                "system": true
              },
              {
                "key": "Accept-Encoding",
                "value": "gzip, deflate, br",
                "system": true
              },
              {
                "key": "Connection",
                "value": "keep-alive",
                "system": true
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "75629c9b-320f-4c6f-8a3e-23b76982566c",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ]
              }
            }
          ]
        },
        "cursor": {
          "ref": "cc8117a8-a47c-404a-8170-6048501f4545",
          "length": 7,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "f60cc961-e820-4a7a-9cf9-3f1757033f1d"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Status code is 200",
          "message": "expected PostmanResponse{ …(5) } to have property 'code'",
          "stack": "AssertionError: expected PostmanResponse{ …(5) } to have property 'code'\n   at Object.eval sandbox-script.js:1:6)",
          "checksum": "1a4ec3a35892ad375c572c535bbc6e63",
          "id": "e3c79336-4e9b-497a-845c-112bacba0a6f",
          "timestamp": 1755449811323,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 6,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "c134dfb2-4402-4091-9764-334cc22e781d",
          "name": "API v1 Metrics",
          "request": {
            "url": {
              "path": [
                "api",
                "v1",
                "metrics"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "75629c9b-320f-4c6f-8a3e-23b76982566c",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ],
                "_lastExecutionId": "f1bc4923-33b2-4c9f-a504-c358c9907a04"
              }
            }
          ]
        },
        "parent": {
          "_": {
            "postman_id": "routeforce-routing-automation"
          },
          "item": [
            {
              "id": "522c6cb8-8b5b-48c9-af53-2c7539c4ca12",
              "name": "Optimize Endpoint",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "optimize"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"param1\": \"value1\",\n  \"param2\": \"value2\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "03bb0dc5-30f1-470c-8fdd-abb8a6b7e4e8",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "pm.test(\"Response has expected property\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData).to.have.property('result');",
                      "});"
                    ],
                    "_lastExecutionId": "2942f2c9-4971-4ab6-b37c-8c64588de514"
                  }
                }
              ]
            },
            {
              "id": "94fe0f43-7645-4153-a838-405ae52fc365",
              "name": "Scoring Endpoint",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "route",
                    "score"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "3b9b4382-6550-4bd8-9715-1f00a2f95bbb",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "pm.test(\"Response is JSON\", function () {",
                      "    pm.response.to.be.json;",
                      "});"
                    ],
                    "_lastExecutionId": "f1cc9fc9-e0bc-4360-9a09-5a84f78e65ce"
                  }
                }
              ]
            },
            {
              "id": "449654de-3201-4c9d-8161-03cfa4b9700e",
              "name": "API v1 Routes (POST)",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "v1",
                    "routes"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{access_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"param1\": \"value1\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "3b0b9afd-c3fd-49fa-994f-6b64e3cc74fa",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200 or 201\", function () {",
                      "    pm.expect([200,201]).to.include(pm.response.code);",
                      "});"
                    ],
                    "_lastExecutionId": "f8b4dadb-2782-4dc2-8f52-8e2fca664b8e"
                  }
                }
              ]
            },
            {
              "id": "1c063b7e-d30e-4c4b-a48a-39469f8f70fb",
              "name": "API v1 Routes (GET)",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "v1",
                    "routes"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{access_token}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "c0a964e2-0ca7-4726-897c-f043e0df1b54",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "pm.test(\"Response is JSON\", function () {",
                      "    pm.response.to.be.json;",
                      "});"
                    ],
                    "_lastExecutionId": "7858985a-e161-4ad3-ad9d-180790d3187d"
                  }
                }
              ]
            },
            {
              "id": "5534a53e-3bd3-492f-acb2-321b55b32bd6",
              "name": "API v1 Health",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "v1",
                    "health"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "42a79350-f37f-4a91-8402-0f6df74ef822",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});"
                    ],
                    "_lastExecutionId": "fb79992f-d817-4a3e-bf26-608563d76b39"
                  }
                }
              ]
            },
            {
              "id": "c134dfb2-4402-4091-9764-334cc22e781d",
              "name": "API v1 Metrics",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "v1",
                    "metrics"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "75629c9b-320f-4c6f-8a3e-23b76982566c",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});"
                    ],
                    "_lastExecutionId": "f1bc4923-33b2-4c9f-a504-c358c9907a04"
                  }
                }
              ]
            },
            {
              "id": "9fa4bd69-fef0-4069-9767-35f28d0cfa35",
              "name": "API v1 ML Predict",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "v1",
                    "ml",
                    "predict"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{access_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"input\": \"test\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "a1f2b0ba-70ba-4f7e-a993-cb68102a18e8",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});"
                    ],
                    "_lastExecutionId": "9c239374-3303-46cf-999a-c18c2cbca977"
                  }
                }
              ]
            }
          ],
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "a0e9ccd5-9bcd-4060-9c57-7a7660f6eb68",
                "type": "text/javascript",
                "exec": [
                  "function loginAndSetToken() {",
                  "    pm.sendRequest({",
                  "        url: pm.variables.replaceIn('{{base_url}}/auth/login'),",
                  "        method: 'POST',",
                  "        header: { 'Content-Type': 'application/json' },",
                  "        body: {",
                  "            mode: 'raw',",
                  "            raw: JSON.stringify({ email: 'testuser@example.com', password: 'testpassword' })",
                  "        }",
                  "    }, function (err, res) {",
                  "        if (!err && res.code === 200 && res.json().access_token) {",
                  "            pm.collectionVariables.set('access_token', res.json().access_token);",
                  "        } else if (res && res.code === 401) {",
                  "            // Register the user, then retry login",
                  "            pm.sendRequest({",
                  "                url: pm.variables.replaceIn('{{base_url}}/auth/register'),",
                  "                method: 'POST',",
                  "                header: { 'Content-Type': 'application/json' },",
                  "                body: {",
                  "                    mode: 'raw',",
                  "                    raw: JSON.stringify({ email: 'testuser@example.com', password: 'testpassword', name: 'Test User' })",
                  "                }",
                  "            }, function (err2, res2) {",
                  "                // Retry login after registration",
                  "                pm.sendRequest({",
                  "                    url: pm.variables.replaceIn('{{base_url}}/auth/login'),",
                  "                    method: 'POST',",
                  "                    header: { 'Content-Type': 'application/json' },",
                  "                    body: {",
                  "                        mode: 'raw',",
                  "                        raw: JSON.stringify({ email: 'testuser@example.com', password: 'testpassword' })",
                  "                    }",
                  "                }, function (err3, res3) {",
                  "                    if (!err3 && res3.code === 200 && res3.json().access_token) {",
                  "                        pm.collectionVariables.set('access_token', res3.json().access_token);",
                  "                    }",
                  "                });",
                  "            });",
                  "        }",
                  "    });",
                  "}",
                  "if (!pm.collectionVariables.get('access_token')) {",
                  "    loginAndSetToken();",
                  "}"
                ],
                "_lastExecutionId": "351519cd-91ff-4252-8191-4c74181944c9"
              }
            }
          ],
          "variable": [],
          "info": {
            "_postman_id": "routeforce-routing-automation",
            "name": "RouteForceRouting API Automation",
            "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
          }
        },
        "cursor": {
          "ref": "cc8117a8-a47c-404a-8170-6048501f4545",
          "length": 7,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "f60cc961-e820-4a7a-9cf9-3f1757033f1d",
          "scriptId": "75629c9b-320f-4c6f-8a3e-23b76982566c",
          "execution": "f1bc4923-33b2-4c9f-a504-c358c9907a04"
        }
      },
      {
        "error": {
          "errno": -61,
          "code": "ECONNREFUSED",
          "syscall": "connect",
          "address": "127.0.0.1",
          "port": 5000,
          "name": "Error",
          "message": "connect ECONNREFUSED 127.0.0.1:5000",
          "stack": "Error: connect ECONNREFUSED 127.0.0.1:5000\n    at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1611:16)",
          "checksum": "dc4fca7efd601e4e050e8620e5e355d7",
          "id": "c6ba776c-1da0-4db4-bc0a-f29d614e8bbf",
          "timestamp": 1755449811331,
          "stacktrace": [
            {
              "fileName": "node:net",
              "lineNumber": 1611,
              "functionName": "TCPConnectWrap.afterConnect [as oncomplete]",
              "typeName": "TCPConnectWrap",
              "methodName": "afterConnect [as oncomplete]",
              "columnNumber": 16,
              "native": false
            }
          ]
        },
        "at": "request",
        "source": {
          "id": "b2d2ad6f-acb1-45d7-a5be-3bf4cb75c734",
          "request": {
            "url": {
              "protocol": "http",
              "port": "5000",
              "path": [
                "auth",
                "login"
              ],
              "host": [
                "localhost"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "User-Agent",
                "value": "PostmanRuntime/7.39.1",
                "system": true
              },
              {
                "key": "Accept",
                "value": "*/*",
                "system": true
              },
              {
                "key": "Cache-Control",
                "value": "no-cache",
                "system": true
              },
              {
                "key": "Postman-Token",
                "value": "ba1a7377-449f-4365-8882-5247dd67af1e",
                "system": true
              },
              {
                "key": "Host",
                "value": "localhost:5000",
                "system": true
              },
              {
                "key": "Accept-Encoding",
                "value": "gzip, deflate, br",
                "system": true
              },
              {
                "key": "Connection",
                "value": "keep-alive",
                "system": true
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\"email\":\"testuser@example.com\",\"password\":\"testpassword\"}"
            }
          },
          "response": [],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        "cursor": {
          "ref": "0811377e-5e5e-4c7c-b49d-658d3028cc02",
          "length": 7,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "scriptId": "a0e9ccd5-9bcd-4060-9c57-7a7660f6eb68",
          "execution": "351519cd-91ff-4252-8191-4c74181944c9",
          "httpRequestId": "45181aec-cbbf-4c22-b956-ee956ea7db82"
        }
      },
      {
        "error": {
          "errno": -61,
          "code": "ECONNREFUSED",
          "syscall": "connect",
          "address": "127.0.0.1",
          "port": 5000,
          "name": "Error",
          "message": "connect ECONNREFUSED 127.0.0.1:5000",
          "stack": "Error: connect ECONNREFUSED 127.0.0.1:5000\n    at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1611:16)",
          "checksum": "dc4fca7efd601e4e050e8620e5e355d7",
          "id": "df139743-9314-41cf-8c9c-59683967d2e7",
          "timestamp": 1755449811335,
          "stacktrace": [
            {
              "fileName": "node:net",
              "lineNumber": 1611,
              "functionName": "TCPConnectWrap.afterConnect [as oncomplete]",
              "typeName": "TCPConnectWrap",
              "methodName": "afterConnect [as oncomplete]",
              "columnNumber": 16,
              "native": false
            }
          ]
        },
        "at": "request",
        "source": {
          "id": "9fa4bd69-fef0-4069-9767-35f28d0cfa35",
          "name": "API v1 ML Predict",
          "request": {
            "url": {
              "protocol": "http",
              "port": "5000",
              "path": [
                "api",
                "v1",
                "ml",
                "predict"
              ],
              "host": [
                "localhost"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              },
              {
                "key": "User-Agent",
                "value": "PostmanRuntime/7.39.1",
                "system": true
              },
              {
                "key": "Accept",
                "value": "*/*",
                "system": true
              },
              {
                "key": "Cache-Control",
                "value": "no-cache",
                "system": true
              },
              {
                "key": "Postman-Token",
                "value": "9e61b2b8-b3b7-4df6-bf76-4924af915d50",
                "system": true
              },
              {
                "key": "Host",
                "value": "localhost:5000",
                "system": true
              },
              {
                "key": "Accept-Encoding",
                "value": "gzip, deflate, br",
                "system": true
              },
              {
                "key": "Connection",
                "value": "keep-alive",
                "system": true
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"input\": \"test\"\n}"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "a1f2b0ba-70ba-4f7e-a993-cb68102a18e8",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ]
              }
            }
          ]
        },
        "cursor": {
          "ref": "0811377e-5e5e-4c7c-b49d-658d3028cc02",
          "length": 7,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "abe9b08d-3457-406e-9409-f0432d594b7e"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Status code is 200",
          "message": "expected PostmanResponse{ …(5) } to have property 'code'",
          "stack": "AssertionError: expected PostmanResponse{ …(5) } to have property 'code'\n   at Object.eval sandbox-script.js:1:7)",
          "checksum": "cceaa75a111dfd6afb1dcf3ec5edba7f",
          "id": "9ca5a177-e826-4cca-a0c2-7235ceb794c4",
          "timestamp": 1755449811338,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 7,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "9fa4bd69-fef0-4069-9767-35f28d0cfa35",
          "name": "API v1 ML Predict",
          "request": {
            "url": {
              "path": [
                "api",
                "v1",
                "ml",
                "predict"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"input\": \"test\"\n}"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "a1f2b0ba-70ba-4f7e-a993-cb68102a18e8",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ],
                "_lastExecutionId": "9c239374-3303-46cf-999a-c18c2cbca977"
              }
            }
          ]
        },
        "parent": {
          "_": {
            "postman_id": "routeforce-routing-automation"
          },
          "item": [
            {
              "id": "522c6cb8-8b5b-48c9-af53-2c7539c4ca12",
              "name": "Optimize Endpoint",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "optimize"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"param1\": \"value1\",\n  \"param2\": \"value2\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "03bb0dc5-30f1-470c-8fdd-abb8a6b7e4e8",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "pm.test(\"Response has expected property\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData).to.have.property('result');",
                      "});"
                    ],
                    "_lastExecutionId": "2942f2c9-4971-4ab6-b37c-8c64588de514"
                  }
                }
              ]
            },
            {
              "id": "94fe0f43-7645-4153-a838-405ae52fc365",
              "name": "Scoring Endpoint",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "route",
                    "score"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "3b9b4382-6550-4bd8-9715-1f00a2f95bbb",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "pm.test(\"Response is JSON\", function () {",
                      "    pm.response.to.be.json;",
                      "});"
                    ],
                    "_lastExecutionId": "f1cc9fc9-e0bc-4360-9a09-5a84f78e65ce"
                  }
                }
              ]
            },
            {
              "id": "449654de-3201-4c9d-8161-03cfa4b9700e",
              "name": "API v1 Routes (POST)",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "v1",
                    "routes"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{access_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"param1\": \"value1\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "3b0b9afd-c3fd-49fa-994f-6b64e3cc74fa",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200 or 201\", function () {",
                      "    pm.expect([200,201]).to.include(pm.response.code);",
                      "});"
                    ],
                    "_lastExecutionId": "f8b4dadb-2782-4dc2-8f52-8e2fca664b8e"
                  }
                }
              ]
            },
            {
              "id": "1c063b7e-d30e-4c4b-a48a-39469f8f70fb",
              "name": "API v1 Routes (GET)",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "v1",
                    "routes"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{access_token}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "c0a964e2-0ca7-4726-897c-f043e0df1b54",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "pm.test(\"Response is JSON\", function () {",
                      "    pm.response.to.be.json;",
                      "});"
                    ],
                    "_lastExecutionId": "7858985a-e161-4ad3-ad9d-180790d3187d"
                  }
                }
              ]
            },
            {
              "id": "5534a53e-3bd3-492f-acb2-321b55b32bd6",
              "name": "API v1 Health",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "v1",
                    "health"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "42a79350-f37f-4a91-8402-0f6df74ef822",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});"
                    ],
                    "_lastExecutionId": "fb79992f-d817-4a3e-bf26-608563d76b39"
                  }
                }
              ]
            },
            {
              "id": "c134dfb2-4402-4091-9764-334cc22e781d",
              "name": "API v1 Metrics",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "v1",
                    "metrics"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "75629c9b-320f-4c6f-8a3e-23b76982566c",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});"
                    ],
                    "_lastExecutionId": "f1bc4923-33b2-4c9f-a504-c358c9907a04"
                  }
                }
              ]
            },
            {
              "id": "9fa4bd69-fef0-4069-9767-35f28d0cfa35",
              "name": "API v1 ML Predict",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "v1",
                    "ml",
                    "predict"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{access_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"input\": \"test\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "a1f2b0ba-70ba-4f7e-a993-cb68102a18e8",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});"
                    ],
                    "_lastExecutionId": "9c239374-3303-46cf-999a-c18c2cbca977"
                  }
                }
              ]
            }
          ],
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "a0e9ccd5-9bcd-4060-9c57-7a7660f6eb68",
                "type": "text/javascript",
                "exec": [
                  "function loginAndSetToken() {",
                  "    pm.sendRequest({",
                  "        url: pm.variables.replaceIn('{{base_url}}/auth/login'),",
                  "        method: 'POST',",
                  "        header: { 'Content-Type': 'application/json' },",
                  "        body: {",
                  "            mode: 'raw',",
                  "            raw: JSON.stringify({ email: 'testuser@example.com', password: 'testpassword' })",
                  "        }",
                  "    }, function (err, res) {",
                  "        if (!err && res.code === 200 && res.json().access_token) {",
                  "            pm.collectionVariables.set('access_token', res.json().access_token);",
                  "        } else if (res && res.code === 401) {",
                  "            // Register the user, then retry login",
                  "            pm.sendRequest({",
                  "                url: pm.variables.replaceIn('{{base_url}}/auth/register'),",
                  "                method: 'POST',",
                  "                header: { 'Content-Type': 'application/json' },",
                  "                body: {",
                  "                    mode: 'raw',",
                  "                    raw: JSON.stringify({ email: 'testuser@example.com', password: 'testpassword', name: 'Test User' })",
                  "                }",
                  "            }, function (err2, res2) {",
                  "                // Retry login after registration",
                  "                pm.sendRequest({",
                  "                    url: pm.variables.replaceIn('{{base_url}}/auth/login'),",
                  "                    method: 'POST',",
                  "                    header: { 'Content-Type': 'application/json' },",
                  "                    body: {",
                  "                        mode: 'raw',",
                  "                        raw: JSON.stringify({ email: 'testuser@example.com', password: 'testpassword' })",
                  "                    }",
                  "                }, function (err3, res3) {",
                  "                    if (!err3 && res3.code === 200 && res3.json().access_token) {",
                  "                        pm.collectionVariables.set('access_token', res3.json().access_token);",
                  "                    }",
                  "                });",
                  "            });",
                  "        }",
                  "    });",
                  "}",
                  "if (!pm.collectionVariables.get('access_token')) {",
                  "    loginAndSetToken();",
                  "}"
                ],
                "_lastExecutionId": "351519cd-91ff-4252-8191-4c74181944c9"
              }
            }
          ],
          "variable": [],
          "info": {
            "_postman_id": "routeforce-routing-automation",
            "name": "RouteForceRouting API Automation",
            "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
          }
        },
        "cursor": {
          "ref": "0811377e-5e5e-4c7c-b49d-658d3028cc02",
          "length": 7,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "abe9b08d-3457-406e-9409-f0432d594b7e",
          "scriptId": "a1f2b0ba-70ba-4f7e-a993-cb68102a18e8",
          "execution": "9c239374-3303-46cf-999a-c18c2cbca977"
        }
      }
    ],
    "error": null
  }
}