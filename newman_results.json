{
  "collection": {
    "_": {
      "postman_id": "routeforce-routing-automation"
    },
    "item": [
      {
        "id": "781fe421-3c68-4755-b319-c5e56501afa3",
        "name": "Optimize Endpoint",
        "request": {
          "url": {
            "path": [
              "api",
              "optimize"
            ],
            "host": [
              "{{base_url}}"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n  \"param1\": \"value1\",\n  \"param2\": \"value2\"\n}"
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "1c2d720c-dc56-48c1-a194-da32d4bd9f96",
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "pm.test(\"Response has expected property\", function () {",
                "    var jsonData = pm.response.json();",
                "    pm.expect(jsonData).to.have.property('result');",
                "});"
              ],
              "_lastExecutionId": "295456ac-d6f9-4659-8529-4b93424a7a19"
            }
          }
        ]
      },
      {
        "id": "15203e8c-6dd5-4b49-9495-17668edfda9a",
        "name": "Scoring Endpoint",
        "request": {
          "url": {
            "path": [
              "api",
              "route",
              "score"
            ],
            "host": [
              "{{base_url}}"
            ],
            "query": [],
            "variable": []
          },
          "method": "GET"
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "e6f6af9f-4ed4-4a1d-a4b6-c3d622cac3aa",
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "pm.test(\"Response is JSON\", function () {",
                "    pm.response.to.be.json;",
                "});"
              ],
              "_lastExecutionId": "64e2c379-813a-4c4f-99f7-5685bf321f0c"
            }
          }
        ]
      },
      {
        "id": "d0e965f4-6c16-4059-a7aa-f53d091ee72e",
        "name": "API v1 Routes (POST)",
        "request": {
          "url": {
            "path": [
              "api",
              "v1",
              "routes"
            ],
            "host": [
              "{{base_url}}"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Authorization",
              "value": "Bearer {{access_token}}"
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n  \"param1\": \"value1\"\n}"
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "033464f0-f156-46c7-b9b6-d69525611a8f",
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200 or 201\", function () {",
                "    pm.expect([200,201]).to.include(pm.response.code);",
                "});"
              ],
              "_lastExecutionId": "56c9cd55-8be7-40b6-992b-81bcac291c04"
            }
          }
        ]
      },
      {
        "id": "6edf2c34-e584-42c7-9152-be905ae91313",
        "name": "API v1 Routes (GET)",
        "request": {
          "url": {
            "path": [
              "api",
              "v1",
              "routes"
            ],
            "host": [
              "{{base_url}}"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer {{access_token}}"
            }
          ],
          "method": "GET"
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "8cd3450c-ab2e-4722-b196-ff870260c3d5",
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "pm.test(\"Response is JSON\", function () {",
                "    pm.response.to.be.json;",
                "});"
              ],
              "_lastExecutionId": "e07dd214-4209-4e36-b76d-156c9a43dece"
            }
          }
        ]
      },
      {
        "id": "c90d49cb-0763-43c8-ba3e-327ef2da14b0",
        "name": "API v1 Health",
        "request": {
          "url": {
            "path": [
              "api",
              "v1",
              "health"
            ],
            "host": [
              "{{base_url}}"
            ],
            "query": [],
            "variable": []
          },
          "method": "GET"
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "78e6b944-95e9-48a3-a37d-fab2ec1e8ffd",
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});"
              ],
              "_lastExecutionId": "22122bf0-95f2-4f89-98a7-914875b59050"
            }
          }
        ]
      },
      {
        "id": "8271c9c5-c6b5-488c-a2d2-f0c48f6dfd07",
        "name": "API v1 Metrics",
        "request": {
          "url": {
            "path": [
              "api",
              "v1",
              "metrics"
            ],
            "host": [
              "{{base_url}}"
            ],
            "query": [],
            "variable": []
          },
          "method": "GET"
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "4ff42b55-be05-408a-816f-ebeae3534dd3",
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});"
              ],
              "_lastExecutionId": "0db5b281-9605-45e4-94a9-468b69cf53d1"
            }
          }
        ]
      },
      {
        "id": "a7a3d9bf-2601-4150-9e0b-3f150f4dcda2",
        "name": "API v1 ML Predict",
        "request": {
          "url": {
            "path": [
              "api",
              "v1",
              "ml",
              "predict"
            ],
            "host": [
              "{{base_url}}"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Authorization",
              "value": "Bearer {{access_token}}"
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n  \"input\": \"test\"\n}"
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "bf29ca89-655d-4824-8408-b6ebf8d77d3e",
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});"
              ],
              "_lastExecutionId": "da9b7b3b-1c98-4f27-a222-c19dc3f58ddf"
            }
          }
        ]
      }
    ],
    "event": [
      {
        "listen": "prerequest",
        "script": {
          "id": "969c613d-54ae-45b7-8175-d08a8da64a9a",
          "type": "text/javascript",
          "exec": [
            "function loginAndSetToken() {",
            "    pm.sendRequest({",
            "        url: pm.variables.replaceIn('{{base_url}}/auth/login'),",
            "        method: 'POST',",
            "        header: { 'Content-Type': 'application/json' },",
            "        body: {",
            "            mode: 'raw',",
            "            raw: JSON.stringify({ email: 'testuser@example.com', password: 'testpassword' })",
            "        }",
            "    }, function (err, res) {",
            "        if (!err && res.code === 200 && res.json().access_token) {",
            "            pm.collectionVariables.set('access_token', res.json().access_token);",
            "        } else if (res && res.code === 401) {",
            "            // Register the user, then retry login",
            "            pm.sendRequest({",
            "                url: pm.variables.replaceIn('{{base_url}}/auth/register'),",
            "                method: 'POST',",
            "                header: { 'Content-Type': 'application/json' },",
            "                body: {",
            "                    mode: 'raw',",
            "                    raw: JSON.stringify({ email: 'testuser@example.com', password: 'testpassword', name: 'Test User' })",
            "                }",
            "            }, function (err2, res2) {",
            "                // Retry login after registration",
            "                pm.sendRequest({",
            "                    url: pm.variables.replaceIn('{{base_url}}/auth/login'),",
            "                    method: 'POST',",
            "                    header: { 'Content-Type': 'application/json' },",
            "                    body: {",
            "                        mode: 'raw',",
            "                        raw: JSON.stringify({ email: 'testuser@example.com', password: 'testpassword' })",
            "                    }",
            "                }, function (err3, res3) {",
            "                    if (!err3 && res3.code === 200 && res3.json().access_token) {",
            "                        pm.collectionVariables.set('access_token', res3.json().access_token);",
            "                    }",
            "                });",
            "            });",
            "        }",
            "    });",
            "}",
            "if (!pm.collectionVariables.get('access_token')) {",
            "    loginAndSetToken();",
            "}"
          ],
          "_lastExecutionId": "62fab06b-64d8-40e7-a51e-4916b456cc52"
        }
      }
    ],
    "variable": [],
    "info": {
      "_postman_id": "routeforce-routing-automation",
      "name": "RouteForceRouting API Automation",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    }
  },
  "environment": {
    "_": {
      "postman_variable_scope": "environment",
      "postman_exported_at": "2025-08-17T00:00:00.000Z",
      "postman_exported_using": "Postman/2025.8.17"
    },
    "id": "routeforce-routing-env",
    "name": "RouteForceRouting Local",
    "values": [
      {
        "type": "any",
        "value": "http://localhost:5000",
        "key": "base_url"
      }
    ]
  },
  "globals": {
    "id": "43f24aae-1c88-47b1-b13f-b5bedb6d4875",
    "values": []
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 7,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 14,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 7,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 10,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 7,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 10,
        "pending": 0,
        "failed": 8
      },
      "testScripts": {
        "total": 7,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 7,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 33.9,
      "responseMin": 4,
      "responseMax": 143,
      "responseSd": 50.66251079447208,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1755439243141,
      "completed": 1755439243619
    },
    "executions": [
      {
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 7,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "1d61b98a-e149-4c66-b43f-de37975e17d9",
          "httpRequestId": "98eca3f7-4b59-4c08-a8e9-ca82ac4defc4"
        },
        "item": {
          "id": "781fe421-3c68-4755-b319-c5e56501afa3",
          "name": "Optimize Endpoint",
          "request": {
            "url": {
              "path": [
                "api",
                "optimize"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"param1\": \"value1\",\n  \"param2\": \"value2\"\n}"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "1c2d720c-dc56-48c1-a194-da32d4bd9f96",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "pm.test(\"Response has expected property\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('result');",
                  "});"
                ],
                "_lastExecutionId": "295456ac-d6f9-4659-8529-4b93424a7a19"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "5000",
            "path": [
              "api",
              "optimize"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "e27eb434-5e20-4c5c-a9d7-f632268770a3",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:5000",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "46",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n  \"param1\": \"value1\",\n  \"param2\": \"value2\"\n}"
          }
        },
        "response": {
          "id": "73412070-7fbf-48c7-bac6-0e5ba94aa31e",
          "status": "INTERNAL SERVER ERROR",
          "code": 500,
          "header": [
            {
              "key": "Server",
              "value": "Werkzeug/3.1.3 Python/3.12.11"
            },
            {
              "key": "Date",
              "value": "Sun, 17 Aug 2025 14:00:43 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Content-Length",
              "value": "100"
            },
            {
              "key": "X-Content-Type-Options",
              "value": "nosniff"
            },
            {
              "key": "X-Frame-Options",
              "value": "DENY"
            },
            {
              "key": "Referrer-Policy",
              "value": "no-referrer"
            },
            {
              "key": "X-XSS-Protection",
              "value": "0"
            },
            {
              "key": "Strict-Transport-Security",
              "value": "max-age=31536000; includeSubDomains"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "http://localhost:3000"
            },
            {
              "key": "Access-Control-Allow-Credentials",
              "value": "true"
            },
            {
              "key": "Vary",
              "value": "Origin"
            },
            {
              "key": "X-Request-ID",
              "value": "e1e0838d-7350-49f5-b2f4-091adcb429ad"
            },
            {
              "key": "Connection",
              "value": "close"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              101,
              114,
              114,
              111,
              114,
              34,
              58,
              34,
              73,
              110,
              116,
              101,
              114,
              110,
              97,
              108,
              32,
              115,
              101,
              114,
              118,
              101,
              114,
              32,
              101,
              114,
              114,
              111,
              114,
              34,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              65,
              110,
              32,
              117,
              110,
              101,
              120,
              112,
              101,
              99,
              116,
              101,
              100,
              32,
              101,
              114,
              114,
              111,
              114,
              32,
              111,
              99,
              99,
              117,
              114,
              114,
              101,
              100,
              46,
              32,
              80,
              108,
              101,
              97,
              115,
              101,
              32,
              116,
              114,
              121,
              32,
              97,
              103,
              97,
              105,
              110,
              32,
              108,
              97,
              116,
              101,
              114,
              46,
              34,
              125,
              10
            ]
          },
          "cookie": [],
          "responseTime": 10,
          "responseSize": 100
        },
        "id": "781fe421-3c68-4755-b319-c5e56501afa3",
        "assertions": [
          {
            "assertion": "Status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Status code is 200",
              "message": "expected response to have status code 200 but got 500",
              "stack": "AssertionError: expected response to have status code 200 but got 500\n   at Object.eval sandbox-script.js:1:1)"
            }
          },
          {
            "assertion": "Response has expected property",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "Response has expected property",
              "message": "expected { Object (error, message) } to have property 'result'",
              "stack": "AssertionError: expected { Object (error, message) } to have property 'result'\n   at Object.eval sandbox-script.js:2:1)"
            }
          }
        ]
      },
      {
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 7,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "1d61b98a-e149-4c66-b43f-de37975e17d9",
          "httpRequestId": "98eca3f7-4b59-4c08-a8e9-ca82ac4defc4"
        },
        "item": {
          "id": "781fe421-3c68-4755-b319-c5e56501afa3",
          "name": "Optimize Endpoint",
          "request": {
            "url": {
              "path": [
                "api",
                "optimize"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"param1\": \"value1\",\n  \"param2\": \"value2\"\n}"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "1c2d720c-dc56-48c1-a194-da32d4bd9f96",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "pm.test(\"Response has expected property\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('result');",
                  "});"
                ],
                "_lastExecutionId": "295456ac-d6f9-4659-8529-4b93424a7a19"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "5000",
            "path": [
              "api",
              "optimize"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "e27eb434-5e20-4c5c-a9d7-f632268770a3",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:5000",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "46",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n  \"param1\": \"value1\",\n  \"param2\": \"value2\"\n}"
          }
        },
        "response": {
          "id": "73412070-7fbf-48c7-bac6-0e5ba94aa31e",
          "status": "INTERNAL SERVER ERROR",
          "code": 500,
          "header": [
            {
              "key": "Server",
              "value": "Werkzeug/3.1.3 Python/3.12.11"
            },
            {
              "key": "Date",
              "value": "Sun, 17 Aug 2025 14:00:43 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Content-Length",
              "value": "100"
            },
            {
              "key": "X-Content-Type-Options",
              "value": "nosniff"
            },
            {
              "key": "X-Frame-Options",
              "value": "DENY"
            },
            {
              "key": "Referrer-Policy",
              "value": "no-referrer"
            },
            {
              "key": "X-XSS-Protection",
              "value": "0"
            },
            {
              "key": "Strict-Transport-Security",
              "value": "max-age=31536000; includeSubDomains"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "http://localhost:3000"
            },
            {
              "key": "Access-Control-Allow-Credentials",
              "value": "true"
            },
            {
              "key": "Vary",
              "value": "Origin"
            },
            {
              "key": "X-Request-ID",
              "value": "e1e0838d-7350-49f5-b2f4-091adcb429ad"
            },
            {
              "key": "Connection",
              "value": "close"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              101,
              114,
              114,
              111,
              114,
              34,
              58,
              34,
              73,
              110,
              116,
              101,
              114,
              110,
              97,
              108,
              32,
              115,
              101,
              114,
              118,
              101,
              114,
              32,
              101,
              114,
              114,
              111,
              114,
              34,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              65,
              110,
              32,
              117,
              110,
              101,
              120,
              112,
              101,
              99,
              116,
              101,
              100,
              32,
              101,
              114,
              114,
              111,
              114,
              32,
              111,
              99,
              99,
              117,
              114,
              114,
              101,
              100,
              46,
              32,
              80,
              108,
              101,
              97,
              115,
              101,
              32,
              116,
              114,
              121,
              32,
              97,
              103,
              97,
              105,
              110,
              32,
              108,
              97,
              116,
              101,
              114,
              46,
              34,
              125,
              10
            ]
          },
          "cookie": [],
          "responseTime": 10,
          "responseSize": 100
        },
        "id": "781fe421-3c68-4755-b319-c5e56501afa3",
        "assertions": [
          {
            "assertion": "Status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Status code is 200",
              "message": "expected response to have status code 200 but got 500",
              "stack": "AssertionError: expected response to have status code 200 but got 500\n   at Object.eval sandbox-script.js:1:1)"
            }
          },
          {
            "assertion": "Response has expected property",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "Response has expected property",
              "message": "expected { Object (error, message) } to have property 'result'",
              "stack": "AssertionError: expected { Object (error, message) } to have property 'result'\n   at Object.eval sandbox-script.js:2:1)"
            }
          }
        ]
      },
      {
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 7,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "1d61b98a-e149-4c66-b43f-de37975e17d9",
          "httpRequestId": "98eca3f7-4b59-4c08-a8e9-ca82ac4defc4"
        },
        "item": {
          "id": "781fe421-3c68-4755-b319-c5e56501afa3",
          "name": "Optimize Endpoint",
          "request": {
            "url": {
              "path": [
                "api",
                "optimize"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"param1\": \"value1\",\n  \"param2\": \"value2\"\n}"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "1c2d720c-dc56-48c1-a194-da32d4bd9f96",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "pm.test(\"Response has expected property\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('result');",
                  "});"
                ],
                "_lastExecutionId": "295456ac-d6f9-4659-8529-4b93424a7a19"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "5000",
            "path": [
              "api",
              "optimize"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "e27eb434-5e20-4c5c-a9d7-f632268770a3",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:5000",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "46",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n  \"param1\": \"value1\",\n  \"param2\": \"value2\"\n}"
          }
        },
        "response": {
          "id": "73412070-7fbf-48c7-bac6-0e5ba94aa31e",
          "status": "INTERNAL SERVER ERROR",
          "code": 500,
          "header": [
            {
              "key": "Server",
              "value": "Werkzeug/3.1.3 Python/3.12.11"
            },
            {
              "key": "Date",
              "value": "Sun, 17 Aug 2025 14:00:43 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Content-Length",
              "value": "100"
            },
            {
              "key": "X-Content-Type-Options",
              "value": "nosniff"
            },
            {
              "key": "X-Frame-Options",
              "value": "DENY"
            },
            {
              "key": "Referrer-Policy",
              "value": "no-referrer"
            },
            {
              "key": "X-XSS-Protection",
              "value": "0"
            },
            {
              "key": "Strict-Transport-Security",
              "value": "max-age=31536000; includeSubDomains"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "http://localhost:3000"
            },
            {
              "key": "Access-Control-Allow-Credentials",
              "value": "true"
            },
            {
              "key": "Vary",
              "value": "Origin"
            },
            {
              "key": "X-Request-ID",
              "value": "e1e0838d-7350-49f5-b2f4-091adcb429ad"
            },
            {
              "key": "Connection",
              "value": "close"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              101,
              114,
              114,
              111,
              114,
              34,
              58,
              34,
              73,
              110,
              116,
              101,
              114,
              110,
              97,
              108,
              32,
              115,
              101,
              114,
              118,
              101,
              114,
              32,
              101,
              114,
              114,
              111,
              114,
              34,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              65,
              110,
              32,
              117,
              110,
              101,
              120,
              112,
              101,
              99,
              116,
              101,
              100,
              32,
              101,
              114,
              114,
              111,
              114,
              32,
              111,
              99,
              99,
              117,
              114,
              114,
              101,
              100,
              46,
              32,
              80,
              108,
              101,
              97,
              115,
              101,
              32,
              116,
              114,
              121,
              32,
              97,
              103,
              97,
              105,
              110,
              32,
              108,
              97,
              116,
              101,
              114,
              46,
              34,
              125,
              10
            ]
          },
          "cookie": [],
          "responseTime": 10,
          "responseSize": 100
        },
        "id": "781fe421-3c68-4755-b319-c5e56501afa3",
        "assertions": [
          {
            "assertion": "Status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Status code is 200",
              "message": "expected response to have status code 200 but got 500",
              "stack": "AssertionError: expected response to have status code 200 but got 500\n   at Object.eval sandbox-script.js:1:1)"
            }
          },
          {
            "assertion": "Response has expected property",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "Response has expected property",
              "message": "expected { Object (error, message) } to have property 'result'",
              "stack": "AssertionError: expected { Object (error, message) } to have property 'result'\n   at Object.eval sandbox-script.js:2:1)"
            }
          }
        ]
      },
      {
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 7,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "1d61b98a-e149-4c66-b43f-de37975e17d9",
          "httpRequestId": "98eca3f7-4b59-4c08-a8e9-ca82ac4defc4"
        },
        "item": {
          "id": "781fe421-3c68-4755-b319-c5e56501afa3",
          "name": "Optimize Endpoint",
          "request": {
            "url": {
              "path": [
                "api",
                "optimize"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"param1\": \"value1\",\n  \"param2\": \"value2\"\n}"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "1c2d720c-dc56-48c1-a194-da32d4bd9f96",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "pm.test(\"Response has expected property\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('result');",
                  "});"
                ],
                "_lastExecutionId": "295456ac-d6f9-4659-8529-4b93424a7a19"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "5000",
            "path": [
              "api",
              "optimize"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "e27eb434-5e20-4c5c-a9d7-f632268770a3",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:5000",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "46",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n  \"param1\": \"value1\",\n  \"param2\": \"value2\"\n}"
          }
        },
        "response": {
          "id": "73412070-7fbf-48c7-bac6-0e5ba94aa31e",
          "status": "INTERNAL SERVER ERROR",
          "code": 500,
          "header": [
            {
              "key": "Server",
              "value": "Werkzeug/3.1.3 Python/3.12.11"
            },
            {
              "key": "Date",
              "value": "Sun, 17 Aug 2025 14:00:43 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Content-Length",
              "value": "100"
            },
            {
              "key": "X-Content-Type-Options",
              "value": "nosniff"
            },
            {
              "key": "X-Frame-Options",
              "value": "DENY"
            },
            {
              "key": "Referrer-Policy",
              "value": "no-referrer"
            },
            {
              "key": "X-XSS-Protection",
              "value": "0"
            },
            {
              "key": "Strict-Transport-Security",
              "value": "max-age=31536000; includeSubDomains"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "http://localhost:3000"
            },
            {
              "key": "Access-Control-Allow-Credentials",
              "value": "true"
            },
            {
              "key": "Vary",
              "value": "Origin"
            },
            {
              "key": "X-Request-ID",
              "value": "e1e0838d-7350-49f5-b2f4-091adcb429ad"
            },
            {
              "key": "Connection",
              "value": "close"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              101,
              114,
              114,
              111,
              114,
              34,
              58,
              34,
              73,
              110,
              116,
              101,
              114,
              110,
              97,
              108,
              32,
              115,
              101,
              114,
              118,
              101,
              114,
              32,
              101,
              114,
              114,
              111,
              114,
              34,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              65,
              110,
              32,
              117,
              110,
              101,
              120,
              112,
              101,
              99,
              116,
              101,
              100,
              32,
              101,
              114,
              114,
              111,
              114,
              32,
              111,
              99,
              99,
              117,
              114,
              114,
              101,
              100,
              46,
              32,
              80,
              108,
              101,
              97,
              115,
              101,
              32,
              116,
              114,
              121,
              32,
              97,
              103,
              97,
              105,
              110,
              32,
              108,
              97,
              116,
              101,
              114,
              46,
              34,
              125,
              10
            ]
          },
          "cookie": [],
          "responseTime": 10,
          "responseSize": 100
        },
        "id": "781fe421-3c68-4755-b319-c5e56501afa3",
        "assertions": [
          {
            "assertion": "Status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Status code is 200",
              "message": "expected response to have status code 200 but got 500",
              "stack": "AssertionError: expected response to have status code 200 but got 500\n   at Object.eval sandbox-script.js:1:1)"
            }
          },
          {
            "assertion": "Response has expected property",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "Response has expected property",
              "message": "expected { Object (error, message) } to have property 'result'",
              "stack": "AssertionError: expected { Object (error, message) } to have property 'result'\n   at Object.eval sandbox-script.js:2:1)"
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "54d59f68-019f-40cc-9ebe-966bcc927553",
          "length": 7,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "b172f03e-4eed-4e5b-9f99-437fde9486a4"
        },
        "item": {
          "id": "15203e8c-6dd5-4b49-9495-17668edfda9a",
          "name": "Scoring Endpoint",
          "request": {
            "url": {
              "path": [
                "api",
                "route",
                "score"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "e6f6af9f-4ed4-4a1d-a4b6-c3d622cac3aa",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "pm.test(\"Response is JSON\", function () {",
                  "    pm.response.to.be.json;",
                  "});"
                ],
                "_lastExecutionId": "64e2c379-813a-4c4f-99f7-5685bf321f0c"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "5000",
            "path": [
              "api",
              "route",
              "score"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "7b88c122-766c-46d0-8041-ec9c97133680",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:5000",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET"
        },
        "response": {
          "id": "6c982bb8-a08d-4996-b4d2-8be043b5889f",
          "status": "METHOD NOT ALLOWED",
          "code": 405,
          "header": [
            {
              "key": "Server",
              "value": "Werkzeug/3.1.3 Python/3.12.11"
            },
            {
              "key": "Date",
              "value": "Sun, 17 Aug 2025 14:00:43 GMT"
            },
            {
              "key": "Content-Type",
              "value": "text/html; charset=utf-8"
            },
            {
              "key": "Allow",
              "value": "POST, OPTIONS"
            },
            {
              "key": "Content-Length",
              "value": "153"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "http://localhost:3000"
            },
            {
              "key": "Access-Control-Allow-Credentials",
              "value": "true"
            },
            {
              "key": "Vary",
              "value": "Origin"
            },
            {
              "key": "X-Content-Type-Options",
              "value": "nosniff"
            },
            {
              "key": "X-Frame-Options",
              "value": "DENY"
            },
            {
              "key": "Referrer-Policy",
              "value": "no-referrer"
            },
            {
              "key": "X-XSS-Protection",
              "value": "0"
            },
            {
              "key": "Strict-Transport-Security",
              "value": "max-age=31536000; includeSubDomains"
            },
            {
              "key": "X-Request-ID",
              "value": "ac0941c3-6a21-4dfc-b62a-b21b508f68ed"
            },
            {
              "key": "Connection",
              "value": "close"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              60,
              33,
              100,
              111,
              99,
              116,
              121,
              112,
              101,
              32,
              104,
              116,
              109,
              108,
              62,
              10,
              60,
              104,
              116,
              109,
              108,
              32,
              108,
              97,
              110,
              103,
              61,
              101,
              110,
              62,
              10,
              60,
              116,
              105,
              116,
              108,
              101,
              62,
              52,
              48,
              53,
              32,
              77,
              101,
              116,
              104,
              111,
              100,
              32,
              78,
              111,
              116,
              32,
              65,
              108,
              108,
              111,
              119,
              101,
              100,
              60,
              47,
              116,
              105,
              116,
              108,
              101,
              62,
              10,
              60,
              104,
              49,
              62,
              77,
              101,
              116,
              104,
              111,
              100,
              32,
              78,
              111,
              116,
              32,
              65,
              108,
              108,
              111,
              119,
              101,
              100,
              60,
              47,
              104,
              49,
              62,
              10,
              60,
              112,
              62,
              84,
              104,
              101,
              32,
              109,
              101,
              116,
              104,
              111,
              100,
              32,
              105,
              115,
              32,
              110,
              111,
              116,
              32,
              97,
              108,
              108,
              111,
              119,
              101,
              100,
              32,
              102,
              111,
              114,
              32,
              116,
              104,
              101,
              32,
              114,
              101,
              113,
              117,
              101,
              115,
              116,
              101,
              100,
              32,
              85,
              82,
              76,
              46,
              60,
              47,
              112,
              62,
              10
            ]
          },
          "cookie": [],
          "responseTime": 4,
          "responseSize": 153
        },
        "id": "15203e8c-6dd5-4b49-9495-17668edfda9a",
        "assertions": [
          {
            "assertion": "Status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Status code is 200",
              "message": "expected response to have status code 200 but got 405",
              "stack": "AssertionError: expected response to have status code 200 but got 405\n   at Object.eval sandbox-script.js:1:2)"
            }
          },
          {
            "assertion": "Response is JSON",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "Response is JSON",
              "message": "expected response body to be a valid json but got error Unexpected token '<' at 1:1",
              "stack": "AssertionError: expected response body to be a valid json but got error Unexpected token '<' at 1:1\n   at Object.eval sandbox-script.js:2:2)"
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "01233dec-74ac-4bf7-9fd1-6570657c2041",
          "length": 7,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "6194a3bb-b72e-4c1d-a37f-c149b56faa04"
        },
        "item": {
          "id": "d0e965f4-6c16-4059-a7aa-f53d091ee72e",
          "name": "API v1 Routes (POST)",
          "request": {
            "url": {
              "path": [
                "api",
                "v1",
                "routes"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"param1\": \"value1\"\n}"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "033464f0-f156-46c7-b9b6-d69525611a8f",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200 or 201\", function () {",
                  "    pm.expect([200,201]).to.include(pm.response.code);",
                  "});"
                ],
                "_lastExecutionId": "56c9cd55-8be7-40b6-992b-81bcac291c04"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "5000",
            "path": [
              "api",
              "v1",
              "routes"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Authorization",
              "value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJmcmVzaCI6ZmFsc2UsImlhdCI6MTc1NTQzOTI0MywianRpIjoiZDkxMmMxN2QtNzAxZC00OTRhLTliYmItMWEzYTcxZjdmZTY0IiwidHlwZSI6ImFjY2VzcyIsInN1YiI6InRlc3R1c2VyQGV4YW1wbGUuY29tIiwibmJmIjoxNzU1NDM5MjQzLCJjc3JmIjoiMzczOGYzYmQtMTlmYS00MzUwLTljOTEtM2U3NmZmODNjYTAyIiwiZXhwIjoxNzU1NTI1NjQzfQ.OQrY-Vb7lrah6zTIHtTeyfVcKeBJmJmEfsoAn78-NHw"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "dce78de4-5af9-4995-ab67-8ee0ef034023",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:5000",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "24",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n  \"param1\": \"value1\"\n}"
          }
        },
        "response": {
          "id": "dfe2464f-c210-4a11-9025-b2b438130655",
          "status": "BAD REQUEST",
          "code": 400,
          "header": [
            {
              "key": "Server",
              "value": "Werkzeug/3.1.3 Python/3.12.11"
            },
            {
              "key": "Date",
              "value": "Sun, 17 Aug 2025 14:00:43 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Content-Length",
              "value": "122"
            },
            {
              "key": "X-Content-Type-Options",
              "value": "nosniff"
            },
            {
              "key": "X-Frame-Options",
              "value": "DENY"
            },
            {
              "key": "Referrer-Policy",
              "value": "no-referrer"
            },
            {
              "key": "X-XSS-Protection",
              "value": "0"
            },
            {
              "key": "Strict-Transport-Security",
              "value": "max-age=31536000; includeSubDomains"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "http://localhost:3000"
            },
            {
              "key": "Access-Control-Allow-Credentials",
              "value": "true"
            },
            {
              "key": "Vary",
              "value": "Origin"
            },
            {
              "key": "X-Request-ID",
              "value": "896a06bd-c3db-4287-b16a-917fcec82543"
            },
            {
              "key": "Connection",
              "value": "close"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              99,
              111,
              100,
              101,
              34,
              58,
              34,
              77,
              73,
              83,
              83,
              73,
              78,
              71,
              95,
              70,
              73,
              69,
              76,
              68,
              83,
              34,
              44,
              34,
              101,
              114,
              114,
              111,
              114,
              34,
              58,
              34,
              77,
              105,
              115,
              115,
              105,
              110,
              103,
              32,
              114,
              101,
              113,
              117,
              105,
              114,
              101,
              100,
              32,
              102,
              105,
              101,
              108,
              100,
              115,
              58,
              32,
              115,
              116,
              111,
              114,
              101,
              115,
              34,
              44,
              34,
              102,
              105,
              101,
              108,
              100,
              34,
              58,
              110,
              117,
              108,
              108,
              44,
              34,
              116,
              105,
              109,
              101,
              115,
              116,
              97,
              109,
              112,
              34,
              58,
              34,
              50,
              48,
              50,
              53,
              45,
              48,
              56,
              45,
              49,
              55,
              84,
              49,
              52,
              58,
              48,
              48,
              58,
              52,
              51,
              46,
              53,
              51,
              51,
              57,
              54,
              57,
              34,
              125,
              10
            ]
          },
          "cookie": [],
          "responseTime": 5,
          "responseSize": 122
        },
        "id": "d0e965f4-6c16-4059-a7aa-f53d091ee72e",
        "assertions": [
          {
            "assertion": "Status code is 200 or 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Status code is 200 or 201",
              "message": "expected [ 200, 201 ] to include 400",
              "stack": "AssertionError: expected [ 200, 201 ] to include 400\n   at Object.eval sandbox-script.js:1:3)"
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "b6f580fa-700e-4c9b-9803-822160bfb078",
          "length": 7,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "38b80a10-6314-4200-9ede-a1df2bb5b076"
        },
        "item": {
          "id": "6edf2c34-e584-42c7-9152-be905ae91313",
          "name": "API v1 Routes (GET)",
          "request": {
            "url": {
              "path": [
                "api",
                "v1",
                "routes"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "8cd3450c-ab2e-4722-b196-ff870260c3d5",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "pm.test(\"Response is JSON\", function () {",
                  "    pm.response.to.be.json;",
                  "});"
                ],
                "_lastExecutionId": "e07dd214-4209-4e36-b76d-156c9a43dece"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "5000",
            "path": [
              "api",
              "v1",
              "routes"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJmcmVzaCI6ZmFsc2UsImlhdCI6MTc1NTQzOTI0MywianRpIjoiZDkxMmMxN2QtNzAxZC00OTRhLTliYmItMWEzYTcxZjdmZTY0IiwidHlwZSI6ImFjY2VzcyIsInN1YiI6InRlc3R1c2VyQGV4YW1wbGUuY29tIiwibmJmIjoxNzU1NDM5MjQzLCJjc3JmIjoiMzczOGYzYmQtMTlmYS00MzUwLTljOTEtM2U3NmZmODNjYTAyIiwiZXhwIjoxNzU1NTI1NjQzfQ.OQrY-Vb7lrah6zTIHtTeyfVcKeBJmJmEfsoAn78-NHw"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "3cd3a5f7-0f83-4d46-88ff-65af677ddf35",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:5000",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET"
        },
        "response": {
          "id": "8c641020-4dd0-4eeb-b3cb-e8f8db03045c",
          "status": "UNAUTHORIZED",
          "code": 401,
          "header": [
            {
              "key": "Server",
              "value": "Werkzeug/3.1.3 Python/3.12.11"
            },
            {
              "key": "Date",
              "value": "Sun, 17 Aug 2025 14:00:43 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Content-Length",
              "value": "100"
            },
            {
              "key": "X-Content-Type-Options",
              "value": "nosniff"
            },
            {
              "key": "X-Frame-Options",
              "value": "DENY"
            },
            {
              "key": "Referrer-Policy",
              "value": "no-referrer"
            },
            {
              "key": "X-XSS-Protection",
              "value": "0"
            },
            {
              "key": "Strict-Transport-Security",
              "value": "max-age=31536000; includeSubDomains"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "http://localhost:3000"
            },
            {
              "key": "Access-Control-Allow-Credentials",
              "value": "true"
            },
            {
              "key": "Vary",
              "value": "Origin, Cookie"
            },
            {
              "key": "X-Request-ID",
              "value": "902d2eaa-86f2-4570-b193-359aaa8904fe"
            },
            {
              "key": "Connection",
              "value": "close"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              99,
              111,
              100,
              101,
              34,
              58,
              34,
              65,
              85,
              84,
              72,
              95,
              82,
              69,
              81,
              85,
              73,
              82,
              69,
              68,
              34,
              44,
              34,
              101,
              114,
              114,
              111,
              114,
              34,
              58,
              34,
              65,
              117,
              116,
              104,
              101,
              110,
              116,
              105,
              99,
              97,
              116,
              105,
              111,
              110,
              32,
              114,
              101,
              113,
              117,
              105,
              114,
              101,
              100,
              34,
              44,
              34,
              116,
              105,
              109,
              101,
              115,
              116,
              97,
              109,
              112,
              34,
              58,
              34,
              50,
              48,
              50,
              53,
              45,
              48,
              56,
              45,
              49,
              55,
              84,
              49,
              52,
              58,
              48,
              48,
              58,
              52,
              51,
              46,
              53,
              53,
              50,
              50,
              49,
              50,
              34,
              125,
              10
            ]
          },
          "cookie": [],
          "responseTime": 4,
          "responseSize": 100
        },
        "id": "6edf2c34-e584-42c7-9152-be905ae91313",
        "assertions": [
          {
            "assertion": "Status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Status code is 200",
              "message": "expected response to have status code 200 but got 401",
              "stack": "AssertionError: expected response to have status code 200 but got 401\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "Response is JSON",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "2204d926-3be4-496e-be2f-aac81921aed7",
          "length": 7,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "299dd5e0-d017-4792-a9ca-7b685396bd47"
        },
        "item": {
          "id": "c90d49cb-0763-43c8-ba3e-327ef2da14b0",
          "name": "API v1 Health",
          "request": {
            "url": {
              "path": [
                "api",
                "v1",
                "health"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "78e6b944-95e9-48a3-a37d-fab2ec1e8ffd",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ],
                "_lastExecutionId": "22122bf0-95f2-4f89-98a7-914875b59050"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "5000",
            "path": [
              "api",
              "v1",
              "health"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "3bfa3838-3829-479f-b462-f044a7142ed8",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:5000",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET"
        },
        "response": {
          "id": "1a28e76c-3444-49d6-84a4-938e74190d70",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Server",
              "value": "Werkzeug/3.1.3 Python/3.12.11"
            },
            {
              "key": "Date",
              "value": "Sun, 17 Aug 2025 14:00:43 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Content-Length",
              "value": "817"
            },
            {
              "key": "X-Content-Type-Options",
              "value": "nosniff"
            },
            {
              "key": "X-Frame-Options",
              "value": "DENY"
            },
            {
              "key": "Referrer-Policy",
              "value": "no-referrer"
            },
            {
              "key": "X-XSS-Protection",
              "value": "0"
            },
            {
              "key": "Strict-Transport-Security",
              "value": "max-age=31536000; includeSubDomains"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "http://localhost:3000"
            },
            {
              "key": "Access-Control-Allow-Credentials",
              "value": "true"
            },
            {
              "key": "Vary",
              "value": "Origin"
            },
            {
              "key": "X-Request-ID",
              "value": "cc72ecbe-59fa-4f95-ace3-40d5d51702ff"
            },
            {
              "key": "Connection",
              "value": "close"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              97,
              108,
              103,
              111,
              114,
              105,
              116,
              104,
              109,
              115,
              34,
              58,
              123,
              34,
              97,
              118,
              97,
              105,
              108,
              97,
              98,
              108,
              101,
              34,
              58,
              91,
              34,
              100,
              101,
              102,
              97,
              117,
              108,
              116,
              34,
              44,
              34,
              103,
              101,
              110,
              101,
              116,
              105,
              99,
              34,
              44,
              34,
              115,
              105,
              109,
              117,
              108,
              97,
              116,
              101,
              100,
              95,
              97,
              110,
              110,
              101,
              97,
              108,
              105,
              110,
              103,
              34,
              44,
              34,
              109,
              117,
              108,
              116,
              105,
              95,
              111,
              98,
              106,
              101,
              99,
              116,
              105,
              118,
              101,
              34,
              93,
              44,
              34,
              100,
              101,
              102,
              97,
              117,
              108,
              116,
              34,
              58,
              34,
              100,
              101,
              102,
              97,
              117,
              108,
              116,
              34,
              125,
              44,
              34,
              100,
              97,
              116,
              97,
              98,
              97,
              115,
              101,
              34,
              58,
              34,
              99,
              111,
              110,
              110,
              101,
              99,
              116,
              101,
              100,
              34,
              44,
              34,
              101,
              110,
              100,
              112,
              111,
              105,
              110,
              116,
              115,
              34,
              58,
              123,
              34,
              99,
              114,
              101,
              97,
              116,
              101,
              95,
              99,
              108,
              117,
              115,
              116,
              101,
              114,
              115,
              34,
              58,
              34,
              47,
              97,
              112,
              105,
              47,
              118,
              49,
              47,
              99,
              108,
              117,
              115,
              116,
              101,
              114,
              115,
              34,
              44,
              34,
              99,
              114,
              101,
              97,
              116,
              101,
              95,
              114,
              111,
              117,
              116,
              101,
              34,
              58,
              34,
              47,
              97,
              112,
              105,
              47,
              118,
              49,
              47,
              114,
              111,
              117,
              116,
              101,
              115,
              34,
              44,
              34,
              103,
              101,
              110,
              101,
              114,
              97,
              116,
              101,
              95,
              114,
              111,
              117,
              116,
              101,
              34,
              58,
              34,
              47,
              97,
              112,
              105,
              47,
              118,
              49,
              47,
              114,
              111,
              117,
              116,
              101,
              115,
              47,
              103,
              101,
              110,
              101,
              114,
              97,
              116,
              101,
              34,
              44,
              34,
              103,
              101,
              110,
              101,
              114,
              97,
              116,
              101,
              95,
              114,
              111,
              117,
              116,
              101,
              95,
              109,
              108,
              34,
              58,
              34,
              47,
              97,
              112,
              105,
              47,
              118,
              49,
              47,
              114,
              111,
              117,
              116,
              101,
              115,
              47,
              103,
              101,
              110,
              101,
              114,
              97,
              116,
              101,
              47,
              109,
              108,
              34,
              44,
              34,
              103,
              101,
              116,
              95,
              97,
              108,
              103,
              111,
              114,
              105,
              116,
              104,
              109,
              115,
              34,
              58,
              34,
              47,
              97,
              112,
              105,
              47,
              118,
              49,
              47,
              114,
              111,
              117,
              116,
              101,
              115,
              47,
              97,
              108,
              103,
              111,
              114,
              105,
              116,
              104,
              109,
              115,
              34,
              44,
              34,
              103,
              101,
              116,
              95,
              114,
              111,
              117,
              116,
              101,
              34,
              58,
              34,
              47,
              97,
              112,
              105,
              47,
              118,
              49,
              47,
              114,
              111,
              117,
              116,
              101,
              115,
              47,
              60,
              105,
              100,
              62,
              34,
              44,
              34,
              103,
              101,
              116,
              95,
              114,
              111,
              117,
              116,
              101,
              115,
              34,
              58,
              34,
              47,
              97,
              112,
              105,
              47,
              118,
              49,
              47,
              114,
              111,
              117,
              116,
              101,
              115,
              34,
              44,
              34,
              103,
              101,
              116,
              95,
              115,
              116,
              111,
              114,
              101,
              34,
              58,
              34,
              47,
              97,
              112,
              105,
              47,
              118,
              49,
              47,
              115,
              116,
              111,
              114,
              101,
              115,
              47,
              60,
              105,
              100,
              62,
              34,
              44,
              34,
              103,
              101,
              116,
              95,
              115,
              116,
              111,
              114,
              101,
              115,
              34,
              58,
              34,
              47,
              97,
              112,
              105,
              47,
              118,
              49,
              47,
              115,
              116,
              111,
              114,
              101,
              115,
              34,
              44,
              34,
              104,
              101,
              97,
              108,
              116,
              104,
              34,
              58,
              34,
              47,
              97,
              112,
              105,
              47,
              118,
              49,
              47,
              104,
              101,
              97,
              108,
              116,
              104,
              34,
              44,
              34,
              109,
              108,
              95,
              109,
              111,
              100,
              101,
              108,
              95,
              105,
              110,
              102,
              111,
              34,
              58,
              34,
              47,
              97,
              112,
              105,
              47,
              118,
              49,
              47,
              109,
              108,
              47,
              109,
              111,
              100,
              101,
              108,
              45,
              105,
              110,
              102,
              111,
              34,
              44,
              34,
              109,
              108,
              95,
              112,
              114,
              101,
              100,
              105,
              99,
              116,
              34,
              58,
              34,
              47,
              97,
              112,
              105,
              47,
              118,
              49,
              47,
              109,
              108,
              47,
              112,
              114,
              101,
              100,
              105,
              99,
              116,
              34,
              44,
              34,
              109,
              108,
              95,
              114,
              101,
              99,
              111,
              109,
              109,
              101,
              110,
              100,
              34,
              58,
              34,
              47,
              97,
              112,
              105,
              47,
              118,
              49,
              47,
              109,
              108,
              47,
              114,
              101,
              99,
              111,
              109,
              109,
              101,
              110,
              100,
              34,
              44,
              34,
              109,
              108,
              95,
              116,
              114,
              97,
              105,
              110,
              34,
              58,
              34,
              47,
              97,
              112,
              105,
              47,
              118,
              49,
              47,
              109,
              108,
              47,
              116,
              114,
              97,
              105,
              110,
              34,
              44,
              34,
              111,
              112,
              116,
              105,
              109,
              105,
              122,
              101,
              95,
              103,
              101,
              110,
              101,
              116,
              105,
              99,
              34,
              58,
              34,
              47,
              97,
              112,
              105,
              47,
              118,
              49,
              47,
              114,
              111,
              117,
              116,
              101,
              115,
              47,
              111,
              112,
              116,
              105,
              109,
              105,
              122,
              101,
              47,
              103,
              101,
              110,
              101,
              116,
              105,
              99,
              34,
              44,
              34,
              111,
              112,
              116,
              105,
              109,
              105,
              122,
              101,
              95,
              115,
              105,
              109,
              117,
              108,
              97,
              116,
              101,
              100,
              95,
              97,
              110,
              110,
              101,
              97,
              108,
              105,
              110,
              103,
              34,
              58,
              34,
              47,
              97,
              112,
              105,
              47,
              118,
              49,
              47,
              114,
              111,
              117,
              116,
              101,
              115,
              47,
              111,
              112,
              116,
              105,
              109,
              105,
              122,
              101,
              47,
              115,
              105,
              109,
              117,
              108,
              97,
              116,
              101,
              100,
              95,
              97,
              110,
              110,
              101,
              97,
              108,
              105,
              110,
              103,
              34,
              125,
              44,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              104,
              101,
              97,
              108,
              116,
              104,
              121,
              34,
              44,
              34,
              118,
              101,
              114,
              115,
              105,
              111,
              110,
              34,
              58,
              34,
              49,
              46,
              48,
              46,
              48,
              34,
              125,
              10
            ]
          },
          "cookie": [],
          "responseTime": 4,
          "responseSize": 817
        },
        "id": "c90d49cb-0763-43c8-ba3e-327ef2da14b0",
        "assertions": [
          {
            "assertion": "Status code is 200",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "30e2fa2f-2ffc-402e-a7a6-2e4b1376940a",
          "length": 7,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "0bb218eb-0aee-4c3b-aa1c-eeaedb18da99"
        },
        "item": {
          "id": "8271c9c5-c6b5-488c-a2d2-f0c48f6dfd07",
          "name": "API v1 Metrics",
          "request": {
            "url": {
              "path": [
                "api",
                "v1",
                "metrics"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "4ff42b55-be05-408a-816f-ebeae3534dd3",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ],
                "_lastExecutionId": "0db5b281-9605-45e4-94a9-468b69cf53d1"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "5000",
            "path": [
              "api",
              "v1",
              "metrics"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "d8631f67-84e2-4185-ad25-62552f8a6e71",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:5000",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET"
        },
        "response": {
          "id": "96f4cbac-1c84-48ee-b329-d9d511c8dde2",
          "status": "INTERNAL SERVER ERROR",
          "code": 500,
          "header": [
            {
              "key": "Server",
              "value": "Werkzeug/3.1.3 Python/3.12.11"
            },
            {
              "key": "Date",
              "value": "Sun, 17 Aug 2025 14:00:43 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Content-Length",
              "value": "100"
            },
            {
              "key": "X-Content-Type-Options",
              "value": "nosniff"
            },
            {
              "key": "X-Frame-Options",
              "value": "DENY"
            },
            {
              "key": "Referrer-Policy",
              "value": "no-referrer"
            },
            {
              "key": "X-XSS-Protection",
              "value": "0"
            },
            {
              "key": "Strict-Transport-Security",
              "value": "max-age=31536000; includeSubDomains"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "http://localhost:3000"
            },
            {
              "key": "Access-Control-Allow-Credentials",
              "value": "true"
            },
            {
              "key": "Vary",
              "value": "Origin"
            },
            {
              "key": "X-Request-ID",
              "value": "f5219aa3-63a0-499b-a290-2317e989cec8"
            },
            {
              "key": "Connection",
              "value": "close"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              101,
              114,
              114,
              111,
              114,
              34,
              58,
              34,
              73,
              110,
              116,
              101,
              114,
              110,
              97,
              108,
              32,
              115,
              101,
              114,
              118,
              101,
              114,
              32,
              101,
              114,
              114,
              111,
              114,
              34,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              65,
              110,
              32,
              117,
              110,
              101,
              120,
              112,
              101,
              99,
              116,
              101,
              100,
              32,
              101,
              114,
              114,
              111,
              114,
              32,
              111,
              99,
              99,
              117,
              114,
              114,
              101,
              100,
              46,
              32,
              80,
              108,
              101,
              97,
              115,
              101,
              32,
              116,
              114,
              121,
              32,
              97,
              103,
              97,
              105,
              110,
              32,
              108,
              97,
              116,
              101,
              114,
              46,
              34,
              125,
              10
            ]
          },
          "cookie": [],
          "responseTime": 6,
          "responseSize": 100
        },
        "id": "8271c9c5-c6b5-488c-a2d2-f0c48f6dfd07",
        "assertions": [
          {
            "assertion": "Status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Status code is 200",
              "message": "expected response to have status code 200 but got 500",
              "stack": "AssertionError: expected response to have status code 200 but got 500\n   at Object.eval sandbox-script.js:1:6)"
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "998fd1c6-ea00-479a-854e-d3970bb49689",
          "length": 7,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "3df9b8a0-bcc8-4a9e-aacd-e6a075cdc3ee"
        },
        "item": {
          "id": "a7a3d9bf-2601-4150-9e0b-3f150f4dcda2",
          "name": "API v1 ML Predict",
          "request": {
            "url": {
              "path": [
                "api",
                "v1",
                "ml",
                "predict"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"input\": \"test\"\n}"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "bf29ca89-655d-4824-8408-b6ebf8d77d3e",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ],
                "_lastExecutionId": "da9b7b3b-1c98-4f27-a222-c19dc3f58ddf"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "5000",
            "path": [
              "api",
              "v1",
              "ml",
              "predict"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Authorization",
              "value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJmcmVzaCI6ZmFsc2UsImlhdCI6MTc1NTQzOTI0MywianRpIjoiZDkxMmMxN2QtNzAxZC00OTRhLTliYmItMWEzYTcxZjdmZTY0IiwidHlwZSI6ImFjY2VzcyIsInN1YiI6InRlc3R1c2VyQGV4YW1wbGUuY29tIiwibmJmIjoxNzU1NDM5MjQzLCJjc3JmIjoiMzczOGYzYmQtMTlmYS00MzUwLTljOTEtM2U3NmZmODNjYTAyIiwiZXhwIjoxNzU1NTI1NjQzfQ.OQrY-Vb7lrah6zTIHtTeyfVcKeBJmJmEfsoAn78-NHw"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "dbba190f-f5d7-4fc8-9f93-ee0d29d4dfcb",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:5000",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "21",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n  \"input\": \"test\"\n}"
          }
        },
        "response": {
          "id": "61166bfe-43ea-4bde-8755-d2162ac57a21",
          "status": "INTERNAL SERVER ERROR",
          "code": 500,
          "header": [
            {
              "key": "Server",
              "value": "Werkzeug/3.1.3 Python/3.12.11"
            },
            {
              "key": "Date",
              "value": "Sun, 17 Aug 2025 14:00:43 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Content-Length",
              "value": "100"
            },
            {
              "key": "X-Content-Type-Options",
              "value": "nosniff"
            },
            {
              "key": "X-Frame-Options",
              "value": "DENY"
            },
            {
              "key": "Referrer-Policy",
              "value": "no-referrer"
            },
            {
              "key": "X-XSS-Protection",
              "value": "0"
            },
            {
              "key": "Strict-Transport-Security",
              "value": "max-age=31536000; includeSubDomains"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "http://localhost:3000"
            },
            {
              "key": "Access-Control-Allow-Credentials",
              "value": "true"
            },
            {
              "key": "Vary",
              "value": "Origin"
            },
            {
              "key": "X-Request-ID",
              "value": "fbbab679-edc7-47f8-93a0-b37f7b41cffb"
            },
            {
              "key": "Connection",
              "value": "close"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              101,
              114,
              114,
              111,
              114,
              34,
              58,
              34,
              73,
              110,
              116,
              101,
              114,
              110,
              97,
              108,
              32,
              115,
              101,
              114,
              118,
              101,
              114,
              32,
              101,
              114,
              114,
              111,
              114,
              34,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              65,
              110,
              32,
              117,
              110,
              101,
              120,
              112,
              101,
              99,
              116,
              101,
              100,
              32,
              101,
              114,
              114,
              111,
              114,
              32,
              111,
              99,
              99,
              117,
              114,
              114,
              101,
              100,
              46,
              32,
              80,
              108,
              101,
              97,
              115,
              101,
              32,
              116,
              114,
              121,
              32,
              97,
              103,
              97,
              105,
              110,
              32,
              108,
              97,
              116,
              101,
              114,
              46,
              34,
              125,
              10
            ]
          },
          "cookie": [],
          "responseTime": 6,
          "responseSize": 100
        },
        "id": "a7a3d9bf-2601-4150-9e0b-3f150f4dcda2",
        "assertions": [
          {
            "assertion": "Status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Status code is 200",
              "message": "expected response to have status code 200 but got 500",
              "stack": "AssertionError: expected response to have status code 200 but got 500\n   at Object.eval sandbox-script.js:1:7)"
            }
          }
        ]
      }
    ],
    "transfers": {
      "responseTotal": 2195
    },
    "failures": [
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Status code is 200",
          "message": "expected response to have status code 200 but got 500",
          "stack": "AssertionError: expected response to have status code 200 but got 500\n   at Object.eval sandbox-script.js:1:1)",
          "checksum": "2539aab66e1212482e29137cb1c41438",
          "id": "29f04fdc-de48-4d2f-953e-495b66fb1e31",
          "timestamp": 1755439243493,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 1,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "781fe421-3c68-4755-b319-c5e56501afa3",
          "name": "Optimize Endpoint",
          "request": {
            "url": {
              "path": [
                "api",
                "optimize"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"param1\": \"value1\",\n  \"param2\": \"value2\"\n}"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "1c2d720c-dc56-48c1-a194-da32d4bd9f96",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "pm.test(\"Response has expected property\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('result');",
                  "});"
                ],
                "_lastExecutionId": "295456ac-d6f9-4659-8529-4b93424a7a19"
              }
            }
          ]
        },
        "parent": {
          "_": {
            "postman_id": "routeforce-routing-automation"
          },
          "item": [
            {
              "id": "781fe421-3c68-4755-b319-c5e56501afa3",
              "name": "Optimize Endpoint",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "optimize"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"param1\": \"value1\",\n  \"param2\": \"value2\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "1c2d720c-dc56-48c1-a194-da32d4bd9f96",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "pm.test(\"Response has expected property\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData).to.have.property('result');",
                      "});"
                    ],
                    "_lastExecutionId": "295456ac-d6f9-4659-8529-4b93424a7a19"
                  }
                }
              ]
            },
            {
              "id": "15203e8c-6dd5-4b49-9495-17668edfda9a",
              "name": "Scoring Endpoint",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "route",
                    "score"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "e6f6af9f-4ed4-4a1d-a4b6-c3d622cac3aa",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "pm.test(\"Response is JSON\", function () {",
                      "    pm.response.to.be.json;",
                      "});"
                    ],
                    "_lastExecutionId": "64e2c379-813a-4c4f-99f7-5685bf321f0c"
                  }
                }
              ]
            },
            {
              "id": "d0e965f4-6c16-4059-a7aa-f53d091ee72e",
              "name": "API v1 Routes (POST)",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "v1",
                    "routes"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{access_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"param1\": \"value1\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "033464f0-f156-46c7-b9b6-d69525611a8f",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200 or 201\", function () {",
                      "    pm.expect([200,201]).to.include(pm.response.code);",
                      "});"
                    ],
                    "_lastExecutionId": "56c9cd55-8be7-40b6-992b-81bcac291c04"
                  }
                }
              ]
            },
            {
              "id": "6edf2c34-e584-42c7-9152-be905ae91313",
              "name": "API v1 Routes (GET)",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "v1",
                    "routes"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{access_token}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "8cd3450c-ab2e-4722-b196-ff870260c3d5",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "pm.test(\"Response is JSON\", function () {",
                      "    pm.response.to.be.json;",
                      "});"
                    ],
                    "_lastExecutionId": "e07dd214-4209-4e36-b76d-156c9a43dece"
                  }
                }
              ]
            },
            {
              "id": "c90d49cb-0763-43c8-ba3e-327ef2da14b0",
              "name": "API v1 Health",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "v1",
                    "health"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "78e6b944-95e9-48a3-a37d-fab2ec1e8ffd",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});"
                    ],
                    "_lastExecutionId": "22122bf0-95f2-4f89-98a7-914875b59050"
                  }
                }
              ]
            },
            {
              "id": "8271c9c5-c6b5-488c-a2d2-f0c48f6dfd07",
              "name": "API v1 Metrics",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "v1",
                    "metrics"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "4ff42b55-be05-408a-816f-ebeae3534dd3",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});"
                    ],
                    "_lastExecutionId": "0db5b281-9605-45e4-94a9-468b69cf53d1"
                  }
                }
              ]
            },
            {
              "id": "a7a3d9bf-2601-4150-9e0b-3f150f4dcda2",
              "name": "API v1 ML Predict",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "v1",
                    "ml",
                    "predict"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{access_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"input\": \"test\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "bf29ca89-655d-4824-8408-b6ebf8d77d3e",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});"
                    ],
                    "_lastExecutionId": "da9b7b3b-1c98-4f27-a222-c19dc3f58ddf"
                  }
                }
              ]
            }
          ],
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "969c613d-54ae-45b7-8175-d08a8da64a9a",
                "type": "text/javascript",
                "exec": [
                  "function loginAndSetToken() {",
                  "    pm.sendRequest({",
                  "        url: pm.variables.replaceIn('{{base_url}}/auth/login'),",
                  "        method: 'POST',",
                  "        header: { 'Content-Type': 'application/json' },",
                  "        body: {",
                  "            mode: 'raw',",
                  "            raw: JSON.stringify({ email: 'testuser@example.com', password: 'testpassword' })",
                  "        }",
                  "    }, function (err, res) {",
                  "        if (!err && res.code === 200 && res.json().access_token) {",
                  "            pm.collectionVariables.set('access_token', res.json().access_token);",
                  "        } else if (res && res.code === 401) {",
                  "            // Register the user, then retry login",
                  "            pm.sendRequest({",
                  "                url: pm.variables.replaceIn('{{base_url}}/auth/register'),",
                  "                method: 'POST',",
                  "                header: { 'Content-Type': 'application/json' },",
                  "                body: {",
                  "                    mode: 'raw',",
                  "                    raw: JSON.stringify({ email: 'testuser@example.com', password: 'testpassword', name: 'Test User' })",
                  "                }",
                  "            }, function (err2, res2) {",
                  "                // Retry login after registration",
                  "                pm.sendRequest({",
                  "                    url: pm.variables.replaceIn('{{base_url}}/auth/login'),",
                  "                    method: 'POST',",
                  "                    header: { 'Content-Type': 'application/json' },",
                  "                    body: {",
                  "                        mode: 'raw',",
                  "                        raw: JSON.stringify({ email: 'testuser@example.com', password: 'testpassword' })",
                  "                    }",
                  "                }, function (err3, res3) {",
                  "                    if (!err3 && res3.code === 200 && res3.json().access_token) {",
                  "                        pm.collectionVariables.set('access_token', res3.json().access_token);",
                  "                    }",
                  "                });",
                  "            });",
                  "        }",
                  "    });",
                  "}",
                  "if (!pm.collectionVariables.get('access_token')) {",
                  "    loginAndSetToken();",
                  "}"
                ],
                "_lastExecutionId": "62fab06b-64d8-40e7-a51e-4916b456cc52"
              }
            }
          ],
          "variable": [],
          "info": {
            "_postman_id": "routeforce-routing-automation",
            "name": "RouteForceRouting API Automation",
            "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
          }
        },
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 7,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "1d61b98a-e149-4c66-b43f-de37975e17d9",
          "httpRequestId": "98eca3f7-4b59-4c08-a8e9-ca82ac4defc4",
          "scriptId": "1c2d720c-dc56-48c1-a194-da32d4bd9f96",
          "execution": "295456ac-d6f9-4659-8529-4b93424a7a19"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 1,
          "test": "Response has expected property",
          "message": "expected { Object (error, message) } to have property 'result'",
          "stack": "AssertionError: expected { Object (error, message) } to have property 'result'\n   at Object.eval sandbox-script.js:2:1)",
          "checksum": "d28ee25995a2747ea77d57d41dfe4872",
          "id": "3415c757-f120-46f9-acb4-ff0bc648f25b",
          "timestamp": 1755439243494,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 2,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 1,
              "native": false
            }
          ]
        },
        "at": "assertion:1 in test-script",
        "source": {
          "id": "781fe421-3c68-4755-b319-c5e56501afa3",
          "name": "Optimize Endpoint",
          "request": {
            "url": {
              "path": [
                "api",
                "optimize"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"param1\": \"value1\",\n  \"param2\": \"value2\"\n}"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "1c2d720c-dc56-48c1-a194-da32d4bd9f96",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "pm.test(\"Response has expected property\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('result');",
                  "});"
                ],
                "_lastExecutionId": "295456ac-d6f9-4659-8529-4b93424a7a19"
              }
            }
          ]
        },
        "parent": {
          "_": {
            "postman_id": "routeforce-routing-automation"
          },
          "item": [
            {
              "id": "781fe421-3c68-4755-b319-c5e56501afa3",
              "name": "Optimize Endpoint",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "optimize"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"param1\": \"value1\",\n  \"param2\": \"value2\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "1c2d720c-dc56-48c1-a194-da32d4bd9f96",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "pm.test(\"Response has expected property\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData).to.have.property('result');",
                      "});"
                    ],
                    "_lastExecutionId": "295456ac-d6f9-4659-8529-4b93424a7a19"
                  }
                }
              ]
            },
            {
              "id": "15203e8c-6dd5-4b49-9495-17668edfda9a",
              "name": "Scoring Endpoint",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "route",
                    "score"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "e6f6af9f-4ed4-4a1d-a4b6-c3d622cac3aa",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "pm.test(\"Response is JSON\", function () {",
                      "    pm.response.to.be.json;",
                      "});"
                    ],
                    "_lastExecutionId": "64e2c379-813a-4c4f-99f7-5685bf321f0c"
                  }
                }
              ]
            },
            {
              "id": "d0e965f4-6c16-4059-a7aa-f53d091ee72e",
              "name": "API v1 Routes (POST)",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "v1",
                    "routes"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{access_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"param1\": \"value1\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "033464f0-f156-46c7-b9b6-d69525611a8f",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200 or 201\", function () {",
                      "    pm.expect([200,201]).to.include(pm.response.code);",
                      "});"
                    ],
                    "_lastExecutionId": "56c9cd55-8be7-40b6-992b-81bcac291c04"
                  }
                }
              ]
            },
            {
              "id": "6edf2c34-e584-42c7-9152-be905ae91313",
              "name": "API v1 Routes (GET)",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "v1",
                    "routes"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{access_token}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "8cd3450c-ab2e-4722-b196-ff870260c3d5",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "pm.test(\"Response is JSON\", function () {",
                      "    pm.response.to.be.json;",
                      "});"
                    ],
                    "_lastExecutionId": "e07dd214-4209-4e36-b76d-156c9a43dece"
                  }
                }
              ]
            },
            {
              "id": "c90d49cb-0763-43c8-ba3e-327ef2da14b0",
              "name": "API v1 Health",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "v1",
                    "health"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "78e6b944-95e9-48a3-a37d-fab2ec1e8ffd",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});"
                    ],
                    "_lastExecutionId": "22122bf0-95f2-4f89-98a7-914875b59050"
                  }
                }
              ]
            },
            {
              "id": "8271c9c5-c6b5-488c-a2d2-f0c48f6dfd07",
              "name": "API v1 Metrics",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "v1",
                    "metrics"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "4ff42b55-be05-408a-816f-ebeae3534dd3",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});"
                    ],
                    "_lastExecutionId": "0db5b281-9605-45e4-94a9-468b69cf53d1"
                  }
                }
              ]
            },
            {
              "id": "a7a3d9bf-2601-4150-9e0b-3f150f4dcda2",
              "name": "API v1 ML Predict",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "v1",
                    "ml",
                    "predict"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{access_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"input\": \"test\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "bf29ca89-655d-4824-8408-b6ebf8d77d3e",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});"
                    ],
                    "_lastExecutionId": "da9b7b3b-1c98-4f27-a222-c19dc3f58ddf"
                  }
                }
              ]
            }
          ],
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "969c613d-54ae-45b7-8175-d08a8da64a9a",
                "type": "text/javascript",
                "exec": [
                  "function loginAndSetToken() {",
                  "    pm.sendRequest({",
                  "        url: pm.variables.replaceIn('{{base_url}}/auth/login'),",
                  "        method: 'POST',",
                  "        header: { 'Content-Type': 'application/json' },",
                  "        body: {",
                  "            mode: 'raw',",
                  "            raw: JSON.stringify({ email: 'testuser@example.com', password: 'testpassword' })",
                  "        }",
                  "    }, function (err, res) {",
                  "        if (!err && res.code === 200 && res.json().access_token) {",
                  "            pm.collectionVariables.set('access_token', res.json().access_token);",
                  "        } else if (res && res.code === 401) {",
                  "            // Register the user, then retry login",
                  "            pm.sendRequest({",
                  "                url: pm.variables.replaceIn('{{base_url}}/auth/register'),",
                  "                method: 'POST',",
                  "                header: { 'Content-Type': 'application/json' },",
                  "                body: {",
                  "                    mode: 'raw',",
                  "                    raw: JSON.stringify({ email: 'testuser@example.com', password: 'testpassword', name: 'Test User' })",
                  "                }",
                  "            }, function (err2, res2) {",
                  "                // Retry login after registration",
                  "                pm.sendRequest({",
                  "                    url: pm.variables.replaceIn('{{base_url}}/auth/login'),",
                  "                    method: 'POST',",
                  "                    header: { 'Content-Type': 'application/json' },",
                  "                    body: {",
                  "                        mode: 'raw',",
                  "                        raw: JSON.stringify({ email: 'testuser@example.com', password: 'testpassword' })",
                  "                    }",
                  "                }, function (err3, res3) {",
                  "                    if (!err3 && res3.code === 200 && res3.json().access_token) {",
                  "                        pm.collectionVariables.set('access_token', res3.json().access_token);",
                  "                    }",
                  "                });",
                  "            });",
                  "        }",
                  "    });",
                  "}",
                  "if (!pm.collectionVariables.get('access_token')) {",
                  "    loginAndSetToken();",
                  "}"
                ],
                "_lastExecutionId": "62fab06b-64d8-40e7-a51e-4916b456cc52"
              }
            }
          ],
          "variable": [],
          "info": {
            "_postman_id": "routeforce-routing-automation",
            "name": "RouteForceRouting API Automation",
            "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
          }
        },
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 7,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "1d61b98a-e149-4c66-b43f-de37975e17d9",
          "httpRequestId": "98eca3f7-4b59-4c08-a8e9-ca82ac4defc4",
          "scriptId": "1c2d720c-dc56-48c1-a194-da32d4bd9f96",
          "execution": "295456ac-d6f9-4659-8529-4b93424a7a19"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Status code is 200",
          "message": "expected response to have status code 200 but got 405",
          "stack": "AssertionError: expected response to have status code 200 but got 405\n   at Object.eval sandbox-script.js:1:2)",
          "checksum": "6695d2d6df10dae5a9963404eb24b047",
          "id": "fbdfef11-bc33-4511-8c51-48353bbb3742",
          "timestamp": 1755439243515,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 2,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "15203e8c-6dd5-4b49-9495-17668edfda9a",
          "name": "Scoring Endpoint",
          "request": {
            "url": {
              "path": [
                "api",
                "route",
                "score"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "e6f6af9f-4ed4-4a1d-a4b6-c3d622cac3aa",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "pm.test(\"Response is JSON\", function () {",
                  "    pm.response.to.be.json;",
                  "});"
                ],
                "_lastExecutionId": "64e2c379-813a-4c4f-99f7-5685bf321f0c"
              }
            }
          ]
        },
        "parent": {
          "_": {
            "postman_id": "routeforce-routing-automation"
          },
          "item": [
            {
              "id": "781fe421-3c68-4755-b319-c5e56501afa3",
              "name": "Optimize Endpoint",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "optimize"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"param1\": \"value1\",\n  \"param2\": \"value2\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "1c2d720c-dc56-48c1-a194-da32d4bd9f96",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "pm.test(\"Response has expected property\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData).to.have.property('result');",
                      "});"
                    ],
                    "_lastExecutionId": "295456ac-d6f9-4659-8529-4b93424a7a19"
                  }
                }
              ]
            },
            {
              "id": "15203e8c-6dd5-4b49-9495-17668edfda9a",
              "name": "Scoring Endpoint",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "route",
                    "score"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "e6f6af9f-4ed4-4a1d-a4b6-c3d622cac3aa",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "pm.test(\"Response is JSON\", function () {",
                      "    pm.response.to.be.json;",
                      "});"
                    ],
                    "_lastExecutionId": "64e2c379-813a-4c4f-99f7-5685bf321f0c"
                  }
                }
              ]
            },
            {
              "id": "d0e965f4-6c16-4059-a7aa-f53d091ee72e",
              "name": "API v1 Routes (POST)",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "v1",
                    "routes"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{access_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"param1\": \"value1\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "033464f0-f156-46c7-b9b6-d69525611a8f",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200 or 201\", function () {",
                      "    pm.expect([200,201]).to.include(pm.response.code);",
                      "});"
                    ],
                    "_lastExecutionId": "56c9cd55-8be7-40b6-992b-81bcac291c04"
                  }
                }
              ]
            },
            {
              "id": "6edf2c34-e584-42c7-9152-be905ae91313",
              "name": "API v1 Routes (GET)",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "v1",
                    "routes"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{access_token}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "8cd3450c-ab2e-4722-b196-ff870260c3d5",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "pm.test(\"Response is JSON\", function () {",
                      "    pm.response.to.be.json;",
                      "});"
                    ],
                    "_lastExecutionId": "e07dd214-4209-4e36-b76d-156c9a43dece"
                  }
                }
              ]
            },
            {
              "id": "c90d49cb-0763-43c8-ba3e-327ef2da14b0",
              "name": "API v1 Health",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "v1",
                    "health"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "78e6b944-95e9-48a3-a37d-fab2ec1e8ffd",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});"
                    ],
                    "_lastExecutionId": "22122bf0-95f2-4f89-98a7-914875b59050"
                  }
                }
              ]
            },
            {
              "id": "8271c9c5-c6b5-488c-a2d2-f0c48f6dfd07",
              "name": "API v1 Metrics",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "v1",
                    "metrics"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "4ff42b55-be05-408a-816f-ebeae3534dd3",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});"
                    ],
                    "_lastExecutionId": "0db5b281-9605-45e4-94a9-468b69cf53d1"
                  }
                }
              ]
            },
            {
              "id": "a7a3d9bf-2601-4150-9e0b-3f150f4dcda2",
              "name": "API v1 ML Predict",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "v1",
                    "ml",
                    "predict"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{access_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"input\": \"test\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "bf29ca89-655d-4824-8408-b6ebf8d77d3e",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});"
                    ],
                    "_lastExecutionId": "da9b7b3b-1c98-4f27-a222-c19dc3f58ddf"
                  }
                }
              ]
            }
          ],
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "969c613d-54ae-45b7-8175-d08a8da64a9a",
                "type": "text/javascript",
                "exec": [
                  "function loginAndSetToken() {",
                  "    pm.sendRequest({",
                  "        url: pm.variables.replaceIn('{{base_url}}/auth/login'),",
                  "        method: 'POST',",
                  "        header: { 'Content-Type': 'application/json' },",
                  "        body: {",
                  "            mode: 'raw',",
                  "            raw: JSON.stringify({ email: 'testuser@example.com', password: 'testpassword' })",
                  "        }",
                  "    }, function (err, res) {",
                  "        if (!err && res.code === 200 && res.json().access_token) {",
                  "            pm.collectionVariables.set('access_token', res.json().access_token);",
                  "        } else if (res && res.code === 401) {",
                  "            // Register the user, then retry login",
                  "            pm.sendRequest({",
                  "                url: pm.variables.replaceIn('{{base_url}}/auth/register'),",
                  "                method: 'POST',",
                  "                header: { 'Content-Type': 'application/json' },",
                  "                body: {",
                  "                    mode: 'raw',",
                  "                    raw: JSON.stringify({ email: 'testuser@example.com', password: 'testpassword', name: 'Test User' })",
                  "                }",
                  "            }, function (err2, res2) {",
                  "                // Retry login after registration",
                  "                pm.sendRequest({",
                  "                    url: pm.variables.replaceIn('{{base_url}}/auth/login'),",
                  "                    method: 'POST',",
                  "                    header: { 'Content-Type': 'application/json' },",
                  "                    body: {",
                  "                        mode: 'raw',",
                  "                        raw: JSON.stringify({ email: 'testuser@example.com', password: 'testpassword' })",
                  "                    }",
                  "                }, function (err3, res3) {",
                  "                    if (!err3 && res3.code === 200 && res3.json().access_token) {",
                  "                        pm.collectionVariables.set('access_token', res3.json().access_token);",
                  "                    }",
                  "                });",
                  "            });",
                  "        }",
                  "    });",
                  "}",
                  "if (!pm.collectionVariables.get('access_token')) {",
                  "    loginAndSetToken();",
                  "}"
                ],
                "_lastExecutionId": "62fab06b-64d8-40e7-a51e-4916b456cc52"
              }
            }
          ],
          "variable": [],
          "info": {
            "_postman_id": "routeforce-routing-automation",
            "name": "RouteForceRouting API Automation",
            "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
          }
        },
        "cursor": {
          "ref": "54d59f68-019f-40cc-9ebe-966bcc927553",
          "length": 7,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "b172f03e-4eed-4e5b-9f99-437fde9486a4",
          "scriptId": "e6f6af9f-4ed4-4a1d-a4b6-c3d622cac3aa",
          "execution": "64e2c379-813a-4c4f-99f7-5685bf321f0c"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 1,
          "test": "Response is JSON",
          "message": "expected response body to be a valid json but got error Unexpected token '<' at 1:1",
          "stack": "AssertionError: expected response body to be a valid json but got error Unexpected token '<' at 1:1\n   at Object.eval sandbox-script.js:2:2)",
          "checksum": "76d1c8808c240fcadb7ad7d01d3d8e56",
          "id": "b1005bd4-2851-4c42-806f-d2c4b86140a2",
          "timestamp": 1755439243517,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 2,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 2,
              "native": false
            }
          ]
        },
        "at": "assertion:1 in test-script",
        "source": {
          "id": "15203e8c-6dd5-4b49-9495-17668edfda9a",
          "name": "Scoring Endpoint",
          "request": {
            "url": {
              "path": [
                "api",
                "route",
                "score"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "e6f6af9f-4ed4-4a1d-a4b6-c3d622cac3aa",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "pm.test(\"Response is JSON\", function () {",
                  "    pm.response.to.be.json;",
                  "});"
                ],
                "_lastExecutionId": "64e2c379-813a-4c4f-99f7-5685bf321f0c"
              }
            }
          ]
        },
        "parent": {
          "_": {
            "postman_id": "routeforce-routing-automation"
          },
          "item": [
            {
              "id": "781fe421-3c68-4755-b319-c5e56501afa3",
              "name": "Optimize Endpoint",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "optimize"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"param1\": \"value1\",\n  \"param2\": \"value2\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "1c2d720c-dc56-48c1-a194-da32d4bd9f96",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "pm.test(\"Response has expected property\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData).to.have.property('result');",
                      "});"
                    ],
                    "_lastExecutionId": "295456ac-d6f9-4659-8529-4b93424a7a19"
                  }
                }
              ]
            },
            {
              "id": "15203e8c-6dd5-4b49-9495-17668edfda9a",
              "name": "Scoring Endpoint",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "route",
                    "score"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "e6f6af9f-4ed4-4a1d-a4b6-c3d622cac3aa",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "pm.test(\"Response is JSON\", function () {",
                      "    pm.response.to.be.json;",
                      "});"
                    ],
                    "_lastExecutionId": "64e2c379-813a-4c4f-99f7-5685bf321f0c"
                  }
                }
              ]
            },
            {
              "id": "d0e965f4-6c16-4059-a7aa-f53d091ee72e",
              "name": "API v1 Routes (POST)",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "v1",
                    "routes"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{access_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"param1\": \"value1\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "033464f0-f156-46c7-b9b6-d69525611a8f",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200 or 201\", function () {",
                      "    pm.expect([200,201]).to.include(pm.response.code);",
                      "});"
                    ],
                    "_lastExecutionId": "56c9cd55-8be7-40b6-992b-81bcac291c04"
                  }
                }
              ]
            },
            {
              "id": "6edf2c34-e584-42c7-9152-be905ae91313",
              "name": "API v1 Routes (GET)",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "v1",
                    "routes"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{access_token}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "8cd3450c-ab2e-4722-b196-ff870260c3d5",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "pm.test(\"Response is JSON\", function () {",
                      "    pm.response.to.be.json;",
                      "});"
                    ],
                    "_lastExecutionId": "e07dd214-4209-4e36-b76d-156c9a43dece"
                  }
                }
              ]
            },
            {
              "id": "c90d49cb-0763-43c8-ba3e-327ef2da14b0",
              "name": "API v1 Health",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "v1",
                    "health"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "78e6b944-95e9-48a3-a37d-fab2ec1e8ffd",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});"
                    ],
                    "_lastExecutionId": "22122bf0-95f2-4f89-98a7-914875b59050"
                  }
                }
              ]
            },
            {
              "id": "8271c9c5-c6b5-488c-a2d2-f0c48f6dfd07",
              "name": "API v1 Metrics",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "v1",
                    "metrics"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "4ff42b55-be05-408a-816f-ebeae3534dd3",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});"
                    ],
                    "_lastExecutionId": "0db5b281-9605-45e4-94a9-468b69cf53d1"
                  }
                }
              ]
            },
            {
              "id": "a7a3d9bf-2601-4150-9e0b-3f150f4dcda2",
              "name": "API v1 ML Predict",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "v1",
                    "ml",
                    "predict"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{access_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"input\": \"test\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "bf29ca89-655d-4824-8408-b6ebf8d77d3e",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});"
                    ],
                    "_lastExecutionId": "da9b7b3b-1c98-4f27-a222-c19dc3f58ddf"
                  }
                }
              ]
            }
          ],
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "969c613d-54ae-45b7-8175-d08a8da64a9a",
                "type": "text/javascript",
                "exec": [
                  "function loginAndSetToken() {",
                  "    pm.sendRequest({",
                  "        url: pm.variables.replaceIn('{{base_url}}/auth/login'),",
                  "        method: 'POST',",
                  "        header: { 'Content-Type': 'application/json' },",
                  "        body: {",
                  "            mode: 'raw',",
                  "            raw: JSON.stringify({ email: 'testuser@example.com', password: 'testpassword' })",
                  "        }",
                  "    }, function (err, res) {",
                  "        if (!err && res.code === 200 && res.json().access_token) {",
                  "            pm.collectionVariables.set('access_token', res.json().access_token);",
                  "        } else if (res && res.code === 401) {",
                  "            // Register the user, then retry login",
                  "            pm.sendRequest({",
                  "                url: pm.variables.replaceIn('{{base_url}}/auth/register'),",
                  "                method: 'POST',",
                  "                header: { 'Content-Type': 'application/json' },",
                  "                body: {",
                  "                    mode: 'raw',",
                  "                    raw: JSON.stringify({ email: 'testuser@example.com', password: 'testpassword', name: 'Test User' })",
                  "                }",
                  "            }, function (err2, res2) {",
                  "                // Retry login after registration",
                  "                pm.sendRequest({",
                  "                    url: pm.variables.replaceIn('{{base_url}}/auth/login'),",
                  "                    method: 'POST',",
                  "                    header: { 'Content-Type': 'application/json' },",
                  "                    body: {",
                  "                        mode: 'raw',",
                  "                        raw: JSON.stringify({ email: 'testuser@example.com', password: 'testpassword' })",
                  "                    }",
                  "                }, function (err3, res3) {",
                  "                    if (!err3 && res3.code === 200 && res3.json().access_token) {",
                  "                        pm.collectionVariables.set('access_token', res3.json().access_token);",
                  "                    }",
                  "                });",
                  "            });",
                  "        }",
                  "    });",
                  "}",
                  "if (!pm.collectionVariables.get('access_token')) {",
                  "    loginAndSetToken();",
                  "}"
                ],
                "_lastExecutionId": "62fab06b-64d8-40e7-a51e-4916b456cc52"
              }
            }
          ],
          "variable": [],
          "info": {
            "_postman_id": "routeforce-routing-automation",
            "name": "RouteForceRouting API Automation",
            "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
          }
        },
        "cursor": {
          "ref": "54d59f68-019f-40cc-9ebe-966bcc927553",
          "length": 7,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "b172f03e-4eed-4e5b-9f99-437fde9486a4",
          "scriptId": "e6f6af9f-4ed4-4a1d-a4b6-c3d622cac3aa",
          "execution": "64e2c379-813a-4c4f-99f7-5685bf321f0c"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Status code is 200 or 201",
          "message": "expected [ 200, 201 ] to include 400",
          "stack": "AssertionError: expected [ 200, 201 ] to include 400\n   at Object.eval sandbox-script.js:1:3)",
          "checksum": "4c72ea732a2040848ba28d458b58631f",
          "id": "46bee749-b5bf-4759-ac34-c6bdf22c6251",
          "timestamp": 1755439243539,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 3,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "d0e965f4-6c16-4059-a7aa-f53d091ee72e",
          "name": "API v1 Routes (POST)",
          "request": {
            "url": {
              "path": [
                "api",
                "v1",
                "routes"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"param1\": \"value1\"\n}"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "033464f0-f156-46c7-b9b6-d69525611a8f",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200 or 201\", function () {",
                  "    pm.expect([200,201]).to.include(pm.response.code);",
                  "});"
                ],
                "_lastExecutionId": "56c9cd55-8be7-40b6-992b-81bcac291c04"
              }
            }
          ]
        },
        "parent": {
          "_": {
            "postman_id": "routeforce-routing-automation"
          },
          "item": [
            {
              "id": "781fe421-3c68-4755-b319-c5e56501afa3",
              "name": "Optimize Endpoint",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "optimize"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"param1\": \"value1\",\n  \"param2\": \"value2\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "1c2d720c-dc56-48c1-a194-da32d4bd9f96",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "pm.test(\"Response has expected property\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData).to.have.property('result');",
                      "});"
                    ],
                    "_lastExecutionId": "295456ac-d6f9-4659-8529-4b93424a7a19"
                  }
                }
              ]
            },
            {
              "id": "15203e8c-6dd5-4b49-9495-17668edfda9a",
              "name": "Scoring Endpoint",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "route",
                    "score"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "e6f6af9f-4ed4-4a1d-a4b6-c3d622cac3aa",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "pm.test(\"Response is JSON\", function () {",
                      "    pm.response.to.be.json;",
                      "});"
                    ],
                    "_lastExecutionId": "64e2c379-813a-4c4f-99f7-5685bf321f0c"
                  }
                }
              ]
            },
            {
              "id": "d0e965f4-6c16-4059-a7aa-f53d091ee72e",
              "name": "API v1 Routes (POST)",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "v1",
                    "routes"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{access_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"param1\": \"value1\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "033464f0-f156-46c7-b9b6-d69525611a8f",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200 or 201\", function () {",
                      "    pm.expect([200,201]).to.include(pm.response.code);",
                      "});"
                    ],
                    "_lastExecutionId": "56c9cd55-8be7-40b6-992b-81bcac291c04"
                  }
                }
              ]
            },
            {
              "id": "6edf2c34-e584-42c7-9152-be905ae91313",
              "name": "API v1 Routes (GET)",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "v1",
                    "routes"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{access_token}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "8cd3450c-ab2e-4722-b196-ff870260c3d5",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "pm.test(\"Response is JSON\", function () {",
                      "    pm.response.to.be.json;",
                      "});"
                    ],
                    "_lastExecutionId": "e07dd214-4209-4e36-b76d-156c9a43dece"
                  }
                }
              ]
            },
            {
              "id": "c90d49cb-0763-43c8-ba3e-327ef2da14b0",
              "name": "API v1 Health",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "v1",
                    "health"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "78e6b944-95e9-48a3-a37d-fab2ec1e8ffd",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});"
                    ],
                    "_lastExecutionId": "22122bf0-95f2-4f89-98a7-914875b59050"
                  }
                }
              ]
            },
            {
              "id": "8271c9c5-c6b5-488c-a2d2-f0c48f6dfd07",
              "name": "API v1 Metrics",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "v1",
                    "metrics"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "4ff42b55-be05-408a-816f-ebeae3534dd3",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});"
                    ],
                    "_lastExecutionId": "0db5b281-9605-45e4-94a9-468b69cf53d1"
                  }
                }
              ]
            },
            {
              "id": "a7a3d9bf-2601-4150-9e0b-3f150f4dcda2",
              "name": "API v1 ML Predict",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "v1",
                    "ml",
                    "predict"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{access_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"input\": \"test\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "bf29ca89-655d-4824-8408-b6ebf8d77d3e",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});"
                    ],
                    "_lastExecutionId": "da9b7b3b-1c98-4f27-a222-c19dc3f58ddf"
                  }
                }
              ]
            }
          ],
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "969c613d-54ae-45b7-8175-d08a8da64a9a",
                "type": "text/javascript",
                "exec": [
                  "function loginAndSetToken() {",
                  "    pm.sendRequest({",
                  "        url: pm.variables.replaceIn('{{base_url}}/auth/login'),",
                  "        method: 'POST',",
                  "        header: { 'Content-Type': 'application/json' },",
                  "        body: {",
                  "            mode: 'raw',",
                  "            raw: JSON.stringify({ email: 'testuser@example.com', password: 'testpassword' })",
                  "        }",
                  "    }, function (err, res) {",
                  "        if (!err && res.code === 200 && res.json().access_token) {",
                  "            pm.collectionVariables.set('access_token', res.json().access_token);",
                  "        } else if (res && res.code === 401) {",
                  "            // Register the user, then retry login",
                  "            pm.sendRequest({",
                  "                url: pm.variables.replaceIn('{{base_url}}/auth/register'),",
                  "                method: 'POST',",
                  "                header: { 'Content-Type': 'application/json' },",
                  "                body: {",
                  "                    mode: 'raw',",
                  "                    raw: JSON.stringify({ email: 'testuser@example.com', password: 'testpassword', name: 'Test User' })",
                  "                }",
                  "            }, function (err2, res2) {",
                  "                // Retry login after registration",
                  "                pm.sendRequest({",
                  "                    url: pm.variables.replaceIn('{{base_url}}/auth/login'),",
                  "                    method: 'POST',",
                  "                    header: { 'Content-Type': 'application/json' },",
                  "                    body: {",
                  "                        mode: 'raw',",
                  "                        raw: JSON.stringify({ email: 'testuser@example.com', password: 'testpassword' })",
                  "                    }",
                  "                }, function (err3, res3) {",
                  "                    if (!err3 && res3.code === 200 && res3.json().access_token) {",
                  "                        pm.collectionVariables.set('access_token', res3.json().access_token);",
                  "                    }",
                  "                });",
                  "            });",
                  "        }",
                  "    });",
                  "}",
                  "if (!pm.collectionVariables.get('access_token')) {",
                  "    loginAndSetToken();",
                  "}"
                ],
                "_lastExecutionId": "62fab06b-64d8-40e7-a51e-4916b456cc52"
              }
            }
          ],
          "variable": [],
          "info": {
            "_postman_id": "routeforce-routing-automation",
            "name": "RouteForceRouting API Automation",
            "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
          }
        },
        "cursor": {
          "ref": "01233dec-74ac-4bf7-9fd1-6570657c2041",
          "length": 7,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "6194a3bb-b72e-4c1d-a37f-c149b56faa04",
          "scriptId": "033464f0-f156-46c7-b9b6-d69525611a8f",
          "execution": "56c9cd55-8be7-40b6-992b-81bcac291c04"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Status code is 200",
          "message": "expected response to have status code 200 but got 401",
          "stack": "AssertionError: expected response to have status code 200 but got 401\n   at Object.eval sandbox-script.js:1:4)",
          "checksum": "665022f68538bcecd9c4d9758df5687d",
          "id": "e23317de-d779-4790-9476-00d5cba26e01",
          "timestamp": 1755439243557,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 4,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "6edf2c34-e584-42c7-9152-be905ae91313",
          "name": "API v1 Routes (GET)",
          "request": {
            "url": {
              "path": [
                "api",
                "v1",
                "routes"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "8cd3450c-ab2e-4722-b196-ff870260c3d5",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "pm.test(\"Response is JSON\", function () {",
                  "    pm.response.to.be.json;",
                  "});"
                ],
                "_lastExecutionId": "e07dd214-4209-4e36-b76d-156c9a43dece"
              }
            }
          ]
        },
        "parent": {
          "_": {
            "postman_id": "routeforce-routing-automation"
          },
          "item": [
            {
              "id": "781fe421-3c68-4755-b319-c5e56501afa3",
              "name": "Optimize Endpoint",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "optimize"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"param1\": \"value1\",\n  \"param2\": \"value2\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "1c2d720c-dc56-48c1-a194-da32d4bd9f96",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "pm.test(\"Response has expected property\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData).to.have.property('result');",
                      "});"
                    ],
                    "_lastExecutionId": "295456ac-d6f9-4659-8529-4b93424a7a19"
                  }
                }
              ]
            },
            {
              "id": "15203e8c-6dd5-4b49-9495-17668edfda9a",
              "name": "Scoring Endpoint",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "route",
                    "score"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "e6f6af9f-4ed4-4a1d-a4b6-c3d622cac3aa",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "pm.test(\"Response is JSON\", function () {",
                      "    pm.response.to.be.json;",
                      "});"
                    ],
                    "_lastExecutionId": "64e2c379-813a-4c4f-99f7-5685bf321f0c"
                  }
                }
              ]
            },
            {
              "id": "d0e965f4-6c16-4059-a7aa-f53d091ee72e",
              "name": "API v1 Routes (POST)",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "v1",
                    "routes"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{access_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"param1\": \"value1\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "033464f0-f156-46c7-b9b6-d69525611a8f",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200 or 201\", function () {",
                      "    pm.expect([200,201]).to.include(pm.response.code);",
                      "});"
                    ],
                    "_lastExecutionId": "56c9cd55-8be7-40b6-992b-81bcac291c04"
                  }
                }
              ]
            },
            {
              "id": "6edf2c34-e584-42c7-9152-be905ae91313",
              "name": "API v1 Routes (GET)",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "v1",
                    "routes"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{access_token}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "8cd3450c-ab2e-4722-b196-ff870260c3d5",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "pm.test(\"Response is JSON\", function () {",
                      "    pm.response.to.be.json;",
                      "});"
                    ],
                    "_lastExecutionId": "e07dd214-4209-4e36-b76d-156c9a43dece"
                  }
                }
              ]
            },
            {
              "id": "c90d49cb-0763-43c8-ba3e-327ef2da14b0",
              "name": "API v1 Health",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "v1",
                    "health"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "78e6b944-95e9-48a3-a37d-fab2ec1e8ffd",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});"
                    ],
                    "_lastExecutionId": "22122bf0-95f2-4f89-98a7-914875b59050"
                  }
                }
              ]
            },
            {
              "id": "8271c9c5-c6b5-488c-a2d2-f0c48f6dfd07",
              "name": "API v1 Metrics",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "v1",
                    "metrics"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "4ff42b55-be05-408a-816f-ebeae3534dd3",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});"
                    ],
                    "_lastExecutionId": "0db5b281-9605-45e4-94a9-468b69cf53d1"
                  }
                }
              ]
            },
            {
              "id": "a7a3d9bf-2601-4150-9e0b-3f150f4dcda2",
              "name": "API v1 ML Predict",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "v1",
                    "ml",
                    "predict"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{access_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"input\": \"test\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "bf29ca89-655d-4824-8408-b6ebf8d77d3e",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});"
                    ],
                    "_lastExecutionId": "da9b7b3b-1c98-4f27-a222-c19dc3f58ddf"
                  }
                }
              ]
            }
          ],
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "969c613d-54ae-45b7-8175-d08a8da64a9a",
                "type": "text/javascript",
                "exec": [
                  "function loginAndSetToken() {",
                  "    pm.sendRequest({",
                  "        url: pm.variables.replaceIn('{{base_url}}/auth/login'),",
                  "        method: 'POST',",
                  "        header: { 'Content-Type': 'application/json' },",
                  "        body: {",
                  "            mode: 'raw',",
                  "            raw: JSON.stringify({ email: 'testuser@example.com', password: 'testpassword' })",
                  "        }",
                  "    }, function (err, res) {",
                  "        if (!err && res.code === 200 && res.json().access_token) {",
                  "            pm.collectionVariables.set('access_token', res.json().access_token);",
                  "        } else if (res && res.code === 401) {",
                  "            // Register the user, then retry login",
                  "            pm.sendRequest({",
                  "                url: pm.variables.replaceIn('{{base_url}}/auth/register'),",
                  "                method: 'POST',",
                  "                header: { 'Content-Type': 'application/json' },",
                  "                body: {",
                  "                    mode: 'raw',",
                  "                    raw: JSON.stringify({ email: 'testuser@example.com', password: 'testpassword', name: 'Test User' })",
                  "                }",
                  "            }, function (err2, res2) {",
                  "                // Retry login after registration",
                  "                pm.sendRequest({",
                  "                    url: pm.variables.replaceIn('{{base_url}}/auth/login'),",
                  "                    method: 'POST',",
                  "                    header: { 'Content-Type': 'application/json' },",
                  "                    body: {",
                  "                        mode: 'raw',",
                  "                        raw: JSON.stringify({ email: 'testuser@example.com', password: 'testpassword' })",
                  "                    }",
                  "                }, function (err3, res3) {",
                  "                    if (!err3 && res3.code === 200 && res3.json().access_token) {",
                  "                        pm.collectionVariables.set('access_token', res3.json().access_token);",
                  "                    }",
                  "                });",
                  "            });",
                  "        }",
                  "    });",
                  "}",
                  "if (!pm.collectionVariables.get('access_token')) {",
                  "    loginAndSetToken();",
                  "}"
                ],
                "_lastExecutionId": "62fab06b-64d8-40e7-a51e-4916b456cc52"
              }
            }
          ],
          "variable": [],
          "info": {
            "_postman_id": "routeforce-routing-automation",
            "name": "RouteForceRouting API Automation",
            "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
          }
        },
        "cursor": {
          "ref": "b6f580fa-700e-4c9b-9803-822160bfb078",
          "length": 7,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "38b80a10-6314-4200-9ede-a1df2bb5b076",
          "scriptId": "8cd3450c-ab2e-4722-b196-ff870260c3d5",
          "execution": "e07dd214-4209-4e36-b76d-156c9a43dece"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Status code is 200",
          "message": "expected response to have status code 200 but got 500",
          "stack": "AssertionError: expected response to have status code 200 but got 500\n   at Object.eval sandbox-script.js:1:6)",
          "checksum": "88077207591abb7eae0749194e10f99e",
          "id": "68d80044-da4f-45e9-851e-d9f8c9f4e103",
          "timestamp": 1755439243594,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 6,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "8271c9c5-c6b5-488c-a2d2-f0c48f6dfd07",
          "name": "API v1 Metrics",
          "request": {
            "url": {
              "path": [
                "api",
                "v1",
                "metrics"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "4ff42b55-be05-408a-816f-ebeae3534dd3",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ],
                "_lastExecutionId": "0db5b281-9605-45e4-94a9-468b69cf53d1"
              }
            }
          ]
        },
        "parent": {
          "_": {
            "postman_id": "routeforce-routing-automation"
          },
          "item": [
            {
              "id": "781fe421-3c68-4755-b319-c5e56501afa3",
              "name": "Optimize Endpoint",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "optimize"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"param1\": \"value1\",\n  \"param2\": \"value2\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "1c2d720c-dc56-48c1-a194-da32d4bd9f96",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "pm.test(\"Response has expected property\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData).to.have.property('result');",
                      "});"
                    ],
                    "_lastExecutionId": "295456ac-d6f9-4659-8529-4b93424a7a19"
                  }
                }
              ]
            },
            {
              "id": "15203e8c-6dd5-4b49-9495-17668edfda9a",
              "name": "Scoring Endpoint",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "route",
                    "score"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "e6f6af9f-4ed4-4a1d-a4b6-c3d622cac3aa",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "pm.test(\"Response is JSON\", function () {",
                      "    pm.response.to.be.json;",
                      "});"
                    ],
                    "_lastExecutionId": "64e2c379-813a-4c4f-99f7-5685bf321f0c"
                  }
                }
              ]
            },
            {
              "id": "d0e965f4-6c16-4059-a7aa-f53d091ee72e",
              "name": "API v1 Routes (POST)",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "v1",
                    "routes"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{access_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"param1\": \"value1\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "033464f0-f156-46c7-b9b6-d69525611a8f",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200 or 201\", function () {",
                      "    pm.expect([200,201]).to.include(pm.response.code);",
                      "});"
                    ],
                    "_lastExecutionId": "56c9cd55-8be7-40b6-992b-81bcac291c04"
                  }
                }
              ]
            },
            {
              "id": "6edf2c34-e584-42c7-9152-be905ae91313",
              "name": "API v1 Routes (GET)",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "v1",
                    "routes"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{access_token}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "8cd3450c-ab2e-4722-b196-ff870260c3d5",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "pm.test(\"Response is JSON\", function () {",
                      "    pm.response.to.be.json;",
                      "});"
                    ],
                    "_lastExecutionId": "e07dd214-4209-4e36-b76d-156c9a43dece"
                  }
                }
              ]
            },
            {
              "id": "c90d49cb-0763-43c8-ba3e-327ef2da14b0",
              "name": "API v1 Health",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "v1",
                    "health"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "78e6b944-95e9-48a3-a37d-fab2ec1e8ffd",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});"
                    ],
                    "_lastExecutionId": "22122bf0-95f2-4f89-98a7-914875b59050"
                  }
                }
              ]
            },
            {
              "id": "8271c9c5-c6b5-488c-a2d2-f0c48f6dfd07",
              "name": "API v1 Metrics",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "v1",
                    "metrics"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "4ff42b55-be05-408a-816f-ebeae3534dd3",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});"
                    ],
                    "_lastExecutionId": "0db5b281-9605-45e4-94a9-468b69cf53d1"
                  }
                }
              ]
            },
            {
              "id": "a7a3d9bf-2601-4150-9e0b-3f150f4dcda2",
              "name": "API v1 ML Predict",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "v1",
                    "ml",
                    "predict"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{access_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"input\": \"test\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "bf29ca89-655d-4824-8408-b6ebf8d77d3e",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});"
                    ],
                    "_lastExecutionId": "da9b7b3b-1c98-4f27-a222-c19dc3f58ddf"
                  }
                }
              ]
            }
          ],
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "969c613d-54ae-45b7-8175-d08a8da64a9a",
                "type": "text/javascript",
                "exec": [
                  "function loginAndSetToken() {",
                  "    pm.sendRequest({",
                  "        url: pm.variables.replaceIn('{{base_url}}/auth/login'),",
                  "        method: 'POST',",
                  "        header: { 'Content-Type': 'application/json' },",
                  "        body: {",
                  "            mode: 'raw',",
                  "            raw: JSON.stringify({ email: 'testuser@example.com', password: 'testpassword' })",
                  "        }",
                  "    }, function (err, res) {",
                  "        if (!err && res.code === 200 && res.json().access_token) {",
                  "            pm.collectionVariables.set('access_token', res.json().access_token);",
                  "        } else if (res && res.code === 401) {",
                  "            // Register the user, then retry login",
                  "            pm.sendRequest({",
                  "                url: pm.variables.replaceIn('{{base_url}}/auth/register'),",
                  "                method: 'POST',",
                  "                header: { 'Content-Type': 'application/json' },",
                  "                body: {",
                  "                    mode: 'raw',",
                  "                    raw: JSON.stringify({ email: 'testuser@example.com', password: 'testpassword', name: 'Test User' })",
                  "                }",
                  "            }, function (err2, res2) {",
                  "                // Retry login after registration",
                  "                pm.sendRequest({",
                  "                    url: pm.variables.replaceIn('{{base_url}}/auth/login'),",
                  "                    method: 'POST',",
                  "                    header: { 'Content-Type': 'application/json' },",
                  "                    body: {",
                  "                        mode: 'raw',",
                  "                        raw: JSON.stringify({ email: 'testuser@example.com', password: 'testpassword' })",
                  "                    }",
                  "                }, function (err3, res3) {",
                  "                    if (!err3 && res3.code === 200 && res3.json().access_token) {",
                  "                        pm.collectionVariables.set('access_token', res3.json().access_token);",
                  "                    }",
                  "                });",
                  "            });",
                  "        }",
                  "    });",
                  "}",
                  "if (!pm.collectionVariables.get('access_token')) {",
                  "    loginAndSetToken();",
                  "}"
                ],
                "_lastExecutionId": "62fab06b-64d8-40e7-a51e-4916b456cc52"
              }
            }
          ],
          "variable": [],
          "info": {
            "_postman_id": "routeforce-routing-automation",
            "name": "RouteForceRouting API Automation",
            "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
          }
        },
        "cursor": {
          "ref": "30e2fa2f-2ffc-402e-a7a6-2e4b1376940a",
          "length": 7,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "0bb218eb-0aee-4c3b-aa1c-eeaedb18da99",
          "scriptId": "4ff42b55-be05-408a-816f-ebeae3534dd3",
          "execution": "0db5b281-9605-45e4-94a9-468b69cf53d1"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Status code is 200",
          "message": "expected response to have status code 200 but got 500",
          "stack": "AssertionError: expected response to have status code 200 but got 500\n   at Object.eval sandbox-script.js:1:7)",
          "checksum": "efdc197afad71a1e16dab48f4222a633",
          "id": "6942b110-6113-4bb0-9c83-88e6e75f880a",
          "timestamp": 1755439243614,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 7,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "a7a3d9bf-2601-4150-9e0b-3f150f4dcda2",
          "name": "API v1 ML Predict",
          "request": {
            "url": {
              "path": [
                "api",
                "v1",
                "ml",
                "predict"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"input\": \"test\"\n}"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "bf29ca89-655d-4824-8408-b6ebf8d77d3e",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ],
                "_lastExecutionId": "da9b7b3b-1c98-4f27-a222-c19dc3f58ddf"
              }
            }
          ]
        },
        "parent": {
          "_": {
            "postman_id": "routeforce-routing-automation"
          },
          "item": [
            {
              "id": "781fe421-3c68-4755-b319-c5e56501afa3",
              "name": "Optimize Endpoint",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "optimize"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"param1\": \"value1\",\n  \"param2\": \"value2\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "1c2d720c-dc56-48c1-a194-da32d4bd9f96",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "pm.test(\"Response has expected property\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData).to.have.property('result');",
                      "});"
                    ],
                    "_lastExecutionId": "295456ac-d6f9-4659-8529-4b93424a7a19"
                  }
                }
              ]
            },
            {
              "id": "15203e8c-6dd5-4b49-9495-17668edfda9a",
              "name": "Scoring Endpoint",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "route",
                    "score"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "e6f6af9f-4ed4-4a1d-a4b6-c3d622cac3aa",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "pm.test(\"Response is JSON\", function () {",
                      "    pm.response.to.be.json;",
                      "});"
                    ],
                    "_lastExecutionId": "64e2c379-813a-4c4f-99f7-5685bf321f0c"
                  }
                }
              ]
            },
            {
              "id": "d0e965f4-6c16-4059-a7aa-f53d091ee72e",
              "name": "API v1 Routes (POST)",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "v1",
                    "routes"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{access_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"param1\": \"value1\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "033464f0-f156-46c7-b9b6-d69525611a8f",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200 or 201\", function () {",
                      "    pm.expect([200,201]).to.include(pm.response.code);",
                      "});"
                    ],
                    "_lastExecutionId": "56c9cd55-8be7-40b6-992b-81bcac291c04"
                  }
                }
              ]
            },
            {
              "id": "6edf2c34-e584-42c7-9152-be905ae91313",
              "name": "API v1 Routes (GET)",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "v1",
                    "routes"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{access_token}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "8cd3450c-ab2e-4722-b196-ff870260c3d5",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "pm.test(\"Response is JSON\", function () {",
                      "    pm.response.to.be.json;",
                      "});"
                    ],
                    "_lastExecutionId": "e07dd214-4209-4e36-b76d-156c9a43dece"
                  }
                }
              ]
            },
            {
              "id": "c90d49cb-0763-43c8-ba3e-327ef2da14b0",
              "name": "API v1 Health",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "v1",
                    "health"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "78e6b944-95e9-48a3-a37d-fab2ec1e8ffd",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});"
                    ],
                    "_lastExecutionId": "22122bf0-95f2-4f89-98a7-914875b59050"
                  }
                }
              ]
            },
            {
              "id": "8271c9c5-c6b5-488c-a2d2-f0c48f6dfd07",
              "name": "API v1 Metrics",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "v1",
                    "metrics"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "4ff42b55-be05-408a-816f-ebeae3534dd3",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});"
                    ],
                    "_lastExecutionId": "0db5b281-9605-45e4-94a9-468b69cf53d1"
                  }
                }
              ]
            },
            {
              "id": "a7a3d9bf-2601-4150-9e0b-3f150f4dcda2",
              "name": "API v1 ML Predict",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "v1",
                    "ml",
                    "predict"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{access_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"input\": \"test\"\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "bf29ca89-655d-4824-8408-b6ebf8d77d3e",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});"
                    ],
                    "_lastExecutionId": "da9b7b3b-1c98-4f27-a222-c19dc3f58ddf"
                  }
                }
              ]
            }
          ],
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "969c613d-54ae-45b7-8175-d08a8da64a9a",
                "type": "text/javascript",
                "exec": [
                  "function loginAndSetToken() {",
                  "    pm.sendRequest({",
                  "        url: pm.variables.replaceIn('{{base_url}}/auth/login'),",
                  "        method: 'POST',",
                  "        header: { 'Content-Type': 'application/json' },",
                  "        body: {",
                  "            mode: 'raw',",
                  "            raw: JSON.stringify({ email: 'testuser@example.com', password: 'testpassword' })",
                  "        }",
                  "    }, function (err, res) {",
                  "        if (!err && res.code === 200 && res.json().access_token) {",
                  "            pm.collectionVariables.set('access_token', res.json().access_token);",
                  "        } else if (res && res.code === 401) {",
                  "            // Register the user, then retry login",
                  "            pm.sendRequest({",
                  "                url: pm.variables.replaceIn('{{base_url}}/auth/register'),",
                  "                method: 'POST',",
                  "                header: { 'Content-Type': 'application/json' },",
                  "                body: {",
                  "                    mode: 'raw',",
                  "                    raw: JSON.stringify({ email: 'testuser@example.com', password: 'testpassword', name: 'Test User' })",
                  "                }",
                  "            }, function (err2, res2) {",
                  "                // Retry login after registration",
                  "                pm.sendRequest({",
                  "                    url: pm.variables.replaceIn('{{base_url}}/auth/login'),",
                  "                    method: 'POST',",
                  "                    header: { 'Content-Type': 'application/json' },",
                  "                    body: {",
                  "                        mode: 'raw',",
                  "                        raw: JSON.stringify({ email: 'testuser@example.com', password: 'testpassword' })",
                  "                    }",
                  "                }, function (err3, res3) {",
                  "                    if (!err3 && res3.code === 200 && res3.json().access_token) {",
                  "                        pm.collectionVariables.set('access_token', res3.json().access_token);",
                  "                    }",
                  "                });",
                  "            });",
                  "        }",
                  "    });",
                  "}",
                  "if (!pm.collectionVariables.get('access_token')) {",
                  "    loginAndSetToken();",
                  "}"
                ],
                "_lastExecutionId": "62fab06b-64d8-40e7-a51e-4916b456cc52"
              }
            }
          ],
          "variable": [],
          "info": {
            "_postman_id": "routeforce-routing-automation",
            "name": "RouteForceRouting API Automation",
            "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
          }
        },
        "cursor": {
          "ref": "998fd1c6-ea00-479a-854e-d3970bb49689",
          "length": 7,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "3df9b8a0-bcc8-4a9e-aacd-e6a075cdc3ee",
          "scriptId": "bf29ca89-655d-4824-8408-b6ebf8d77d3e",
          "execution": "da9b7b3b-1c98-4f27-a222-c19dc3f58ddf"
        }
      }
    ],
    "error": null
  }
}